[
  {
    "name": "Acceleration",
    "description": "an acceleration limiter that tames edge, leaves brightness",
    "tags": [],
    "slug": "acceleration",
    "short_description": "an acceleration limiter that tames edge, leaves brightness",
    "full_description": "As requested, I\u2019ve made a dedicated acceleration limiter, like the one in ToVinyl4. You don\u2019t have to mess with Groove Wear, or highpass anything: as a result, this ends up being the \u2018high end\u2019 acceleration limiter, mastering grade and useful in situations where ToVinyl might be overkill (ToVinyl was made in an era where I still had to make \u2018amazing marketable plugins with lots of features so people would pay $50 quickly before it got all pirated etc\u2019)\n\nAh, I remember those days ;P\n\nBut now, it\u2019s different because Acceleration is free! AU, Mac and PC VST (stay tuned for a surprise on that front) and if you can\u2019t pay, go ahead and use it anyway. If you can, please do because I think the usefulness of me doing this work will become increasingly obvious, and the usefulness of me opensourcing plugin code has also become increasingly obvious. And it\u2019s brought you Acceleration, here and now.\n\nThe reason to be excited about that is, Acceleration\u2019s not a simple filter. It pretty much targets exactly the digital behavior that creates Gibb effect overshoots (the reason you often have to pad heavily limited material down to stop it being crackly and glare-y) and would probably work very well as literally an acceleration limiter for record cutting heads. But, in a largely digital world, it might be even more useful because you can feed it any old ITB mix, any weird edgy source material, and it\u2019ll clean up the nasty digital brightness while not sounding like it\u2019s doing anything. Check the video (it should be relatively obvious if you\u2019ve got half decent tweeters) and try it out. The key is to not try and get the apparent volume of the highs to be less: instead, you\u2019re going after the character, or the presentation. If highs seem to be coming forward with nasty spikey extra energy, Acceleration will fix that tonal problem without altering the basic mix balance.",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Acceleration2",
    "description": "Acceleration, better! Updated for high sample rate and more extreme effect",
    "tags": [
      "Latest"
    ],
    "slug": "acceleration2",
    "short_description": "Acceleration, better! Updated for high sample rate and more extreme effect",
    "full_description": "Acceleration2 is an updated version of my high-frequency limiter, Acceleration. It\u2019s like a brightness control that doesn\u2019t really take away apparent brightness, just glues it really hard. Acceleration limiting is what you\u2019d use mastering to vinyl, to avoid burning out the cutting head: it will get you a nice retro tone without obviously coloring things. It is not an \u2019emulation\u2019 of any specific gear: real mastering engineers are not looking for \u2019emulation of Neumann sound\u2019 or anything like that, they\u2019re looking to get the functionality of this in the most colorless way.\n\nIt\u2019s been updated to work exactly the same at all sample rates (the previous one had issues adapting to them) and now has more intense depth of effect: if you crank it up you can make things real soft and dull. Don\u2019t do that :) the purpose is not to do what you could do with an EQ, the purpose is to glue things and take the edge off the super-highs without harming the sparkle and air of the recording. Acceleration2 can do that real well: you might even find it useful if you\u2019re doing very digital mixes and avoiding my other stuff like Console7. If you put this on the mix buss of an otherwise super-digital mix, you can make the highs prettier without making them any darker or duller. Do that by applying only small amounts of the Limit control.",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ADClip7",
    "description": "the original Airwindows loudness maximizer/ peak control",
    "tags": [],
    "slug": "adclip7",
    "short_description": "the ultimate Airwindows loudness maximizer/ peak control",
    "full_description": "Finally! The newest version of Airwindows\u2019 famous ADClip is out, and it\u2019s Mac and PC VST for the first time, and it\u2019s free! If you have dense, busy mixes and you want to push their loudness to the max, this is the one you want. And, oddly, if you\u2019re mastering for streaming services or iTunes and don\u2019t want to do a thing besides convey your mix at a set LUFS and intersample peak level, this is still the one you want :)\n\nHere\u2019s how it works.\n\nYou\u2019ve got a boost control, a soften control, an enhance control, and a popup or multi-function control with three options: normal, gain matched, and Clip Only. These are all interactive, so I\u2019ll explain them in the context of that \u2018mode selector\u2019 popup.\n\nIn normal mode, boost makes things louder. This is a clipper, and no more polite method can ever make things louder than a clipper: you need to either give it a busy and complicated mix to mask the clip artifacts, or use it to snip off non-tonal percussive peaks, at which it excels. A clipper does NOT produce \u2018limiter-like unvarying block of sound\u2019, and you shouldn\u2019t try to achieve that. A clipper gives you punchy but LOUD, and tries to retain all the dynamics you\u2019re feeding it, rather than smooth them out for a \u2018clean\u2019 sound.\n\nThe soften control manages the way that high frequencies enter and exit the clips. It algorithmically reshapes the edges of your clip, stopping it from getting digital glare and fizz. This is the heart of ADClip (also present in my simpler clippers, not counting One Corner Clip, which is still upcoming).\n\nThe soften control also balances the outputs of two separate energy-fill algorithms, one for bass and one for highs. This was the response to a certain other loudness maximizer that launched proclaiming clippers were dead, and which is still promising its version 2 (and some bugfixes) while ADClip has gone far beyond it. Turned out the secret of that one was an elaborate way of massaging clipped-off loudness back into the signal, in a way that was supposed to be transparent but \u2018cracked\u2019 into artifacts when pushed too hard. The algorithms were presumably very sophisticated, which tends to just make the breaking point more obvious when you hit it.\n\nThe Airwindows version is a completely different, cruder and more direct version of doing the same thing, so when you slam the heck out of ADClip7, you get a deep bass slam that \u2018overhangs\u2019 a bit to add weight, and still fits into the clipped output. And you get the softened, analog-style clips to add \u2018heat\u2019 and overtones, but you also get a high-mids reinforcement that normally just highlights bright transients that would otherwise be lost to the clipping. And the Enhance control lets you go between purely \u2018analog clip\u2019 energy, and these added reinforcements.\n\nThe gain-matched mode has two uses. You could use it to \u2018set your slam level\u2019 in a way guaranteed not to trick you into thinking louder is better: it turns the output down, so instead of hearing everything get bigger and louder, you just listen for the point that the clipping\u2019s adversely affecting the sound. Then you can flip back to normal mode, if that\u2019s what you wanted (maximum loudness without blatant grunge). Or, you can ignore the slam and use gain-matched mode as I demonstrate in the video: ADClip7 already suppresses intersample peaks when they\u2019re part of clipping, already reinforces energy lost to clipping, so you can use it in conjunction with a tool like Youlean\u2019s loudness meter to dial in a specific intersample peak level for iTunes or other such picky streaming services. It\u2019ll work like padding the output. and if you\u2019re already in the ballpark LUFS-wise, ADClip is a far more sophisticated tool than just limiting and then padding the output to get to your \u2018true peak\u2019 target.\n\nThe last mode is Clip Only, and rather than selecting the various algorithm outputs individually, this version of ADClip gives you them at their respective loudnesses, combined. That means you can engage this mode to hear ONLY the clips, and check that you\u2019re not hearing any recognizable \u2018scrunch\u2019 of continuing clippage. But since you\u2019re also hearing the enhance outputs, you can adjust softness and enhance level to balance the stuff being introduced to the sound. My recommendation is to set the controls so no one type of artifact predominates: it\u2019s not necessarily great to throw in a bunch of \u2018enhance\u2019 bass just because you can. If you\u2019re hearing that much of it that you\u2019re tempted to use it as an effect, you\u2019re definitely also over-slamming your music.\n\nSo my recommendation in 2017 heading to 2018, is to use ADClip7 in gain-matched mode, to keep that \u2018true peak\u2019 measurement within the Mastered For iTunes requirements. I\u2019m sure not everybody will stick to that, but I\u2019m happy to say it is actually quite good for doing that, and if people want to smash stuff with it and enjoy the bass thud, that\u2019s their affair. Remember a clipper makes stuff dynamic and punchy, not \u2018flattened out\u2019: use a limiter if you need dynamically flat, or perhaps both. In this modern era of replay gain, I\u2019m going to suggest that dynamic and punchy is where it\u2019s at. Learn the lessons of the LUFS meter! They\u2019re available to us all, now.",
    "categories": [
      "Clipping"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ADClip8",
    "description": "the ultimate Airwindows loudenator/biggenator",
    "tags": [
      "Latest"
    ],
    "slug": "adclip8",
    "short_description": "the ultimate Airwindows loudenator/biggenator",
    "full_description": "The last time we saw an Airwindows ADClip, the full version rather than a neat and tidy stripped-down version, was October 8\u2026 of 2017. It's been more than six years since the king of loudenators saw an update, in part because ClipOnly got followed by ClipOnly2, which was such a good high-sample-rate clipper that it was all I needed for years. ClipOnly2 is still the cleanest, purest way to take small amounts of peak clipping to your signal: it's great as a safety clip.\n\nBut, while working on a new version tailored to the needs of Final Cut Pro (which is also coming), something new arose.\n\nWhat would happen if the FCP version, which has a built-in slew clip and makes heavy use of Golden Ratios to arrive at its results, was adapted to a new ADClip? What if it was scaled to regular clipping levels, given a ceiling control to dial back its maximum to taste, what would happen if it was stacked up with a whole array of FinalClips in series like some of the other Airwindows plugins like to do? We're no longer dealing with ClipOnly2. Much like the original ADClip7, we're adding extra stuff and running a more complicated algorithm. But we've still got some of the special features of ADClip7, like the gain-matched mode and the Clips Only setting.\n\nEnter ADClip8. It has more settings. They go Normal, Gain Matched, Clip Only\u2026 then, Afterburner, Explode, Nuke, Apocalypse, and lastly Apotheosis. No, really! That's the new settings.\n\nWhat they represent is added stages, so Normal is a single stage (as is Gain Matched), Clip Only shows you where clips begin, and then the new modes are named for the sounds they produce, at two, three, four, five and six stages of special slew-clipped ClipOnly2 style sample-rate aware clipping. In practice, think 'bigger, bassier, thicker' as you continue to add stages. You may not always want to run the full six stages, you might want to voice it to your needs.\n\nThe interesting part is how all this affects intersample peaking. Because the process brings in slew clipping and repeated use of the ClipOnly2 algorithm, which resists harsh entry into and exit from a clipped state, dialing up ADClip8 and cranking the gain produces an intensely saturated sound that resists intersample peaking not through filtration, but mechanically. It will literally put in transition samples to resist the intersample peaks from going beyond regular clipping. The more stages, the more thoroughly it resists 'true peak'.\n\nI would say don't use this for evil but who am I kidding. If you beat everyone with 'competitive loudness' this way, please never expect me to listen to what you did, I'll be hiding under my bed, regretting everything. :)\n\nFor what it's worth, 'Apotheosis' mode should also be a very nice way to do extremely moderate transparent clipping of challenging material: ClipOnly2 will still be more transparent but only sounds like a slightly brighter version of ADClip8 Normal mode. Apotheosis mode simply does more and I wouldn't blame anybody for preferring it. Hope you like ADClip8!",
    "categories": [
      "Clipping"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ADT",
    "description": "a double short delay tap with saturation",
    "tags": [
      "Latest"
    ],
    "slug": "adt",
    "short_description": "a double short delay tap with saturation",
    "full_description": "ADT means \u2018artificial double-tracking\u2019. You could also call it fixed flanging. It\u2019s a single short delay, as heard on lots of Beatles tracks. It\u2019s now my job to explain what\u2019s different about the Airwindows ADT, what you can do with it beyond the obvious \u2018stick it on like a preset and pretend you are a Beatle\u2019, and why you\u2019d bother.\n\nWith the Airwindows ADT, you get two delay taps (making it A3T?) and an important feature: the mix sliders used to apply the delayed taps are \u2018attenuverters\u2019. That\u2019s a word from Modular Synthesizer Land, which means you get both output level control and the ability to invert the output. Here\u2019s why that matters.\n\nIf you apply a fixed delay tap, you get an effect called \u2018comb filtering\u2019 where you\u2019re emphasizing and cancelling frequencies based on how long the delay is. You\u2019d think that would sound really strange, but it\u2019s the same way you hear a direct sound and also the sound bouncing off a floor or wall: we naturally hear through comb filtering rather well, which is why room design is important in studio control rooms. (you could have a bass frequency getting cancelled, be unable to hear it at all at your listening position, and yet things will still sound perfectly normal.) Applying a quick delay like this can make your sound richer and more textural, and a little more ambient. If it\u2019s a very short delay it may not be heard as an echo at all.\n\nBut, if you\u2019re using an INVERTED delay tap, something else happens: the shorter the delay and the closer to the volume of the dry signal, the more it\u2019ll cancel out the bass. You\u2019ll still get all the comb filtering effects, but you\u2019ll also be removing lows, either the deep lows or even low midrange if the delay\u2019s really short.\n\nIf you blend two taps that are both inverted, you can cut bass while averaging out the comb-filter effects. If the taps are in phase (not inverted) what you\u2019re doing is reinforcing the bass, because the cancellation effects will run out below a certain frequency and just add together. All this is using very quick delays, though ADT lets you lengthen them to where they\u2019re slapbacks. Don\u2019t be too distracted by that, part of what makes ADT its own effect is the ability to shape the tone with delays too quick to hear as echoes.\n\nFinally, now that you know you can cut bass using these very quick delays, or reinforce it, or any combination you like\u2026 there\u2019s a headroom control. ADT will distort like crazy using low headroom. That can be used as a distortion effect\u2026 but it\u2019s not just ordinary distortion, it\u2019s a combination of Spiral into Console5\u2019s buss (PurestConsole, for clarity and well-behavedness). These don\u2019t perfectly cancel out. Instead, it produces a slightly leaned-out, skinnier tone to complement the way ADT fattens things up. If you\u2019re using it to thin bass, it\u2019ll be even more effective. If you\u2019re reinforcing the body of the sound, it\u2019ll color things in a subtle but interesting way. And of course if you love it, you can set up mixes that way (swap out Console5Channel for original Spiral, either on mix elements you\u2019d like a little thinner and more energetic, or the whole thing). Sometimes there are new types of coloration that owe nothing to EQ or traditional processing: this is one of those times.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Air",
    "description": "a different bright EQ from any other. Requires 44.1K",
    "tags": [],
    "slug": "air",
    "short_description": "a different bright EQ from any other. Requires 44.1K",
    "full_description": "See Air2 for more on this. Air is the same, but simpler, and restricted to one sample rate so that if you're at a higher sample rate, the effects will shift up in frequency, possibly making them inaudible.",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Air2",
    "description": "a different bright EQ with silk tone and high sample rate support",
    "tags": [],
    "slug": "air2",
    "short_description": "a different bright EQ with silk tone and high sample rate support",
    "full_description": "Here\u2019s what you get: Air2 has three treble-boost bands, Hiss, Glitter and Air. The first two are very like what\u2019s in Energy2, but Air2 is NOT the same: it\u2019s a different algorithm, not done the samw way Energy2\u2019s \u2018Rat\u2019 band is done, and it has a broader, softer air band that\u2019s less \u2018raw harsh energy injection\u2019 and more \u2018bright and pretty\u2019.\n\nAnd then, they all run through a \u2018Silk\u2019 control\u2026 inspired by but NOT the same as the Neve Portico Silk circuit. That is a real hardware transformer biased into second harmonic creation by a DC current. Air2\u2019s Silk control is the same thing as Single Ended Triode (which you can download and use already) but only applied to the highs out of Air2, so it\u2019s the same general concept but is not a clone of the Portico preamp. Plus if they freak out I will rename it to \u2018Sow\u2019s Ear\u2019: it\u2019s part of a treble brightener and the same basic functionality and as far as I\u2019m concerned, nothing is stopping me from asymmetrically distorting highs, and Silk is the best general term for what that does. Except with mine you can push it too far for effect, because of course you can :)\n\nAnd finally, unlike Energy2, the Dry/Wet control for Air2 strikes a new balance between the Energy style of increasing the effect, and the traditional Dry/Wet control. New with Air2, you can now turn it to full-wet and get ONLY the output of the brightener bands. They\u2019re not exactly filters but they act like it, and by adjusting them against each other you can produce insanely treble-boosted sounds and wipe out everything else using Dry/Wet. The way it works is, up to 75% (0.75) you still have full volume Dry. It won\u2019t re-balance your track, just add whatever Air2 highs you\u2019re looking for. Then, between 0.75 and 1 (full Wet) the dry goes away, so if you crank it up all the way you get the fullest extreme, but for most normal use it\u2019s like Energy2, taking an unvarying dry signal (which is NOT undersampled) and adding however much of the effect you like.",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "AngleEQ",
    "description": "a strange and colorful EQ",
    "tags": [
      "Latest"
    ],
    "slug": "angleeq",
    "short_description": "a strange and colorful EQ",
    "full_description": "This would have been amazing, had it worked. Instead, it's astonishing, and is never going to be your main EQ, or mine, ever.\n\nSeriously, it'd be a world of hurt, and don't do it. Not even while sandwiching it with uLaw plugins.\n\nSince you can't use it for real work, what good is it? Also, why can't you use it for real work?\n\nIt's not just that its response is irregular and non-flat. You could deal with that. The trouble is, it's a new attempt at filtering, meant to do a super-sharp but non-resonant lowpass for a crossover.\n\nAnd it does a lot of that! But in the process, it scrambles the audio so pervasively that if you try to assemble an EQ out of subtracting it from the dry signal (a neat trick for making 'flat' be pristine beyond all reason) the 'highpass' you get from subtracting the lowpass, is a complete mess full of phase-rotated bass.\n\nSo I came up with a way to get a real highpass, even with multiple stages of this filtering. And I got one, and even that is decidedly strange.\n\nSo, AngleEQ is a highpass for a treble band, a lowpass for a bass band, and a midrange that has a separate highpass and lowpass, just because they will not combine in any suitable way anyhow. Then you've got a dry/wet because combining any of these bands with dry brings even more havoc, and then the dry/wet also is an attenuverter and lets you apply the EQ inverted because it wasn't doing enough damage already.\n\nHow does it sound? Very opaque, weirdly resonant, perhaps like the largest color-style EQ on the biggest most overdesigned mixing board ever. Nothing about it is well behaved, it cannot do 'clean' to save its life, it exists only to make sonic trouble and produce strange pungent tones full of resonances and cancellations.\n\nJust because it's not a proper EQ doesn't mean you can't have fun. Hope you enjoy AngleEQ!",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "AngleFilter",
    "description": "the synth-style extension of AngleEQ",
    "tags": [
      "Latest"
    ],
    "slug": "anglefilter",
    "short_description": "the synth-style extension of AngleEQ",
    "full_description": "So while I do stuff like make new forms of reverb (going from 5x5 matrices to 6x6!) and try to invent genres of music, there's this funny little filter\u2026\n\nAngleFilter is an offshoot of AngleEQ, which was too strange by itself but ended up turning into the EQs used in PointyGuitar and ChimeyGuitar. This is probably why those can get weird when you set the controls too strangely, and AngleFilter gets even weirder. It was meant to be a nonresonant filter, just a very steep brickwall type thing, but instead it does crazy things with phase around the cutoff, and grows steeper and more intense the more you lower that cutoff.\n\nSince it was so untameable I just put a full-on waveshaper on the output, so its excesses won't blow up to huge dB spikes. There's a Hard control, and what it does is it makes life hard for you in setting the other controls. Mostly it goes insane over lower bassy settings, but it can be set to produce a dull roar at higher frequencies too, and the whole design of the plugin is for letting you modulate the cutoff hyper-aggressively without problems.\n\nI'm working on things like very serious reverb upgrades, but sometimes you just gotta have fun too :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Apicolypse",
    "description": "a re-release of my old API-style color adder, exacly as it was",
    "tags": [],
    "slug": "apicolypse",
    "short_description": "a re-release of my old API-style color adder, exacly as it was",
    "full_description": "Apicolypse works the same way Neverland did. It\u2019s a drop-in replacement for old mixes, and was a precursor to BussColors. It\u2019s got a simpler method of generating its dynamic impulses, making them a sort of continuous spectrum between the low-level and high-level sounds. Like Neverland, it\u2019s 44.1K though it will still function at any rate you like (sort of pitched up): like Neverland, it\u2019s got a hardness control that at 0 is the \u2018Density\u2019 algorithm, at 1.0 is straight digital clipping at the extreme, and at any setting between is a sort of hybrid that turned out to not be the greatest: a switch from perfectly clean, to soft-clip at any desired transition point. Technically if you had it so it only kicked in on hot peaks, it\u2019d be hard to find fault with it: I don\u2019t recommend setting it (on this or any Character plug or \u2018Crystal\u2019) to a position where soft-clip kicks in at very low level. Either do Hardness at zero, or high enough that most of the audio stays \u2018un-distorted\u2019: you can do what you like, though, I\u2019m not the boss of you :)",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "AtmosphereBuss",
    "description": "Console5 processing with powerful new acoustic distance effects",
    "tags": [],
    "slug": "atmospherebuss",
    "short_description": "Console5 processing with powerful new acoustic distance effects",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "AtmosphereChannel",
    "description": "Console5 processing with powerful new acoustic distance effects",
    "tags": [],
    "slug": "atmospherechannel",
    "short_description": "Console5 processing with powerful new acoustic distance effects",
    "full_description": "I\u2019m pleased with this one: it\u2019s in the Console5 family (so its parts can be interchanged with any other Console5 plugins) but it represents a few different breakthroughs, and if they work out, I\u2019ll be keeping them.\n\nFirst, this is a multi-stage slew clipper. The effect\u2019s a bit like PDConsole, a gluing and taming of bright digital highs: but, where PDConsole uses the algorithm of PurestDrive to get a more analog mixing-desk kind of sound, Atmosphere\u2019s many stages of slew clipping (across fourteen samples, each with a different maximum slew) enforces the behavior of free air and acoustic distance. This has been a goal for quite a while, but I\u2019ve never got results like these before (might be worth fitting a more exaggerated version into a \u2018Distance 2\u2019, if people like). It\u2019s not calibrated to overwhelm, but the scale of your mix should be huge, and since it\u2019s an extended-window slew clipping effect your quieter, subtler sounds don\u2019t get muddied.\n\nThis type of processing steps on the annoying digital harshness with a heavy foot, but doesn\u2019t directly EQ: the results you get will depend on what it would be like to have your sound blasting away through a perfect playback system at a distance of ten to thirty feet. If you need up-close, bright and loud sounds, you\u2019ll need to use another system (such as PurestConsole), this one is for space and scale. It\u2019ll probably work well for some electronic mixes if they\u2019re meant to sound loud, it\u2019ll give a real hugeness to rock or metal mixes (so long as the desired effect is more \u2018live gig\u2019 in scale) and it will really come into its own summing orchestral stuff from virtual instruments (or anything with similar scale/power needs).",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Aura",
    "description": "a new kind of resonant lowpass EQ",
    "tags": [
      "Latest"
    ],
    "slug": "aura",
    "short_description": "a new kind of resonant lowpass EQ",
    "full_description": "So this turned out to be a bear to bring up to date, because the original code was insane. I\u2019m not quite sure how I got there, and I was still bugfixing long after the demo video was made. You\u2019ll find the actual version of Aura has a slightly wider range, better adjustability in the low range, and the Dry/Wet control gets a touch of added functionality: as you go full wet, the resonant quality gets enhanced, so be sure and explore the half-wet or barely-wet settings. If it\u2019s too scary-resonant, just pull it back a teeny bit and it should cooperate.\n\nAnd this one is a bit scary as it seems to be channeling analog filters. I agree that it would be great to have this principle work as a full-range, synth-style filter that goes all the way into the bass. I can\u2019t do it, though: it freaks out when I try, and it took endless hacking just to expand it a bit from what you see in the video. This is the algorithm derived from GrooveWear, which averages the rate of change OF the rate of change of the waveform. It\u2019s not even slightly normal. You get what you get.\n\nBut what you get, is a lowpass with a striking resonant edge that\u2019s implemented in a totally new way, and which has no pre-ring at all\u2026 and the way it gets its sound gives it an extraordinary sonority. Pretty much anything in audio that you\u2019d want to project loudly as if from an acoustic space, can be given a sheen and glisten and sonority with Aura. I\u2019ve got it extending down fairly low into the midrange if you\u2019re at 44.1K or so: that should help if you need to use it at high sample rates, because the technique for doing it is not exactly cooperative and I found no way to simply tune it down: everything\u2019s so geared to slew rate between samples that it\u2019s best used for treble effects. I think it\u2019s got a useful tonality for its treble manipulations, and I\u2019ve spent a lot of time coming up with interesting ways to cut or enhance treble. This one\u2019s good at what it does. You can really do stuff with the texture of your mix by aggressively using Aura on suitable elements.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "AutoPan",
    "description": "for getting some organic stereo movement into your mix",
    "tags": [
      "Latest"
    ],
    "slug": "autopan",
    "short_description": "for getting some organic stereo movement into your mix",
    "full_description": "This is pretty simple: I got asked for an auto-pan. So I Airwindowsified it a bit, and here you go.\n\nIt\u2019s set up to get some nice organic movement into your mix in various ways. Rate is how fast it goes (from nearly static, to a rapid flutter).\n\nPhase means each channel relative to each other: on either side, you get full L-R and back again. At the center, it\u2019s a mono tremolo (though, for stereo channels). Off-center, it\u2019ll offset the sines in such a way that the sound sets up a swirling, circular stereo motion: swooping forward from the side, going across, and then back to near-silence again. Basically, centered is \u2018not side motion\u2019 and to the sides is \u2018more side motion\u2019.\n\nWide just cuts the mid channel. What this does for the auto-panning is, it\u2019ll make stuff stretch out a bit beyond the edges of the speakers. If you\u2019ve got something full to the side then you\u2019ll get a bit of the opposite on the other speaker. Full wide is \u2018only side channel\u2019 and you\u2019ll hear it in both because that\u2019s what you get when you have only side channel: centered \u2018mono\u2019 sound, just out of phase completely. You\u2019ll probably want to use smaller amounts of this, unless\u2026\n\nDry/Wet is the final useful thing here. You can set up extreme stuff, like full Side or weird motions with Phase, and then just dial it back with Dry/Wet and it\u2019ll give you a nice subtle activity of whatever you set up: don\u2019t sleep on Dry/Wet here, you can get nice effects through using aggressive settings elsewhere and just sneaking in a little Dry/Wet. Especially if you\u2019re doing extreme things with Wide, Dry/Wet is how you can integrate that into a sound so it\u2019s just a nice little subtle motion that\u2019s interesting. Or of course you can just crank it out, I\u2019m not your mom :)",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Average",
    "description": "a distinctive sort of lowpass filter",
    "tags": [
      "Latest"
    ],
    "slug": "average",
    "short_description": "a distinctive sort of lowpass filter",
    "full_description": "This plugin is an exploration of a fascinating filter type that, I think, is really underrated. It\u2019s a straight-up extremely simple averaging filter. If you set it to integer values, it exactly averages that number of taps on the input audio (adjacent samples). If you pick in-between values it interpolates, causing the \u2018frequency\u2019 of the filter to smoothly blend between the values.\n\nThere\u2019s a reason you don\u2019t see this filter used for lowpasses: it\u2019s not technically correct. In fact it whacks a great big cancellation node into the high frequencies, and the tone (while pleasing) is very obviously affected by this. It\u2019s a bit of a flangey quality.\n\nBUT, we know better than to be limited by technical concepts, right? After all, the classic Scream Tracker resonant lowpass is known to be broken, and that has a real character to it. And even the Roland Supersaw is known to have some quirks that make it what it is\u2026\n\nAverage has a fantastic tonality once you accept the response quirks. You can dial in the notches to suppress unwanted content, and (in a post-video revision) it\u2019s got a dry-wet control so you can moderate the effect\u2014and, typically for Airwindows, if this dry/wet is set to full wet, the calculations for doing that drop out of the plugin entirely so you\u2019re not doing an unnecessary multiply.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BassAmp",
    "description": "an old plugin with new tweaks, that gives some bass guitar tones",
    "tags": [
      "Latest"
    ],
    "slug": "bassamp",
    "short_description": "an old plugin with new tweaks, that gives some bass guitar tones",
    "full_description": "This is BassAmp. (I\u2019ve been asked to do amp sim type plugins, so it\u2019s a start). Back in the day I experimented with some of these things, though I\u2019ve always been more interested in wiring up physical hardware, especially for guitar distortions and things. I\u2019ve brought this one up to date in some ways, debugging a problem with the \u2018dub\u2019 channel and using my modern techniques for dithering to the floating point bus, and so on.\n\nIt\u2019s got basically a bright channel, midrange (which is just dry, as a slider), a bass channel with a characteristic woolly tone that has a kind of noisy blur on the small amount of treble it does have, and a \u2018sub\u2019 channel that really doesn\u2019t work, so use it as a crazy special effect. BassKit might get you a cleaner sub-octave, but this will give you a trashy sub-octave that\u2019s mostly garbage, even on a single-note line. So you\u2019ll be leaving it off, I think.",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BassDrive",
    "description": "an old secret weapon, like a kind of bass amp",
    "tags": [
      "Latest"
    ],
    "slug": "bassdrive",
    "short_description": "an old secret weapon, like a kind of bass amp",
    "full_description": "There was this plugin called BassDrive\u2026 and it was a secret weapon. It was unlike any Airwindows plugin because it ran on painfully hard-coded biquad filter code, looked up from calculators online: which also meant it was locked to 44.1K (at least, to get the expected behavior). But it was also unlike anyone else\u2019s plugin of that nature, because it used lots of Airwindows overdrive inside it. The controls seemed to say normal EQ things like \u2018bass, mid, treble\u2019, but they didn\u2019t give you those things, they gave you funny bands voiced in a weird way.\n\nAnd this is because it was the eccentric Airwindows way of trying to mimic the SansAmp Bass DI. Not the pedal form\u2026 the rackmount RBI version.\n\nThe weird part is I ended up not liking that one (I came to prefer the pedal-form VT Bass) but before I got rid of it, I\u2019d gone and shaped biquad filters to its voicings. But then, I implemented them strangely (note the intense notch at 10K, not present in the real one!) and made \u2019em overdrive a lot more. So it\u2019s a lot LIKE a SansAmp RBI, but then again it\u2019s totally not because it turned into its own thing.\n\nAnd then, even though this could be used for bass guitars, I started to hear about how it was working as a secret weapon on heavy guitar sounds\u2026\n\nSo this is exactly how the \u2018secret weapon\u2019 plugin was. It\u2019s the blast from the past, now also available for Mac, Windows and Linux VST. And I know how eccentric it is, but sometimes that\u2019s the point. I\u2019m working on a bunch of stuff that\u2019s meant to be normal (or at least flexible). This ain\u2019t. It\u2019s just weird. If you hate it, it\u2019s not getting any better, abandon it with a clear conscience. On the other hand if its dark magic speaks to you\u2026 then hey, enjoy the new weapon. And rest assured that people who need good behavior out of their plugins will not be finding your secret, because BassDrive will scare them away first.",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BassKit",
    "description": "centered bass reinforcement with subs fill. Clean and controllable",
    "tags": [
      "Latest"
    ],
    "slug": "basskit",
    "short_description": "centered bass reinforcement with subs fill. Clean and controllable",
    "full_description": "This is much like DubSub or DubCenter, except it\u2019s strictly mono bass and is designed to be super controllable. The controls are simplified and kind of optimized so only good-sounding results come out. You need to have good subwoofers (or use SubsOnly to test) to use the Sub output, otherwise you may not be able to hear what you\u2019re doing as it\u2019s much deeper and more filtered than you get with most DubSub patches (the filters are somewhat rearranged).\n\nThe Bass reinforcement works like if you were using the head bump in ToTape, except it\u2019s mono-only so it will only reinforce usefully. Because BassKit is meant for mastering and 2-buss duties, and not the full range of madness available in DubSub/DubCenter, it uses the bass and sub augmentation ONLY as additions to dry: never \u2018wet only\u2019. You can exaggerate it, but the intention is to make it easy to add bass and subs in a sensible, controlled way. I hope it proves useful, and I know it will be more well-behaved than DubSub in case that one was too unmanageable for normal use :)",
    "categories": [
      "Bass"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Baxandall",
    "description": "a killer general-purpose EQ",
    "tags": [],
    "slug": "baxandall",
    "short_description": "a killer general-purpose EQ",
    "full_description": "Baxandall starts with a two-band filter that, zeroed out, subtracts an inverse lowpass from a lowpass and gives you bit-identical, perfectly transparent sound. That\u2019s if you\u2019re being subtle. If you boost or cut, lows or highs, it gives you the gentle broad boosts you expect, centered on the vital midrange. As you get more intense with the boosting, it gets more extreme, to where if you\u2019re doing double boosts to get an intense exaggerated sound, a mids notch will naturally develop to accentuate the boosting. The whole voicing shifts to accomodate what you want to do with it, and you can play bass against treble or vice versa to get really wild voicings, such as for extreme EQ treatments (in terms of lows or highs)\u2026 but using the same natural Airwindows Baxandall tonality, so it won\u2019t sound \u2018filtery\u2019, it\u2019ll sound like it was meant to be that way.\n\nAirwindows Baxandall uses my interleaved biquad filters (original, purest form, not meant for rapid automation) that run inside a Console5 instance to deepen the sound of the filter.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Baxandall2",
    "description": "Baxandall, extended and made more powerful",
    "tags": [
      "Latest"
    ],
    "slug": "baxandall2",
    "short_description": "Baxandall, extended and made more powerful",
    "full_description": "Sometimes the only way you can make something bigger is to strip it down. I'd been exploring EQs for the purposes of putting one in a future Console version, and revisited Baxandall\u2026 well, by the time I was done, a lot was different and a lot was still the same. It still uses my interleaved biquad filters (an unusual choice that helps the shallowness of the filter slopes in this very 'broad strokes' EQ). It still uses the technique of sweeping those filter center points to make increasingly extreme effects as you get crazier with it: it gets almost synth-like, starting with general 'tilt EQ' effects of great subtlety but bringing in wild boosts as you crank it. The purpose of that is to do the sort of anti-Soothe thing I favor: if you have a track and it's carrying highs, in no way do you need to also have full bass on it. Instead, you build a mix out of composite parts each of which bring a different voicing to the mix. And Baxandall2 is designed to get you to whatever broad EQ place you need, from a place of naturalness.\n\nBut there's nothing natural about the cranked-up 24dB boosts and cuts you can now do. This is newly tuned with the filter sweeping to take you straight past the original Baxandall's settings into wild new places. Also, the original Baxandall was made more forgiving by running it inside an internal Console processing, analog-ifying it. But it turns out that I can leave that to actual Console versions and strip Baxandall2 down to the guts of it, which actually gave it a lot more power.\n\nThis is Baxandall in the form that I will need it, for doing things with. But since it's Airwindows, you can use it too. And you can still use the original Baxandall, that's not going anywhere and has its own merits. Baxandall2 is just\u2026 more, at any cost, no holds barred. Hope you like it.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Beam",
    "description": "a wordlength reducer that tries to heighten sonority",
    "tags": [],
    "slug": "beam",
    "short_description": "a wordlength reducer that tries to heighten sonority",
    "full_description": "Beam\u2019s a wordlength reducer like Dark, but instead of seeking to always give you the least departure from whatever trajectory the audio\u2019s on (like Dark: and that suppresses highs, including noise in the highs), Beam seeks to make all waveforms converge on the same angle (either ascending, or descending). Imagine a world of triangle-waves, the deepest frequencies taking the most energy, and progressively quieter until high frequencies are in balance with the lows. That\u2019s Beam. Beam has a \u2018focus\u2019 control that sort of optimizes the frequency range it\u2019s providing a window into (as in, lower settings SEEM to encourage focus on deeper sounds, higher settings SEEMS to highlight the treble, and the 0.5 is set to zero in on where our hearing\u2019s most sensitive.) And it uses those frequencies, across a broad range of possible sounds, to emphasize the energy and depth of the audio to shocking effect.\n\nExcept, it\u2019s not. It doesn\u2019t know what a frequency is. It\u2019s only \u2018dithering\u2019 in such a way as to try and accentuate certain waveform slope angles, and has no real power to do even that beyond statistical averaging of a bunch of samples.\n\nOn top of that, its noise floor is WEIRD. Dark gates into silence, sort of well-behavedly. Normal dithers become noise seamlessly. Beam goes nuts and screams, and the only thing I can say for it is, raw truncation is worse. It\u2019s super weird\u2026 and yet, even while it\u2019s doing that, the background audio retains a startling depth and personality. Or at least so it seems\u2026 even more than Dark, with this one you turn up DeRez and nothing happens to the sound at all. You don\u2019t even hear the noise until it\u2019s silly loud. (there will be a series of dither reissues with DeRez, both for auditioning and for lo-fi duties.) It might even be a \u2018sonic maximizer\u2019, putting tone qualities into the audio that weren\u2019t there to begin with.\n\nI admit I don\u2019t know what to make of this at all. I know how I got it, and I know it\u2019s doing what I made it to do. But nobody knows what you get if you sculpt audio, not by frequencies or loudness, but by reinforcing certain waveform slope angles, because to my knowledge nobody has ever wanted to do that or had a way to make it happen, even in subtle ways like this. And now that I\u2019ve done it, I\u2019m not certain it\u2019s better than Dark. I understand what Dark\u2019s doing, and why that\u2019s useful. This is a wilder beast. Looking forward to getting people\u2019s reactions\u2026 because one of these may replace NJAD in my flagship Airwindows plugin, Monitoring. (followup: turns out it is Dark in Monitoring2)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BezEQ",
    "description": "a strange, alien three-band shelving EQ",
    "tags": [
      "Latest"
    ],
    "slug": "bezeq",
    "short_description": "a strange, alien three-band shelving EQ",
    "full_description": "You don't have an EQ anything like this. Nobody does. This is guaranteed new.\n\nThe reason is, nobody with audio training would try to apply Bezier curves to audio reconstruction (since it doesn't make sense, though it's nice and efficient to do), and if you did you'd get my latest DeRez which doesn't work like a normal frequency crush and so that would scare more people off, and then if you tried to use two DeRezzes in series as brickwall filters for a three-band shelving EQ, you'd so quickly run into problems (for instance, with test tones) that you'd immediately run away, never to return, knowing it would be impossible to get away with it.\n\nAnd more fool anybody who did try ALL of these things and then gave up\u2026 because this is a hell of a thing, and now it's mine, which means now it's yours. I do Patreon so it doesn't matter if one of my plugins is scorned as an EQ and behaves terribly in testing. I can put it out anyway! And even explore the idea of building it into ConsoleH\u2026 but that's in development, and BezEQ is yours right now.\n\nIf you keep Treble, Mid and Bass exactly the same volume (any value, the settings will match) it will behave quite perfectly. Doesn't matter what the crossovers do. They're assembled subtractively so they'll add up to perfect, every time, if they're set to 'flat'. I often do that with 'general purpose' EQs or with things like StoneFire: it's good to have 'flat' be really, really free from issues. It's the opposite of breaking things into an FFT transform or an mp3 and then reconstructing them from the (limited) data.\n\nThen, if you shut off Treble, the output is DeRez3 using the X control between Treble and Mid to set the cutoff.\n\nAnd if you shut off Treble and Mid, the output is DeRez3 using the X control between Mid and Bass.\n\nAnd if you shut off everything BUT Treble, it's the dry signal MINUS the first DeRez3. It's only the highs from what would've been a de-rezzed, pseudo-brickwall cutoff.\n\nAnd if you have Treble AND Bass, you have that plus the derezzed Bass, which is what remains after the Mid goes through another 'filter' that's not really a filter. Same with if you only have Mid: it's derezzed treble-removed, but with the other derez subtracted.\n\nExcept you'll quickly learn that none of these are clean crossovers at all: you'll get a strange overtone that comes out at the filter cutoff and acts weird. You can add a LOT of deep bass and an extra tone, like a ring mod, through boosting bass and adjusting that cutoff. You can add bass through that extra tone by CUTTING bass and adjusting the cutoff. It's a bizarre toy but it works predictably and has its own sound, to love or hate.\n\nAnd that's not even getting into when you do this, and then make the cutoffs fight each other by setting TxM very low and MxB very high, causing the distortions to distort and interact\u2026 you can get into a lot of trouble with this, and so totally reinvent the sound that it becomes unrecognizable.\n\nAnd then dial it back to as subtle as you like, simply by making Treble, Mid and Bass be closer to each other.\n\nHave fun and don't say I didn't warn you :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BigAmp",
    "description": "a very flexible amplike thing with a taste for the bizarre",
    "tags": [
      "Latest"
    ],
    "slug": "bigamp",
    "short_description": "a very flexible amplike thing with a taste for the bizarre",
    "full_description": "Let\u2019s go a little farther! BigAmp steps even farther away from what you might call \u2018realistic\u2019 amp sim behavior. It\u2019s more like the Z series filters, or perhaps the X filters: you can make it act sort of \u2018normal\u2019, but it also lets you twist the knobs way beyond what\u2019s realistic. So, you can use BigAmp for layering, or to supplement a sound, or just do strange things. There\u2019s one more amp sim before I get into other, different plugins (and indeed different whole things like the sample instruments I\u2019m developing, as heard in \u2018Skronk\u2019 and these demos) but BigAmp is perhaps the widest-ranging of the lot.",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Biquad",
    "description": "the Airwindows implementation of a biquad filter",
    "tags": [],
    "slug": "biquad",
    "short_description": "the Airwindows implementation of a biquad filter",
    "full_description": "This little puppy is really flexible!\n\nThat\u2019s true of any biquad filter, but I find most of them are really flexible and slightly plastic. Traditionally biquads require special handling, because you can\u2019t push them too far before they break, and also they sound \u2018DAW-y\u2019 and synthetic. Not in the same way as linear-phase EQs, mind you, but still with something about them that feels digital.\n\nSo I fixed that :) with a couple caveats. Firstly, part of it is brute force. I figured that if biquads run into trouble with 32-bit coefficients on some filter curves, and it\u2019s widely known that you should do things like run \u2019em in series to get better behavior, we could always run long doubles and be totally sure they work as intended. Overkill? Meh. Sure, but it\u2019s known that these break due to losing control of themselves due to not long enough wordlengths. Why wouldn\u2019t they work and sound better with long enough wordlengths? And so they do. Also, you get to run simpler biquads if you don\u2019t have to run lots of them, so it averages out. I think it\u2019s just a matter of audio DSP coders stubbornly insisting on not using long data words on the grounds it doesn\u2019t matter to the sound. This, when the filters go obviously wrong under some conditions for just that reason? Anyway, here\u2019s long double biquad, because nobody else was doing it far as I know.\n\nThe second part is trickier, because if you use it you remove some functionality. Biquads make great DC blockers. But, biquads also work through the summing of many delay taps, all very close together. Some are on input, others on output. They\u2019re a mixing of multiple copies of the signal.\n\nThat means Console applies to the biquad filter.\n\nWe already knew that, of course: I\u2019ve long observed that you can put Console (or BussColors4/ConsoleBuss4) around a bog-standard DAW EQ and get an enhanced sound out of it. Mind you, I wasn\u2019t controlling that EQ, but it still worked. But now, I have Console5 (not 6, but I COULD do 6 in the right context) built right into Biquad. So, it does expect to have a signal between -1 and 1 (or lower than 0dBFS in the DAW), and that means Biquad itself can\u2019t remove huge DC offsets ten times the size of the audio content. (It can still remove smaller offsets just fine). And it runs into basically PurestConsoleChannel, does the biquad, then uses PurestConsoleBuss and goes out to an inverse/dry/wet control (which itself has multiple uses).\n\nWhat\u2019s a biquad, you ask? The Airwindows biquad uses four of the six common biquad options (I prefer to do shelves with subtractive/additive use of filtered audio). The top control has settings one through four. They go lowpass, highpass, bandpass and notch. That\u2019s what I consider the platonic set of biquads, and it lets the filter design be simple and clear. You can set a frequency (in \u2018amount of the audio range\u2019) from \u2018zero\u2019 to \u2018one\u2019. There\u2019ll be EQs with more specific frequencies, that\u2019s easy, but this is proof of concept and to be used by ear, plus it will always cover DC to Nyquist at any sample rate. Zero is not really DC, because that kills the biquad: also, One is not really the Nyquist frequency (half the sample rate) for the same reason. But, they act a lot like they range that far, because the high resolution lets Biquad calculate things accurately even that far out of the normal range.\n\nThey don\u2019t update/recalculate every sample, but the way I\u2019ve defined the data structures means they could if you wanted them to (at a cost in higher CPU-eating). The code\u2019s MIT licensed open source, so GPL people can just take it if they credit me, and all the projects that are using the Airwindows library are advised to get up to date and include this one. Set right, it is THE ultimate sample-instrument tone shaper to sit \u2018under the hood\u2019 and voice somebody\u2019s musical product after the sample-playback stuff is taken care of. You\u2019ll be seeing a lot of stuff come out that uses this code, as there are many plugins that require this type of filter to work, often ones that will benefit from the sonic improvements that are part of Biquad.\n\nMore will be revealed. Suffice to say this is a very useful building block that\u2019ll allow for some very special plugins.",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Biquad2",
    "description": "the Airwindows biquad filter that's more sweepable and synthy",
    "tags": [],
    "slug": "biquad2",
    "short_description": "the Airwindows biquad filter that's more sweepable and synthy",
    "full_description": "This time, it\u2019s time for the impossible!\n\nAs in, there was a reason nobody was doing sweepable, \u2018synthy\u2019 biquad filters\u2026\n\nTurns out it simply doesn\u2019t work. One uses a different type, like state variable filters, for the synthy stuff. The reason is that, while biquads can sound pretty great (especially implemented like I do \u2019em), they fundamentally can\u2019t cope with changing the filter coefficients mid-calculation. They flip out: you\u2019ll hear some of that, especially at the frequency extremes. Low Q makes low frequency motions flip out, and high Q (and boy do I have a high Q for you this time) makes ultra-high frequency motions flip out in a really wild. glitchy way.\n\nSo obviously I gave up.\n\n:D\n\nnope! Instead, I just kind of forced the filter into zones where it mostly is controllable. This is partly through REALLY smoothing the filter cutoff, especially at low Q and low frequencies. If you try and update biquad coefficients every sample (and I already changed the form from the more CPU-efficient to the more stable form: didn\u2019t help much at all) the algorithm gets super twitchy, so part of what I\u2019ve done is just stabilizing things. I tried for ages to come up with some bizarre hack to force the filter back into stability: no dice. So, the range has been limited a little, the Q doesn\u2019t adjust below a Q of 1, and it reacts really slowly, because that was the only way I could get it to behave at all. (the original Biquad can sometimes be better behaved, because it\u2019s only recalculating coefficients every new buffer. So, zipper noise. When you get rid of that your troubles get infinitely worse, with biquads)\n\nI\u2019ve also got the resonance (on low and highpass) working differently. I\u2019m scaling back loudness, but I\u2019m also applying a distortion, then averaging after that, to try and get an \u2018overdriving filter effect\u2019 not present in the purer original Biquad. You can go quieter into Biquad2 and avoid this, or not use as much resonance: I feel it\u2019s kind of like the Roland Alpha Juno filter resonance distortion, not an everyday thing but when it pops up it has its own distinct quality that\u2019s interesting.\n\nAnyway here\u2019s Biquad2 ;)",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadDouble",
    "description": "a handy Airwindows cascaded biquad filter: steeper roll-off before resonance",
    "tags": [],
    "slug": "biquaddouble",
    "short_description": "a handy Airwindows cascaded biquad filter: steeper roll-off before resonance",
    "full_description": "So it\u2019s a boring old biquad.\n\nExcept, if you\u2019re into the details of how stuff works, it\u2019s not THAT boring. It\u2019s two biquad filters stacked, which means you can get twice as much cutoff steepness before resonance. Since it\u2019s Airwindows, you can have any possible resonance setting anyway, from \u2018impossibly high\u2019 to so wide that it\u2019s basically full bandwidth. That interacts interestingly with the stacked filters: some of the weird effects with super-wide filters will act different here. On top of that, it\u2019s two stacked filters inside an internal Console mixing system: so the tone of the filter itself is \u2018expanded\u2019 in a way not common to boring old biquad filters. And it\u2019s the most efficient (but least cooperative) biquad, meaning that it runs and sounds great but doesn\u2019t always cooperate with rapid automation, so that might get interesting if you\u2019re not careful.\n\nWhy do this at all?\n\nBecause I sometimes like mocking up effects and plugins out of component parts. And if I was to use a stacked biquad filter as part of something else, it\u2019s just more convenient to dial in the correct settings and get the tone exactly right: I could use two \u2018Biquad\u2019 instances, but remember that BiquadDouble stacks its filters INSIDE the Console processing, so it might not be as good to fake it, plus I\u2019d have to set both the Biquad instances the same\u2026\n\nThe real answer is \u2018because that\u2019s how I roll\u2019. Nobody asked for this. But maybe you reach for a biquad filter for simple tone shaping, and you keep trying to find a butter zone between too shallow, and too resonant. This might become your go-to basic filter. I can\u2019t predict what will take off: for all I know, this is THE basic digital filter everyone\u2019s been waiting for, the one that just sounds right for every purpose. Or not. But you can\u2019t know until you try :)",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadHiLo",
    "description": "the highpass and lowpass filter in ConsoleX",
    "tags": [],
    "slug": "biquadhilo",
    "short_description": "the highpass and lowpass filter in ConsoleX",
    "full_description": "Pretty straightforward: this is effectively the same thing as the highpass and lowpass used in ConsoleX. Except, in practice it's absolutely not, because in ConsoleX both of these are distributed filters. That means as signal hits the Stonefire section with dynamics, it will have hit some of the highpassing and lowpassing, but not all of it: some of it will happen after the dynamics. Some of it will happen after the four-band parametric EQ, which is somewhat nonlinear. The lowpass in particular gets to work as a distributed filter against aliasing, especially if you're running at high sample rate.\n\nBut here it's just those filters as a one-piece unit.\n\nThat also means you can use it as those filters, but in a much more lightweight form than in ConsoleX. I'm hoping ConsoleX is working out for people (it will be a while before I'm finished explaining all that, and getting it working on everybody's DAW, if that's even possible!). But though it is prettier and a lot fancier, it's way more complicated.\n\nIn the video I made, I demonstrate how you might be running something like a guitar into virtual tape (ToTape8 in this case) and from there into ConsoleX. But there are some things you simply can't do when processing the sound AFTER the tape. Sometimes there's a reason to shape the sound going in front of the tape, so it can hit those harmonics harder with less extra frequencies flying around\u2026 and BiquadHiLo can work for 'trapping in' a sound like that so it can hit tape even harder and produce a really direct, clear sound.\n\nAnd of course you can use ConsoleXPre for exactly that purpose and have all the EQs or even dynamics going, both in front of and after the tape, but much like you have access to three bands of the parametric EQ in 'Parametric', and have the dynamics in 'StoneFireComp', you have the additional filters in BiquadHiLo.\n\nIf all goes well I can have the 'mastering' (a very airwindowsized take on mastering) plugin by next week, but while I work on more fixes for ConsoleX, here's a spare filter to have :)",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadNonLin",
    "description": "Capacitor2, but for biquad filtering",
    "tags": [],
    "slug": "biquadnonlin",
    "short_description": "Capacitor2, but for biquad filtering",
    "full_description": "A biquad filter is a very basic piece of typical DAW EQs. If you were going to think of the most ordinary, normal, non-special digital EQ that would sound like every other digital EQ, you're probably going to be stacking up biquad filters. It is the most boring of digital filters, at least ones that are kind of flexible.\n\nLet's break it!\n\nBiquadNonLin takes the traditional biquad filter, complete with cutoff and Q factor, and applies the same technique used in Capacitor2. That was the one where I read about Murata ceramic capacitors showing striking variations in value, based upon how much voltage pressure was against them. Which is not to say all capacitors do that\u2026 but knowing this has happened in the real world suggests that it's an avenue to pursue. And so, Capacitor2 brought in this interesting nonlinearity based on real-world stuff, like a (in fact literally a) frequency modulation\u2026 and then it sat for a while. Because how would you even apply that to a carefully worked out algorithm like a biquad?\n\nThe answer is 'you just do'. Does it produce a clean result? Nope. You can break things pretty thoroughly, especially up near the Nyquist frequency. But you can apply less\u2026 I find 0.5 tends to work quite well\u2026 and you can get the same kind of nonlinearity.\n\nIt's just that this time, you can do it on a steep, resonant filter, and get that more analog texture on something that's otherwise very controllable. I'm looking to use this on many things: I think it'll make for a better-sounding distributed ultrasonic filter, and I'd also like to make a multistage version to use as the guts of a future ConsoleSL\u2026 because it should work more like a steeper but less vibey filter, except with the analogification.\n\nAnyway, here's BiquadNonLin: one biquad filter, lightly broken for your sonic pleasure. Type at 0 is a lowpass, Type at 1 is a bandpass. The biquad tended to explode when I tried to make it do highpasses or notches, but it turned out I could just make the dry/wet an Inv/Wet control, so that means you just use Inv instead, and Type at 0 becomes the highpass (it's subtracted) and Type at 1 is the notch. If you have a hard time hearing the nonlinearity, setting it to highpass and sweeping it up at high NonLin should make it real obvious.\n\nOh, one more thing\u2026\n\nToday, the first VST3 is out\u2026 kind of. I have it up on GitHub at https://github.com/airwindows/Meter and you see it in the video for BiquadDouble. The thing is, I can't build it anywhere else except a single VST3 on my own machine, for Mac Apple Silicon only. The project on GitHub is all the code, up to date, and it's supposed to be able to build all sorts of different versions.\n\nYou can fork it, you can download it, you can try to get it to compile just like I did. There's lots of people smarter than me about computers and they didn't make this meter, so I had to. So, if you can make a Pamplejuce project compile, Meter is yours today, no matter what sort of computer you're on or what platform you're targeting. VST3? AU for iPad? AAX? Knock yourself out.\n\nIf you get anything to work, tell me how you did it, and everyone can have the result. Otherwise, I will keep plugging away, and eventually I'll get this stuff sorted out. But if you're impatient\u2026 the GPLed code is there, it compiled for me, let me know how you do :)",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadOneHalf",
    "description": "an interleaved biquad filter like Biquad",
    "tags": [],
    "slug": "biquadonehalf",
    "short_description": "an interleaved biquad filter like Biquad",
    "full_description": "BiquadOneHalf is tech that\u2019s going into my future plugins. You have to set the frequency twice as high as you would using Biquad, and it can only go up to 1/4 Nyquist, but the way it interacts with the sampling frequency is special and works very well for some types of filtering. You\u2019ll be getting more developed plugins of that nature soon, and all through January, but for now I got this: working version of the new Biquad filter variation, that you can use on stuff.\n\nIt\u2019s the first version, not the \u2018sweepable\u2019 version, because this is going to find its way into fixed-frequency EQs, \u2018head bump\u2019 etc\u2026 compare it to Biquad remembering to use twice the frequency you otherwise would. It\u2019s happiest on bass or midrange: much like regular Biquad, trying to force it to get real close to its high frequency limit can get messy.",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadPlus",
    "description": "Biquad plus zipper noise suppression! For twiddling the controls",
    "tags": [],
    "slug": "biquadplus",
    "short_description": "Biquad plus zipper noise suppression! For twiddling the controls",
    "full_description": "By request, a kind of bugfix!\n\nUnderstand, a simpler implementation of a biquad filter isn\u2019t a \u2018bug\u2019, exactly. I may have not had everything figured out, but if you\u2019re designing fixed filters or looking to tune in EQs on something in your mix, the biquad filters I\u2019ve been making are actually better. Without the extra smoothing code they run more efficiently and eat less CPU, and they\u2019re still useful, plus there\u2019s less to them so they\u2019re more approachable.\n\nBut, a lot of musicians seem to enjoy cranking the filters around\u2026 and now that I\u2019m using Bespoke all the time, I can put an LFO literally on any damn thing by rightclicking it. And it wasn\u2019t all that difficult to do\u2026 I rolled it in to some documentation upgrades I did on the advice of Paul from Surge Synthesizer. One thing about hanging out with the open source music people is, stuff starts happening faster than you could possibly imagine. I had a crash bug in Bespoke on some strange things I needed to build into my main music making procedures, and Ryan had a fix the next MORNING. It\u2019s daunting and wonderful to hang out with these earnest, motivated people.\n\nYou\u2019ll see more on that, sooner than you think.\n\nBut right now\u2026 enjoy a cleaner, smoother Biquad, plus zipper noise suppression! I needed to come up with my Airwindows way to accomplish this, and got it done. More to come.",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BiquadStack",
    "description": "a way of making a parametric EQ out of stacked biquad filters",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "biquadstack",
    "short_description": "a way of making a parametric EQ out of stacked biquad filters",
    "full_description": "There's already a plugin called BiquadTriple, and it's three biquads simply cascaded to do what they do with steeper roll-offs before resonance. I'd said 'this is to let you mock up effects where you're going to be using filters' and mentioned 'ways to make the Q factors more specific and staggered' but didn't really go there, at the time.\n\nThat time arrived in a hurry when I started really trying to work out what was so special about SSL channel strips, so I could use similar parametric bands in ConsoleX.\n\nSo, BiquadStack is out to let you use this right away, without waiting, and see how that goes. The way it works is, it has the same technique used to make very steep Butterworth filters. This is using specific Q factors in combination, so they end up doing a very accurate highpass or lowpass without resonance or irregularities. Typically, when you find this stuff it's carefully designed to behave correctly, and you can make steep Butterworth filters of whatever order you like, this way.\n\nUsing it for bandpasses instead, and adding nonlinearity, gives you a really interesting response: it's not a narrowing spike as a normal resonant filter would be, instead it's a little region of intensity that you can bring in or remove. The nonlinearity increases as you add more boost, or stays subtle at lower settings. The edges of the region develop little 'moats' to accentuate the effect: some sort of phase interference.\n\nThe result is what I wanted: tight and effective parametric EQ which is not 'analog modeled', it's designed to do what I'd WANT to do with analog modeling. It's about letting through the energy and sonority (or suppressing energy you don't want) rather than trying to duplicate tone colors of some hardware and muddying things up. This one is full-range, and smoothed, because there's only one of it: if you want to do sweepy automation things keep it around. There will be more, like a three-band that can fit in Airwindows Consolidated, and the full SSL-style four-band that goes in ConsoleX.\n\nIf you want to get a head start on what that will bring you, play with BiquadStack. If you want four bands of it on every channel in your whole mix\u2026 well so do I, and I'm working on it :)",
    "categories": [
      "Biquads"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "BiquadTriple",
    "description": "a handy Airwindows cascaded biquad filter: steeper roll-off before resonance",
    "tags": [],
    "slug": "biquadtriple",
    "short_description": "a handy Airwindows cascaded biquad filter: steeper roll-off before resonance",
    "full_description": "Here\u2019s another utility plugin! This is the same as BiquadDouble, except it\u2019s three stacked biquads. Otherwise the same: you get to set the frequency, Q etc. for all the filters in parallel. This saves time over doing three instances of Biquad, plus they\u2019re run in series inside Console inside the plugin, so there will be a deeper tone out of this one.\n\nIt\u2019s for if you wanted to get steeper filter slopes without the cutoff going resonant. This, like BiquadDouble, is very much \u2018tools to make tools\u2019, for if you\u2019re mocking up some kind of effect and know you\u2019re going to be using filters. You can test out what you\u2019ll use in your effect, this way. Note: seems like the inv/dry/wet is really just wet/dry/wet, and I have too many new and more worthwhile plugins to put out to fuss over it so I\u2019d advise just taking BiquadTriple as it is. I\u2019d be using it as full-wet anyway though you can bleed in dry for more of a shelf effect if you\u2019re doing a steep rolloff of some kind.\n\nI expect to be doing some more variations on this as there are known ways to stack filters where the Q factors are very specific and staggered: however, those will be more aimed at the mixer/end user, and probably will be called isolators (that being a common term for this type of steep crossover-like filter). And again, I\u2019ve got other things to put out that are more interesting, so more will be revealed as I do those experiments. I think an Airwindows isolator-style effect would be good. Bear in mind the biquads can be fussy about extreme settings and moving the sliders abruptly.",
    "categories": [
      "Biquads"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Bite",
    "description": "an unusual edge-maker",
    "tags": [
      "Latest"
    ],
    "slug": "bite",
    "short_description": "an unusual edge-maker",
    "full_description": "Bite puts on a sort of midrange edge. At high sample rates it\u2019ll be more of a trebly edge. It\u2019s no specific frequency, so much as it\u2019s just a harshening factor: you can also use it inversely, to take out midrange edge. It runs a couple samples of latency: on VST that works as a couple samples of delay. Again: an experiment, a science project.",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BitGlitter",
    "description": "an old-sampler style digital lo-fi plugin",
    "tags": [
      "Latest"
    ],
    "slug": "bitglitter",
    "short_description": "an old-sampler style digital lo-fi plugin",
    "full_description": "DeRez is the simpler, purer bit and frequency crusher, and is still the best \u2018analog setting\u2019 bitcrusher (because it lets you use floating-point or fractional frequency and bit crushes). It\u2019s a very pure example of those things and you can make it gate with a touch of DC offset from DC Voltage, and it\u2019s even got a touch of grit softening when it frequency crushes to improve its tone.\n\nBitGlitter, however, isn\u2019t DeRez. BitGlitter\u2019s something a lot more sophisticated: a kind of sampler emulator. At every stage it\u2019s designed not for bitcrush alone, but to get the particular tonalities you can get out of primitive old samplers. An earlier attempt intentionally went after the old Akai sound, but currently BitGlitter has no specific model. It\u2019s just there to dial in a kind of punchy grit that will make beats sit well against other elements: the video demonstates this.\n\nNow, I know there are people who get mad when I make plugins like these. They say, \u2018stop making the sound worse!\u2019 and I understand what they mean, but sorry, I won\u2019t stop because I know there are elements to certain \u2018bad\u2019 sounds that aren\u2019t just \u2018bad\u2019 but usefully different. BitGlitter maximizes this as much as I can, and might be the go-to textural element for this sort of thing if generic bitcrushing etc. just never works for you. And then for some people I think it\u2019ll immediately be their best friend, but I don\u2019t need to explain to that crew what this is. For those who aren\u2019t used to \u2018crappy old sampler\u2019 magic\u2026\n\nFirst, BitGlitter\u2019s got gain trim going into a stage of Spiral analog-style saturation. You can overdrive the input effectively. Then, it does a hint of bitcrushing and splits into two separate frequency crushers, each set slightly different. This isn\u2019t \u2018accurate\u2019 to any real retro sampler, but it helps broaden the sound. The output of these are blended and given an output gain and a dry/wet in case you need to sneak a little clarity back in there, and a slight averaging blur is added to the blend to further emulate analog circuitry.\n\nThe result is a coarser, more opaque sound which still lacks modern digital \u2018edge\u2019: you can plainly see on a metering plugin like Voxengo SPAN how the highs are softened. It\u2019s not a digital bright-maker, it\u2019s a texture-changer and impact-maker. Especially if you go for darker regions of the Bit Glitter control, you can use this to add ridiculous amounts of midrange punch in that \u2018retro hip-hop\u2019 kind of way. There\u2019s a visceralness and aliveness to the grunge because it\u2019s made by an algorithm to act like analog gear might: you won\u2019t get the same result out of just a pile of typical DAW bitcrush and EQ. BitGlitter will do the extreme damage you might be looking for, but it\u2019ll do it with a personality that contributes instead of detracts.",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BitShiftGain",
    "description": "the \u2018One Weird Trick\u2019 perfect boost/pad, but in 6db increments ONLY",
    "tags": [
      "Basic",
      "Latest"
    ],
    "slug": "bitshiftgain",
    "short_description": "the \u2018One Weird Trick\u2019 perfect boost/pad, but in 6db increments ONLY",
    "full_description": "Here is one final trick for clean gain aficionados.\n\nTurns out the only way to get cleaner gain trim than PurestGain, with its high mathematical precision and noise shaping\u2026 is not to do any of that. No fancy math, no noise shaping or dither. Just a very narrowly defined boost or cut, in the form of a \u2018bit shift\u2019.\n\nDoing this means your waveform is scaled up or down by increments of 6 dB exactly. No 3 db, no 9, no 7 or even 6.001! Only 6 or 12 or 18 and so on, up or down. Select the number of bits you want to shift, and BitShiftGain applies the exact number, not even calculating it in floating-point through repeated operations: from a look-up table to make sure it\u2019s absolutely exact and precise.\n\nAnd when it does, all the bits shift neatly to the side inside your audio, and whether you lose the smallest and subtlest or gain up and fill it in with a zero\u2026 every single sample in your audio is in exactly, EXACTLY the same relative position to the others. Apart from the gain or loss of the smallest bit, there is literally no change to the audio at all: if there was a noise shaping, it would have nothing to work with.\n\nPerfection, at exclusively increments of 6 dB. That\u2019s the catch. You probably can\u2019t mix with gain changes that coarse (though it\u2019s tempting to try!) but here\u2019s what you can do: you can take 24-bit dithers, gain down 8 bits in front and 8 bits up after, and have a perfect 16 bit dither. Or a 17 bit, if that pleases you\u2026 or shift 16 bits down so you can hear what your dither\u2019s noise floor acts like (we\u2019ll be doing lots of that when I start bringing out the dithers). +-16 bits of gain trim is a very big boost or cut. The overall range of BitShiftGain is huge. But the real magic of BitShiftGain is the sheer simplicity of the concept. Provided your math is truly, rigorously accurate and your implementation\u2019s perfect, gain trim with bit shift is the only way in digital (fixed OR floating point) where you can apply a change, and the word length of your audio doesn\u2019t have to expand, AND every sample which remains in your audio continues to be in exactly the same relation to all the others.\n\nDigital audio is like some crystalline structure: it\u2019s fragile, brittle, and suffers tiny fractures at the tiniest alterations. There\u2019s almost nothing you can do in digital audio that\u2019s not going to cause some damage. But as long as you stick to 6 dB steps and rigidly control the implementation (BitShiftGain doesn\u2019t even store the audio in a temporary variable!), you can chip away at that least significant bit, and the whole minutes-or-hours-long crystalline structure of digital bits can remain perfectly intact above it.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": true
  },
  {
    "name": "BlockParty",
    "description": "like a moderately saturated analog limiter",
    "tags": [
      "Latest"
    ],
    "slug": "blockparty",
    "short_description": "like a moderately saturated analog limiter",
    "full_description": "What do you get when you cross an Airwindows compressor, with OneCornerClip?\n\nPretty much this. Okay, so it wasn\u2019t a very difficult riddle, was it?\n\nBlockParty acts like a somewhat distorty limiter. It\u2019s not at all about lookahead (in fact it doesn\u2019t have any) or preserving tones pristinely. Instead, it takes the onset of sounds that would compress, and manipulates the attack in the way that OneCornerClip does. The threshold gets kicked way down, and gradually expands to full scale, and since the threshold\u2019s determining compression, that means BlockParty doesn\u2019t have a stable compression threshold. It\u2019s interactive with the audio you\u2019re giving it.\n\nBecause it\u2019s on the OneCornerClip model, that means it\u2019s a mostly-compressor with OneCornerClip-like behaviors. That means bass which blooms and has fullness even under heavy load, and highs that don\u2019t poke out or distract. The result is a thing that sounds real analog-y but not super clean. You can use very small amounts of it (there\u2019s a lot of gain on tap) to do peak limiting for loudness maximizing, or you can slam things into it for effect. It\u2019s called BlockParty because heavily limited stuff sounds like blocks of loudness: it\u2019ll get you some of those sounds, but not as cleanly as your classic \u2018loudness war\u2019 limiters. It\u2019ll also smash drums and things in its own distinctive way, which might be its strongest suit. On the end of it is a clipping stage to make sure nothing you do will ever produce overs. The clipping stage is AFTER the dry/wet, so to get a true dry you\u2019ve got to turn it off: this is because raw digital clipping is another style of loudenating, so if you were going super-hot into BlockParty and wanted to dial in some pure digital clipping you could use the dry/wet to do it (or, if including some dry would have given you overs because your direct buss signal includes overs).\n\nBlockParty is a fierce loudenator with a voice and style all its own, using techniques that are distinctly Airwindows. It might be just what you needed, or it might be a little too grungy for you\u2026 but either way, there\u2019s nothing quite like it, so check it out.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BrightAmbience",
    "description": "a plugin for very bright gated reverbs",
    "tags": [],
    "slug": "brightambience",
    "short_description": "a plugin for very bright gated reverbs",
    "full_description": "BrightAmbience is one of the old secret weapons of classic Airwindows. It\u2019s nasty enough to be pretty unique, and nice enough to be useable. What it does, is it sets up a BIG pile of delay taps spaced by prime numbers. There\u2019s a decay control and a sustain control: the sustain will help with its CPU hungriness, the decay won\u2019t. Dry/wet is at the top (what can I say, this was an early one) and wet tends to run HOT so you might like to use it as mostly dry and add its coloration to things as needed.\n\nIt\u2019s CPU hungry because it\u2019s using a really naive method of doing all that, but it also has a really distinct sound that differs from what you can get out of convolution reverbs. And since the distribution of delay taps is prime-numbered but also kind of naive, instead of getting a convincing room you get a sort of steel-chamber effect with a nasty resonance up near the Nyquist frequency. But that can work as a special effect. Back in the day I meant this to be a great reverb, but it\u2019s not. However, it IS a great \u2018crazy bright ambience effect\u2019, though it\u2019s pretty CPU hungry like I said. You can apply it to anything that you\u2019d like a halo of shiny around, and its tone is nicer at 96K as I demo it. (the sustain is tied to maximum sample delay, so higher sample rates will give you shorter sustains and denser shininess)",
    "categories": [
      "Ambience"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BrightAmbience2",
    "description": "more BrightAmbience with better tone and more slapbacky effects",
    "tags": [],
    "slug": "brightambience2",
    "short_description": "more BrightAmbience with better tone and more slapbacky effects",
    "full_description": "This is just like BrightAmbience, except different in pretty much every detail. Techwise (skip to next paragraph if you like) it is using a totally different prime number series, \u2018super-primes\u2019 for its delay spacing, and then it\u2019s offsetting alternately left and right delay taps to the next prime number in line, meaning that it\u2019s a dual mono \u2018ambience\u2019 but center signals WILL get stereo spread. Also, there\u2019s a kind of regeneration that was real tricky to do, but it means you can get a clean digital slapback, or any degree of \u2018fuzzed out\u2019 bright ambient slapback all the way to the wash of sparkly atmosphere, either subtly regenerated or cleanly gated.\n\nOkay, but what does it do, and what does it sound like?\n\nSuper ultra bright ambience space that doesn\u2019t get in the way. You can put it on things like drums for 80s gated verb, you can do dub-like things through using it to make a blurry slapback, but this thing is bonkers at putting Star Quality Vocal Glitter on voices. You don\u2019t have to have it loud, and you don\u2019t have to stretch it out so long that it feels like a reverb. That\u2019s not the point, this is about doing that classic Lexicon thing (without, I might add, using ANY actual Lexicon sounds or algorithms) where you can fill in a bright, glossy atmosphere around the voice that makes it sound like star quality. You probably don\u2019t want to treat it like a reverb, on a send or whatever (maybe on a vocal bus? It\u2019ll handle split harmony vocals very elegantly since it\u2019s dual-mono). Instead you want to use it like your lead vocals alone go into a special chamber. Might also be an inspiring thing to monitor while tracking: I sure had fun playing with it in my headphones, and if it\u2019s on your mix while tracking you might not have to print it on the actual vocal track. Everything about it is evolved from BrightAmbience, even the algorithm that makes it.\n\nOh, also if you\u2019re a coder and want to get your hands on the delay taps, it took hours of looking up and typing in specific prime numbers, as there is no such thing as a \u2018list of super-primes except every other one uses the next real prime after the super-prime, making the list pan every little echo to alternate sides using inter-aural delays\u2019. And maybe you never even thought of such a thing. But if you think you can make use of such a thing, in the .h file (for the AU, anyway) is a definition of \u2018primeL[]\u2019 and \u2018primeR[]\u2019 that you can simply copy and paste. It\u2019s 489 total entries which will get you a half-second or more out from the dry signal, even at 96k, and you just use \u2018primeL[]\u2019 and \u2018primeR[]\u2019 to specify the delay taps you want, typically in a range (like, entries 40 to 60 will give you a little ambient blur starting at whatever \u2018primeL[40]\u2019 is, which is 1031 samples)\n\nIt\u2019s MIT license so you only have to shout me out and you can do anything you want with it\u2026 so don\u2019t say I never gave you nothin\u2019 :D",
    "categories": [
      "Ambience"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BuildATPDF",
    "description": "a dither-making toolkit",
    "tags": [],
    "slug": "buildatpdf",
    "short_description": "a dither-making toolkit",
    "full_description": "I've explained how DoublePaul was made: taking a TPDF highpass dither, and including additional nearby samples to cause the tone of the noise to be more high-pitched.\n\nWouldn\u2019t be fair if I didn\u2019t give you a chance to play with it yourself :)\n\nTo use BuildATPDF the way I used it, set the middle sliders to -1 and +1. Then adjust the other sliders until you\u2019ve tailored the sound of the noise in a way you like. With the other sliders at 0, you have PaulDither. If the surrounding sliders \u2018oscillate\u2019 (going minus, plus, minus, plus) you have more of what DoublePaul is. Tailor the highpass in ways gentle or obvious, or even darken the highpass while leaving its dither functionality intact! It\u2019s the combination of a -1 and +1 tap that gives you highpassed TPDF. (This won\u2019t work with +1 and +1, because it\u2019s the same random noise passing through the plugin: it needs to play a positive node against a negative node)\n\nOr, you can set up the -1 and +1 taps, and then just play with the sliders to see what it sounds like!",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "BussColors4",
    "description": "the Airwindows console emulations, now working up to 192K correctly",
    "tags": [
      "Latest"
    ],
    "slug": "busscolors4",
    "short_description": "the Airwindows console emulations, now working up to 192K correctly",
    "full_description": "This plugin\u2019s a pretty huge deal: it\u2019s been around since before console emulations were a thing, and I\u2019ve been steadily working on it year after year. There\u2019s not been much to do: my original algorithms, once I moved past the earliest incarnation as the \u2018Character\u2019 plugins, were so solid that it left little to do. BussColors has sold $22,445 of plugins over the years, as Audio Units alone, in spite of the fact that it has always been a 44.1K plug (due to being based on a convolution model).\n\nThe story there is, a guy at NoiseVault always wanted someone to make a plugin which used his sets of hardware convolution kernels, which he\u2019d done at all different levels. Sort of the Nebula thing (Giancarlo has been a great help when I was getting the VST thing going, check out Nebula)\n\nI\u2019m not that. I\u2019m Chris from Airwindows\u2026 so I set out to make my own version of this sort of thing, with hardcoded algorithms generated on-the-fly, as raw and close to the metal as I could get it. And I got some pretty respectable CPU efficiency with all of the tone quality I wanted, limited to 44.1K.\n\nUNTIL NOW :)\n\nTry it. BussColors4 is the newest version of BussColors, and it works at any sample rate and gets you the same sound. Better, in fact: I like what it does a lot better at 96K and 192K. It also doesn\u2019t greatly expand processing and CPU hit at higher sample rates. I think this one\u2019s a real highlight of the Airwindows arsenal. It would definitely be worth your $50, like its predecessors (well, I always did give existing BussColors users free updates for life, I mean for new buyers). Feel free to shoot it out against the most expensive and/or CPU-hungry options and I think it will clobber all comers.\n\nThe sources of the models in BussColors are as follows: \n\nDark (originally Cider) is a Focusrite and resembles an MCI console a bit\nRock (also seen in the Logical compressor) is from SSL impulses, obviously it's SSL in nature\nLush (originally Neverland) is from Neve impulses\nVibe (originally in the Elation compressor) is from LA-2A impulses\nHolo (originally in Precious) is from Precision8 impulses\nPunch (originally in APIcolypse) is from API impulses\nSteel (originally in Calibre) is something else, I don't remember what\nTube (originally Luxor) is from Manley Massive Passive impulses\n\nAll of these run a form of dynamic convolution which means they are never EXACTLY what the source impulses would have them be: it's more complicated than that. So, treat them as original things, not as attempts to clone whatever original gear sourced the impulses. In the end, they're BussColors(4).",
    "categories": [
      "Tone Color"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ButterComp",
    "description": "my softest, smoothest compressor",
    "tags": [],
    "slug": "buttercomp",
    "short_description": "my softest, smoothest compressor",
    "full_description": "Sometimes a plugin can be a sort of cult favorite. That\u2019s the story of ButterComp, a compressor of great subtlety that\u2019s no use for quite a few normal compressor tasks\u2026 but still has a fervent following. I\u2019ve been begged for the new version of this one (not merely VST, but revamped with all the current Airwindows sophistication and purity) and I\u2019m delighted to bring it, though I think it might puzzle some people. If the stock Logic comp would do as well, this isn\u2019t the plugin for you. But if you\u2019re looking for a certain thing and thought it unattainable in software, this might be your lucky day.\n\nButtercomp, under the hood, is absolutely unique (or unique, until I start working on variations and until other people try to copy it. They\u2019re free to, but it\u2019ll be possible to test that quite easily with special audio files).\n\nIt\u2019s a bipolar, interleaved compressor (with rather slow attack and release: a version with access to much faster dynamics is available in CStrip). This one\u2019s the original, the cult classic. What is a bipolar, or an interleaved compressor? For the purposes of Buttercomp, it\u2019s four totally independent compressors per channel. Two are sensitive to positive swing, and flip back and forth every sample. Two are sensitive to negative swing, also flipping back and forth every sample. The compression factor\u2019s reconstructed through combining these poles, through the screen of the interleaved compressors switching back and forth at the Nyquist frequency\u2026 that mysterious digital frequency that is on the one hand the literal highest frequency that can be encoded, and the lowest frequency that ought to be totally rejected and filtered out.\n\nWhat happens is this: the tone of things gets some added second harmonic, wherever the compression is more strong on one side than the other. High frequencies take on a particular airy openness, since they too get second harmonic, plus individual sample spikes can only affect one out of four compressors: ButterComp deals with all samples only as samples relative to other samples, and doesn\u2019t get thrown off by isolated samples that don\u2019t represent the actual waveform. It\u2019s got a sound, but the sound is hard to define because of its extreme fluidity and purity.\n\nIf this sounds like your idea of fun, enjoy ButterComp. If you\u2019re looking for the \u2018all buttons in\u2019 mode, I\u2019ll get back to the drawing board and probably do something totally different for you. This compressor is not for everybody. Also, if you start slamming it really hard (demonstrated in the video), it\u2019ll volume invert: you can squish it down to become more quiet than the quiet passages, but still it will retain its tone quality. It\u2019s perhaps best used as a particular kind of \u2018glue\u2019 compressor, at which it is exceptional\u2026 or maybe I should say, it\u2019s unique. Start working with it and you\u2019ll soon work out whether you\u2019re part of the ButterComp cult. Not everybody will be, and it\u2019s only one type of sound\u2026 but nothing else can get that sound, and this is why I\u2019ve kept this purest form of the algorithm available.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ButterComp2",
    "description": "improved ButterComp with an output control and sound upgrades",
    "tags": [
      "Latest"
    ],
    "slug": "buttercomp2",
    "short_description": "improved ButterComp with an output control and sound upgrades",
    "full_description": "So here\u2019s what happened: in working on the new ButterComp, I found a mistake. Because of a thing C programming lets you do (assign, in an if statement) it turned out the original ButterComp didn\u2019t actually use the interleaved compressors after all. The one in CStrip does, but actual ButterComp (which has its own distinct fans!) doesn\u2019t. It\u2019s strictly a bi-polar compressor: it does each half of the wave different, and blends them.\n\nBecause of this, I\u2019ve made the source code (also being released) represent what the plugin actually does in practice. It\u2019s a little simplified, and it\u2019s worth paying attention to, for people who like the simplest most minimal form of ButterComp.\n\nBut, because of this, I get to release ButterComp2 as very much its own thing! I even came up with a subtle tweak: it modifies its release just a touch, slowing it when the signal\u2019s hot. That\u2019s on a sample-by-sample basis\u2026 and it\u2019s on the OUTPUT of the compressor. So, this further smoothing effect is subject to the output level control. And the dry/wet. In fact if you had it all dry, the release modification is therefore as if you had it on the input\u2026 making it blend not only between positive and negative wave compression, but also between feedback and feed-forward release time modifications :)\n\nBut really what you need to do is listen to it.\n\nWith the interleaved compressors fully working AND the bi-polar compression on each, there is indeed the four distinct compressors working in parallel. The whole thing is very gentle (hence the name) but you\u2019ll get a glue and tonal reshaping out of it as it will even out the bulk of the waveform, making it balanced between positive and negative. It\u2019ll also soak up treble detail in a characteristic way, and you\u2019ll really hear the quality of ButterComp2 on ambiences and reverb tails. It\u2019ll float things in space in this holographic way\u2026 I thought it made for a significant tonal improvement over the simpler ButterComp.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "C5RawBuss",
    "description": "the original Console5 algorithm, with optional very gentle DC suppression",
    "tags": [],
    "slug": "c5rawbuss",
    "short_description": "the original Console5 algorithm, with optional very gentle DC suppression",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "C5RawChannel",
    "description": "the original Console5 algorithm, with optional very gentle DC suppression",
    "tags": [],
    "slug": "c5rawchannel",
    "short_description": "the original Console5 algorithm, with optional very gentle DC suppression",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Cabs",
    "description": "an Airwindows guitar speaker cabinet simulator",
    "tags": [
      "Latest"
    ],
    "slug": "cabs",
    "short_description": "an Airwindows guitar speaker cabinet simulator",
    "full_description": "I\u2019ve been asked for ITB guitar plugins before. Never been all that interested, because I like real amps and real tubes etc: have never found a lot of enthusiasm for going to great lengths to digitally fake all the colorations of some amp/speaker or other, because when the soul\u2019s not there the color is irrelevant.\n\nThis is different. I took on the challenge of updating my old Cabs plugin: originally dynamically convolved cab impulses, except they hadn\u2019t been MADE with that in mind so it became a series of wild experiments. I wasn\u2019t happy\u2026 then.\n\nCabs completely overhauled everything I\u2019d attempted. It\u2019s undersampled, so it\u2019ll run on whatever sample rate you like, efficiently. It\u2019s got the same tricks of allowing you to heighten the particular speaker coloration it uses, or dial it right back to nothing.\n\nBut around that core is a completely different approach to getting ITB amp tones. I\u2019m using the cab size and \u2018room loud\u2019 controls to let you dial in the exact presentation you want, from clear and up front power-soaked clearness to complete wall-of-stacks meltdown, and beyond (in classic Airwindows fashion). This is done through an alternate approach to loudness emulation based on the destruction of audio signals through ultimate volume, such as a Space Shuttle takeoff, and what happens to the waveforms there.\n\nI think you should listen to it. Careful that you don\u2019t jump for odd settings right away and get confused: for instance, settings of Room Loud beyond say 0.6 are not really real-world things. Settings of the cab tone intensity beyond 0.6 or 0.7 might be a bit weird. The way the cabs take on character and intensity is related to cab size: everything is basically related to everything else. You have to know what sound you\u2019re trying to get, to clone something real-world. This is not a preset box, at all, at all. You have to be a real guitar tone maven to dial this in to convincing amp clone territory.\n\nOR\u2026 or\u2026 or!\n\nYou can use the range of adjustment here, with the controls that give you a basic idea of \u2018what you\u2019re doing and how you want it\u2019, combined with for instance Edge or the upcoming Dirt plugin (softer saturation) to get tones that DO NOT EXIST but act like real amps in significant ways. You can get tones that you can\u2019t get in the real world, and dial them in to match what\u2019s in your head: in some cases maybe to a point that the real world amps couldn\u2019t reach.\n\nAnd track through them because the whole rig (when using entirely Airwindows plugins) runs NO LATENCY, so it\u2019ll feel as close as it can to the real thing, and respond with electric immediacy.\n\nAnd then unlike any real amp situation\u2026 once you\u2019ve got the final mix done, you can wiggle any of these parameters to where they need to be for THE SONG and tune the tones to best suit whatever else is there, even if it didn\u2019t exist when you were tracking it. This is a freedom of the DAW experience (don\u2019t go too overboard, make decisions!) and it might bring you the results you need.\n\nAnd all of this can be lightly applied to any other tone: real genuine amp-and-cab that was tracked too quietly or didn\u2019t pick up enough mojo, synths, drums, you name it!",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Calibre",
    "description": "a re-release of another old Character plugin",
    "tags": [],
    "slug": "calibre",
    "short_description": "a re-release of another old Character plugin",
    "full_description": "Calibre is another Character plugin, re-released in AU and VST form. This one\u2019s got kind of a steely quality and if you hype the Character control there\u2019s a point where bass cancels out: weird variation on a tone control! Also, that means if you duplicated the track (or used Blue Cat Patchwork or something) and flipped phase, you\u2019d get a really unusual lowpass and would have only the bass and a lot of strange color.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Cans",
    "description": "a room simulator for headphone mixers",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "cans",
    "short_description": "a room simulator for headphone mixers",
    "full_description": "Lots of people out there are stuck mixing on headphones, whether it's due to bad acoustics or noise complaints or simply not having a high-quality monitoring situation. After all, even if you put together speakers as revealing as NS10s, the  amplification and acoustic environment have to support them, plus you've got no hope of extending the monitoring to the bass without serious subwoofers and even more acoustic treatment, and this quickly expands to become unreasonable. So lots of people are stuck with headphones.\n\nAnd why is that so hard to make work? A simple reason. Peak energy shapes the whole character of the sound (or lack of character, all too often these days). And in a good control room, it's not just about making everything dead. Diffusion and room geometry play an important role, and the sound always bounces around because that's what happens out in reality. We hear sounds in the context of a listening environment, and through this very specific reverberation, the peak energy makes itself known. But over headphones, especially great headphones that are free of artifacts and resonances, the peak energy just gets right by you. It happens too quickly and is gone before you register it.\n\nIn a great control room you get a better sense of what lives in the peak energy, by how sound bounces off those expensive diffusors and fancy wall geometries, giving you that enveloping acoustic space without it further confusing your ear. And there's people out there ready to sell (or rent!) you the pretend versions of various ultimate rooms, perhaps with pictures included so you can pretend you were there. But what if you just got an enveloping acoustic space or five, that you can bend into whatever shape suits your work\u2026 for free?\n\nAirwindows Cans is not the same thing that's in the Monitoring plugins. It uses some of the same techniques (crossfade, allpass filters) but runs new reverb algorithms that haven't been used before, because it took days of computer time to grind out these five new verb spaces, all tailored for this one purpose.\n\nStudioA is the smallest control room, and StudioE the largest, but this is not simply a rescaling of the algorithm: each one is a unique space, designed to best represent its purpose. You'll hear the room size most clearly in the way it reshapes the bass. The Diffuse control works like adding more acoustic diffusion to the room (technically, it lets you swap any comb filter for a corresponding allpass filter). Damping provides the upholstery: studio control rooms are not often echoey and 'live', and as you turn Damping down you put up more drapes and acoustic treatment, drying up the highs and mids of the room. Crossfade brings the stereo into a more centered place or causes it to swap sides mid-reverb, and Dry/Wet controls how much of the ambience you're including.\n\nSetting everything to halfway should be a good starting point for headphone monitoring, but you can go wild trying different perspectives. For instance, in real life I have a mix check position that's upstairs in a hallway, well away from the speakers (and I've shown this on mixing streams before). In Cans, you get this by picking a larger room size, livening up Damping with a higher setting, and going more wet so you hear more of the room sound.\n\nYou can also, as I demonstrate in the video, just use it as a pretend drum room (or piano room, what have you: a studio space that's not a big hall). Because the early reflections are closely tied to the raw sound, Cans merges with the sound more than typical reverbs, as it's trying to do that rather than sound like a room of its own. Even if not mixing on headphones, this can find use!\n\nBut if you are mixing on headphones, the idea is always to find that setting in Cans that works for you in letting you hear and interpret everything in the mix, dial in your sounds and levels, and then turn it OFF before exporting. Because maybe you won't be listened to on other headphones\u2026 or maybe you'll be played at clubs, or live events, for crowds\u2026 or maybe the future means having your music played through listeners having their OWN version of Cans, or some other invented environment you can't control, in which case layering your pet monitoring environment onto all those places will turn into a muddy mess.\n\nBut if you're headphone mixing through your personal settings for Cans that make your favorite music sound like it should, and then you export your music without that interpretation built in, other people can get the most out of what you made over anything from a big club sound system, to a PA, to their own 'virtual space' that makes their music sound the way they want it to sound. Because Cans is about trying to give you a picture of all the energy in your mix, not just what's obvious over headphones. And if you find sound spaces you love using Cans, try building those sounds partly out of aggressive 'room sound making' on submixes and individual instruments, and then partly out of a much more subdued take on Cans on the whole 2-buss\u2026 and then turn it OFF for export.\n\nAfter all, if you went to mix your work in a world-class studio that reveals everything, you give people the mix that environment let you do. You don't just put up mics in the back of the room and give people THAT :)\n\nHope you find Cans useful. Remember, if you need to make a lot of stuff much more ambient with Cans, do part of it in the mix on stems and instruments, and do part of it on the 2-buss (or monitor chain) to simulate your perfect control room, and then turn the 2-buss Cans off to get the real mix!",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "CansAW",
    "description": "Chris's Airwindows room, in a plugin, for headphone mixers",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "cansaw",
    "short_description": "Chris's Airwindows room, in a plugin, for headphone mixers",
    "full_description": "This is pretty straightforward. Remember Cans? Every possible control room sound from compact to huge, adjustable any way you like?\n\nThis is the Airwindows presets. That's all.\n\nBy that I mean: I've been developing my mix room, where I do all my work, for years. By now I've got speakers, subwoofers (stereo), extensive room treatment, multiple mix check positions up to and including a stairwell at the back that leads up to a small hallway, from which you can hear how a mix hits a much larger space and how it'll work there. I have to close all the doors like to my bedroom to use that mix position, and I've shown it on mixing livestreams (though miking it can get hissy as I'm not using live-gig levels here). It's real-world acoustics used to better document how a mix works in different situations, and it works really well, better than anything you could do over headphones.\n\nAnd I've made a version of Cans that does these exact mix positions, including the hallway mix check, and while it is not as good as real life\u2026 it's not bad, not bad at all. It tells you some of the same things. It worked, in other words.\n\nThis is for me as much as you. If it's out there, even if my house gets flattened by a meteor or perhaps Elon Musk experiencing a nuclear K-hole, and I survive the meteor or madman, and I have a laptop and some headphones, I can work after a fashion :) there's enough out there whether it's publically available tracks from my own music or new synths like Six Sines or my perennial fave Surge XT (which can fire one-shot percussion samples off the wavetable osc), and of course I can download ConsoleX just like anybody (making progress on helping Yaeltex put out the control surface I designed!) and that means I, like anybody else, have access to some of the universe of free audio stuff, that universe that's become so broad that I can even do the music I care about, with just a bunch of downloading open source projects :)\n\nOf course if the meteor gets me all bets are off and you're gonna have trouble getting ConsoleH out of anybody else. But that's why I'm burning the midnight oil (well, up-very-early firewood?) to keep making stuff: I'm not done and I've got even more exciting stuff than ConsoleX in the works, as well as lots of extra support stuff to put everything in gear, and studio tricks to give audio (that can be sampled and re-used) that hasn't been heard right for decades. Starting to figure all that out, and I hope I can convey my enthuiasm.\n\nFor today, here's CansAW. You can get to any setting in it using Cans (it's all Room D, for a start). But each setting is dialed in as exactly as I could get it, using real acoustical audio for reference, in the mix environment I've been developing for years. If I had access to all the mix rooms in the world I'd give you the approximation of those as well, but here's my place, in the box :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Capacitor",
    "description": "a lowpass/highpass filter of a new type",
    "tags": [],
    "slug": "capacitor",
    "short_description": "a lowpass/highpass filter of a new type",
    "full_description": "Sometimes half the fun is just inventing :)\n\nPeople say all filter plugins are just biquads with different GUIs. It\u2019s not true\u2026 or at least it\u2019s not true at Airwindows. (actually I have to see what I can get out of biquads: I generally don\u2019t even use \u2019em at all)\n\nThis is a new filter. When I say new, I mean that you don\u2019t have it. I can demonstrate that, because due to the way it works it has a little characteristic response quirk at 1/3 the sampling rate: nothing that hurts the sound, just an odd little notch under some circumstances.\n\nBecause it\u2019s a typically Airwindowsy, not-normal EQ algorithm, nobody has tried it, and because of the little quirk, if anybody did try it they knew they had to reject it, because it wasn\u2019t perfect. It had a quirk! And even if they experimented, they probably weren\u2019t that invested in concepts like the sequence of operations on stuff that, in theory, could be done in any order. Why care so much about the implementation details of an idea that had a quirk anyhow and was therefore useless?\n\nMore fools they :)\n\nBecause musically, this filter has tone for DAYS.\n\nThere\u2019s almost an analog-synth-like effect to it: though it doesn\u2019t accentuate the rolloff point, it behaves almost like a DJ \u2018isolator\u2019 in the obviousness of its filtering. It has a highpass, a lowpass, and dry/wet, and the high and lowpass are melded into each other as part of the algorithm to get the sound more fluid. It\u2019s also got new experiments in rejecting zipper noise and clicks, because I\u2019m figuring people will want to automate this one. But, even though it\u2019ll work for crazy effects and \u2018isolator\u2019 madness, the fullness of the tone will also let you use it in mastering: if you need to tighten bass or roll off just a hint of brightness, you\u2019ll pay no penalty in the body of the music. And the dry/wet is there to let you treat it as a shelf\u2026 or to create a presence boost by isolating an area of interest, and then leaving it mostly dry with a hint of the clarified zone.\n\nI\u2019m thrilled with this filter, and nobody else has it: nobody else would be allowed to do this one, because it has a quirk at 1/3 the sampling rate, and typical commercial developers are not allowed DSP quirks. But, since I\u2019m supported by Patreon, I am.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Capacitor2",
    "description": "Capacitor with extra analog modeling and mojo",
    "tags": [
      "Latest"
    ],
    "slug": "capacitor2",
    "short_description": "Capacitor with extra analog modeling and mojo",
    "full_description": "Didn\u2019t see this coming!\n\nMy researches led me to a webpage by the electronics company Murata, and an observation: for a particular line of capacitors they make, namely high dielectric ceramic caps made of barium titanate, there\u2019s a concern. The capacitance drops sharply if you put the capacitor under voltage pressure. How much? As much as 50% for a little over six volts. It\u2019s pretty linear. Thing is, the signal is ALSO a voltage. What if it tended to modulate the cutoff? As part of analog modeling?\n\nI have plugins, the old Lowpass and Highpass, which frequency-modulate the cutoff based on the input signal. But they did it symmetrically\u2026 what about doing it the way the real-world capacitor would do it? What would you get, in the event that other capacitors had some of this behavior? It seemed like you might get a lot of even harmonics, and people tend to like that. Why not give it a try?\n\nAnd that\u2019s how something interesting got discovered.\n\nCapacitor2 is Capacitor, already a popular plugin, but with this analog modeling built in. There\u2019s a \u2018NonLin\u2019 control that lets you crank up the distortedness from very minimal, to quite extreme. It\u2019s sensitive to input level (naturally) so that\u2019s another reason to have it on a control.\n\nAnd what you get is INTENSE analog coloration, and something unexpected: it emphasizes transients and brings out the articulateness of sounds in a really distinctive way. You may not have heard anything quite like this\u2026 or if you\u2019ve been using analog gear, maybe you\u2019re used to hearing it. I really didn\u2019t plan for the result I got: if real-world caps have any of this behavior, it explains a lot. Literally all that\u2019s happening is modulating the cutoff frequency of the rather Airwindows-y Capacitor algorithm. There\u2019s no dynamics processing in there at all, but the result is incredibly dynamic. (you can even use it to boost narrow bandpasses for effect!)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Chamber",
    "description": "a feedforward reverb based on the golden ratio",
    "tags": [
      "Basic",
      "Recommended"
    ],
    "slug": "chamber",
    "short_description": "a feedforward reverb based on the golden ratio",
    "full_description": "I actually meant to do something completely different. Honest.\n\nIt was time to dig into the feedforward reverbs again, maybe rearrange them in some interesting way. Do something with the geometry of them, have them go two-into-three-into-four or something along those lines, and we were hanging out in the Monday coding livestream, starting to experiment\u2026 and one of my crew tossed out a sequence of numbers. Fibonacci numbers. Could we hear what those sounded like as delay constants?\n\nWasn\u2019t bad. Chat got buried in Fibonacci numbers for a while: we are always enthusiastic at finding weird applications of things that shouldn\u2019t be any use. After all, to get reverb tails to become seamless, the delay constants have to be set up properly. Prime numbers are key. Fibonacci sequences have nothing to do with this. And then, someone in chat observed\u2026 as the Fibonacci numbers get bigger they start approximating to the golden ratio.\n\nYoicks, scooby! We\u2019d better try it! AND THEN\u2026\n\nChamber is a feedforward reverb, using three banks of four delays each in a Householder feedback matrix, except it\u2019s feedforward. Only the very end feeds back into the beginning again, just like Verbity, just like Galactic (it is dual-mono like Verbity, as its peculiar merits fit well with a dual-mono arrangement). And the delays go to a longest delay (maximum delay size) and each one in turn, back to the first, is exactly the golden ratio smaller than the previous. It\u2019s like a big spiral of delay times, perfect to lots of decimal places. If you listen to just one instance of each delay (by turning Longness to zero, and Chamber lets you HAVE literally zero feedback), that\u2019s a weird stuttery slapback. By itself, an arbitrary little chirp, a complicated slapback that doesn\u2019t sound particularly interesting.\n\nAnd then if you turn the feedback up, with Longness, it stretches out into a continuous, seamless, perfect reverb tail, just as if all the delay times had been worked out to be perfect little prime ratios.\n\nThis was an astounding discovery. It means you can dial in any degree of feedback or none, use any delay time (everything\u2019s calculated out on the fly), do anything with it and it\u2019ll adapt. It\u2019ll always sound like a chamber, hence the name, but it\u2019s maybe more malleable than any reverb I\u2019ve ever made. And to make it even more malleable, Chamber\u2019s Darkness control is tweaked so that the fall-off over time is always accurate to the sound of audio decaying in air in a theoretically ultimate room (studied from recordings of giant underground concrete cisterns) but the tone-shaping is darkened using very warm, basic IIR filters. And on top of that, a new control for the feedforward reverbs: since Chamber is such a studio tool, I gave it a highpass. So you can plunk it on any sort of buss or channel, run it mostly dry, bring in the reverb (Chamber and Verbity are designed so as you add verb, the dry remains unaltered until you get to 0.5 on the Wetness control, at which point the verb is at full volume and you start fading the dry signal) and then begin dialing back the bassiness of the reverb without touching the dry. Very useful for a chamber or plate send, and built right in!\n\nHope you like it. Oh, and one more thing: in working on this, I found a bug that was in the Undersampling code I use. The bug was making a bit of unwanted edge, only in high sample rate stuff, only above 20kHz. I\u2019d had someone discover this in Verbity, but I didn\u2019t know what to do other than filter it at the time, and hadn\u2019t done anything yet.\n\nSo now (as of right now: redownload what you need) Verbity, Galactic, IronOxideClassic2, and Chamber are FIXED. Go back and redownload them, or get them out of the collections for various different platforms. They have all had the ultrasonic noise cleaned up: there is still a touch of audio there as part of the algorithm, but it turns out it\u2019s much less than I thought and that\u2019s reflected in cleaner sound. It should not change saved mixes significantly as it is entirely supersonic, but if it did it would only help as the traces of noise weren\u2019t useful for any purpose, they were a bug, samples being slightly out of order at 96 and 192k. No change at 44.1 or 48k.\n\nChamber actually goes a step farther, in that I added more code that subtly averages the supersonic samples\u2026 that can apply to new plugins going forward, but Verbity, Galactic, and IronOxideClassic2 don\u2019t have that as it could work like a tone change. So, compare the new Verbity to Chamber if you\u2019d like to check out the tiny amount of added depth we\u2019ll have going forward.",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Channel4",
    "description": "a tone coloring plugin that gives more of an analog feel",
    "tags": [],
    "slug": "channel4",
    "short_description": "a tone coloring plugin that gives more of an analog feel",
    "full_description": "Channel4 uses a very good-sounding saturation function, a calibrated slew clipper and a highpass to approximate the tone coloration of a recording console. (the plugin Console4 approximates the space and depth on the mix buss, which is different.) Because the bandwidth-limiters are set up based on measurements of real gear (through impulse responses), Channel4\u2019s console type is labeled \u2018Neve/API/SSL\u2019. It doesn\u2019t actually contain any of those things or any convolution kernels, but the presentation of the sound ought to suggest those voicings.\n\nThere\u2019s also an argument for doing it that way, because in many cases you can\u2019t hear those limitations unless they\u2019re being way overloaded. Channel\u2019s a very clean, pure \u2018coloration\u2019 plugin, especially with the drive kept at 50% or under. It\u2019ll voice extreme sounds the way it\u2019s labeled, but you would struggle to consistently set plugins like Slew to those targets because mostly you can\u2019t hear what it\u2019s doing, especially on normal/musical sounds.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Channel5",
    "description": "Channel for 2018, with new subtleties",
    "tags": [],
    "slug": "channel5",
    "short_description": "Channel for 2018, with new subtleties",
    "full_description": "Channel has long been a sort of test-bed of mine, and so when I started working with new methods for some of my stuff it was an obvious choice. I\u2019ve been asked for an extra Output level control, which it has (for those of you who are really into level matching, can\u2019t fault you for that though sometimes I think it\u2019s not relevant) but if you set Output to 1.0 it bypasses itself and becomes exactly, exactly the same as Channel4.\n\nExcept for two things, which first appeared in Atmosphere: this lets you A/B them with the original versions, using Channel 4 and 5.\n\nOne, I introduced the concept of live air denormalizing: before this (and on plugins I think are suited to it), Airwindows plugins watched for total digital black silence, and if it was present, produced an impossibly faint hiss sound, at around 300 dB down. If there was any audio at all that wasn\u2019t digital black, this got switched off. With Atmosphere, it\u2019s different: the denormalizing signal is always there, and if the result WITH the signal is digital black, then the signal\u2019s subtracted again. Same result, but there\u2019s a permanent noise hundreds of times quieter than typical \u2018noise adding plugins\u2019. The idea is that there can be no \u2018dead\u2019 silence, only \u2018alive\u2019 silence: you can\u2019t save the file in normal formats and retain it (24 bit audio saving will simply turn this noise to digital black again), you most likely can\u2019t hear it ever no matter what you do, but I wanted the deepest darkest silence to be alive rather than dead black nothingness.\n\nTwo, it noise shapes to the floating point buss differently, and on the one hand I bet you can\u2019t consistently hear it but on the other, I think it matters. Before, I used an interleaving technique much like I often use in IIR filters and plugs such as Capacitor. It related to the sample rate by forcing everything to be considered as the interaction between two or more samples, and the energy being brought back into the output audio provided corrections at high frequencies. What began with Atmosphere, and what you\u2019ll (maybe) hear with Channel5, is a completely different and more radical approach. These plugins noise shape ALL the error energy back into the audio. It accumulates, sticks around, and so it can contribute to bass energy in tiny amounts because it persists over thousands and thousands of samples. There\u2019s a \u2018pull-back\u2019 in the form of multiplying the amount by something like 0.999999, which will bleed built-up energy away, but this multiply doesn\u2019t happen on a per-sample basis. It happens per BUFFER. So, in the world of noise shaping floating point error, this is the one that stores up every tiniest bit of error and applies it, not interleaved but very smoothly, to the audio.\n\nWhat should happen as a result of this is, there\u2019s a sense of ease from switching from interleaved to the smooth way. It might seem a little less lively, and I\u2019ll have some plugins that retain the other way. But due to the greatly increased time during which the error is held, plugins that use the new noise shaping will be crazy good at presenting analog-like, seamless bass and mids. So, more soothing, possibly less exciting, but a huge jump in depth and naturalness.\n\n\u2026in RELATIVE terms to what was there before. That\u2019s the thing. I feel it\u2019s possible that when you get used to it the change can be dimly sensed as a good thing. I don\u2019t think you, or I, or anyone would be able to pick this out double blind. I can think of a mastering guy or two that MIGHT, but they\u2019d struggle: these are people who take pains to dither to 24 bit and say that they sense something wrong if they don\u2019t. It\u2019s on the order of that, or even more subtle.\n\nBut I do feel that one eventually senses the full range of a sound one works with, and more importantly if I can make something better I will do so, without hesitating.\n\nHave fun playing with Channel5. And if anyone needs to sound the alarm and say HEY! You need to stop using the new stuff! That noise is driving me crazy, and your noise shaping sounds awful now!\n\n\u2026well, that\u2019d be pretty funny :)",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Channel8",
    "description": "Channel7 with updates from Capacitor2 and Slew3. More and better of what Channel is",
    "tags": [],
    "slug": "channel8",
    "short_description": "Channel7 with updates from Capacitor2 and Slew3. More and better of what Channel is",
    "full_description": "Channel8 is a subtle \u2018analogifier\u2019 that applies saturation boosts, subtle highpass filtering, and slew clipping. What that means is, there\u2019s a \u2018drive\u2019 knob you can turn up to boost things, and you can pick three \u2018flavors\u2019 you might recognize. They\u2019re not really the consoles associated with those things, but they are calibrated to take effect about the same way, and when you use Channel8 (on tracks, on the mix buss, wherever) you add a little \u2018analog flavor\u2019 by restricting what the audio can do, in ways that are characteristic of real analog gear\u2019s limitations. This restricting can help make things sound bigger and more solid.\n\nThis is basically the newest evolution of Channel, which has always been one of my most popular plugins. It uses the improvements in Capacitor2 and Slew3, so basically it\u2019s still relatively subtle, still very much Channel, but it\u2019s taken on a new level in quality and natural tone. I\u2019m real happy with it, and I\u2019ll be returning to trying to fix up my video setup etc (and finishing up the dither re-releases, etc etc) knowing that I\u2019ve dropped a nice audio bomb on the world. If you ever liked Channel, this should make you real happy.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Channel9",
    "description": "Channel8 with ultrasonic filtering, and new Teac and Mackie 'low end' settings",
    "tags": [
      "Latest"
    ],
    "slug": "channel9",
    "short_description": "Channel8 with ultrasonic filtering, and new Teac and Mackie 'low end' settings",
    "full_description": "Channel9 retains everything it had\u2014the two-stage drive control, the newly improved highpass, the slew clipping\u2014the same calibrated Airwindows algorithms to not clone, but give you the general sense of various fancy name brand consoles in a cleaner, less \u2019emulated\u2019 way which lets the music through\u2026\n\nBut now, Channel9 has the same ultrasonic aliasing-filtering that\u2019s come to Console and other recent Airwindows plugins. In a new way! Because Channel9 isn\u2019t just sticking to \u201920k\u2019 as its definition of supersonic. Instead, Channel9 steepens its filter with a teeny resonant peak at this cutoff point\u2026 and then selects it in keeping with what the real console would be doing, if you had it! The Neve is the most extended, well beyond 20k. The SSL cuts off tighter, gives more audible sparkle (due to the additional gain stages in a really huge SSL desk, the cutoff will be steeper over the entire desk). API is between the two. The lift at the peak comes before the saturation stage, for better smoothness when the console is being driven.\n\nAnd then I went and added two MUCH more affordable \u2018models\u2019, with their own usefulness.\n\nThe new settings are \u2018Teac\u2019 and \u2018Mackie\u2019. That\u2019s right, old school house/techno classic basement mixers! The Teac, I was able to reference recordings of a real unit. I didn\u2019t get it perfect as the real board had a noticeable high-mids peak that doesn\u2019t belong in Channel, but it\u2019s the correct kind of dark and vibey. And the Mackie\u2019s my take on what you get out of the classic vintage 1202: A hair leaner than the Teac, but brighter. They both grind a bit harder than any of the big expensive desks, they both have slightly more exaggerated reshaping of the deep bass (using the Capacitor2 algorithm, like the others), they both control the brightest highs much like you\u2019d get in a classic old low end mixer. It\u2019s two new settings that follow entirely different rules than the big guns, for folks who know how to use an actual mixer much like metal guitarists use a Tube Screamer.\n\nYou can still have your fancy desk models (only better: the ultrasonic filtering brings just the right additional distinction to the models) but now you can go cheap and get the tone and vibe of some house music warhorses. The sonic reshaping these low end models do is just the ticket for sculpting relentlessly synthetic sounds into an appealing result. And since it\u2019s Channel\u2026 it won\u2019t have the noise of the real ones, it won\u2019t have weird extra colorations, it\u2019ll honor more of your real mix as it reshapes it: sort of best of both worlds! You can always add funky colorations or noise to your digital mix, but you can\u2019t remove that stuff from the real mixers. Channel9 will shape your sound in \u2018classic\u2019 ways but along Airwindows lines: getting out of the way so your sound is interfered with as little as possible.\n\nChannel9 can be used anywhere you like. If you\u2019re doing a Console mix, I\u2019d put it after ConsoleBuss. If you\u2019re not doing a Console mix, you can literally do anything you want with it: it\u2019s a subtle distortion/fattener combined with a set of careful tone shaping algorithms. Hope you like it!",
    "categories": [
      "Tone Color"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ChimeyGuitar",
    "description": "a supremely compressible instrument amp",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "chimeyguitar",
    "short_description": "a supremely compressible instrument amp",
    "full_description": "Here's a followup to PointyGuitar. What if, instead of distort, the imaginary amp compressed?\n\nThe tone stack works the same: in fact, it's exactly as it was in PointyGuitar, as is the cab simulation (a highpass and lowpass made out of AngleEQ, which is able to be very resonant and colorful). That's on purpose. I want it to be familiar, so the way the tone shaping works is exactly like PointyGuitar, and if you can dial one in, you can dial the other.\n\nBut instead of the basic distortion as found in 'FireAmp', what's there? BeziComp. Not even a normal compressor, no, it's the new experimental one that turns the amplification factor into a Bezier curve\u2026 but BeziComp has one instance of itself in play. ChimeyGuitar?\n\nChimeyGuitar has eight, at full crank.\n\nStacking compressors like this isn't unheard of: the FMR Really Nice Compressor has 'Super Nice' mode, which cascades three compressors in series. It's just that ChimeyGuitar does eight, of a new design which I don't think existed until I started it. That also means it's on me to sort out what the strengths and weaknesses of this new kind of compression are, seeing as we have as many as eight of them in between every EQ stage now.\n\nFirst, it can react very quickly, but refuses to alias since it will not apply a volume 'corner' above its minimum radius. This matters less used inside ChimeyGuitar because plugins like this repeatedly filter out aliasing harmonics anyhow, but it's significant because usually as you have compression kick in you hear continued interaction between the sound, and the speed of attack. That lets you dial in a squished, unvarying sound by hearing that overtone as if it was a form of distortion (which it is), but BeziComp and ChimeyGuitar don't have any of that compression artifact at all.\n\nInstead, you'll hear an odd warble when you push ChimeyGuitar too far. It's similar to when you're using DeRez3: while Bezier curves can sound like a brickwall filter, there's an strange resonance associated with it. In a compressor, when pushed hard, we hear this as tremblings of the loudness, as if trying to squish the signal makes it more jittery. It can come off like an old Arp Pro Soloist trying to imitate a trombone, but the thing to bear in mind is that you can always back off the Compres control until it cleans up again. The transparency of BeziComp means it'll clean up a whole bunch while still being compressed.\n\nThis is my go-to for articulate guitars and basses that don't seem to have saturation or distortion. It's got the flexibility of PointyGuitar, but super clean, or with strange new forms of saturation that are like derezzing. Hope you like it!",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Chorus",
    "description": "a mono chorus, also works as a vibrato",
    "tags": [
      "Latest"
    ],
    "slug": "chorus",
    "short_description": "a mono chorus, also works as a vibrato",
    "full_description": "Here\u2019s the start of some modulation plugins: Chorus will give you a nice basic mono chorusing effect, sweeping one moving delay tap against the dry signal. What makes it unusual is a pile of odd Airwindows things to adjust it this way and that.\n\nThe sweep is done with a peculiar Airwindows interpolation which both applies a bit of an averaging function, and also a subtle lift to highs to compensate for that. The idea is to have the moving part be totally fluid, analog-like, even though it\u2019s digital.\n\nTo drive that, there\u2019s a treble boost going into this smoothing delay tap, and it\u2019s based on the Airwindows Energy algorithms: that means this plugin interacts with the raw sample rate in two different ways. It\u2019s designed to make it so, whatever the sample rate, the sounds project through to the most extreme highs without edge or dullness. That means Chorus won\u2019t sound exactly the same at 44.1K, 96K and so on: it will try to deliver the most finely tuned treble for each sample rate, whatever that is, and the tonality might be different. Also, since it\u2019s running a delay buffer, it\u2019s giving you full use of the buffer at all times: the broader settings might be more useful at high sample rates.\n\nIn general, this should be pretty approachable. Hope you like the tone: there\u2019s more where that came from.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ChorusEnsemble",
    "description": "a more complex, multi-tap mono chorus",
    "tags": [
      "Latest"
    ],
    "slug": "chorusensemble",
    "short_description": "a more complex, multi-tap mono chorus",
    "full_description": "Here we can fill out the Airwindows palette of modulation plugins a bit\u2026 like Chorus, this is using my special slightly dark interpolation with a little pre-sparkle to get an adaptable, rich chorusing effect. But ChorusEnsemble uses a bank of chorus taps to get a more complex, textured sound that\u2019s farther from the original. You can set it wrongly, so don\u2019t assume all the settings are appropriate: that said, a little care should give you nice lush chorusing that\u2019ll work great on pads and backgrounds. The reason I allow for the \u2018ugly\u2019 settings is, who\u2019s to say you might not have a use for them, and if you find that use you\u2019ll have a tonal element that other people don\u2019t have on tap (generally, it\u2019s so hard to sell plugins that can sound wrong and broken that people will tend to shun that and limit you to \u2018nice\u2019).",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ChromeOxide",
    "description": "an alternate path to vibey old tape sonics",
    "tags": [
      "Latest"
    ],
    "slug": "chromeoxide",
    "short_description": "an alternate path to vibey old tape sonics",
    "full_description": "Chrome Oxide was an experiment, one that didn\u2019t go further than this. It is a dual-band tape emulation, where the lows are a bit saturated but the highs are delayed by a random noise warble that can also be biased to delay them a bit further. My pursuits of tape emulation have always gone toward the \u2018BETTER than digital\u2019 direction, where I tried to capture the magic without diving into the audio degradation.\n\nBut revisiting Chrome Oxide (and re-releasing it, with modern wordlength handling etc and dithering to the floating point output buss) showed me a plugin that excels at some tonalities I didn\u2019t even know about when I made it. For instance, your Boards of Canada type stuff, mulch-core audio where it sounds like it\u2019s coming off an old Walkman or Wollensack? This will not do crazy pitch wobbles or dropouts\u2026 but you can instantly, effortlessly get the tone of it. The intensity controls a noise effect that is FM, frequency modulating the highs against the lows. Bias further delays the highs, and this sculpts the phase aberrations of the output and the flavor of roll-off\u2026 so, without ever getting aggressive or obvious, you can just dial-a-mulch and go as fuzzy and old-sounding as you like, but musically. It is subtle enough to use on anything and aggressive enough to completely change the mood of a track.\n\nAnd now you can have it. Mulch away! You don\u2019t have to obliterate a track to get into the vibe you crave. (and of course some people hate this sort of thing: if you doubly hate this one, I\u2019ll know I\u2019ve done it right :D )",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Cider",
    "description": "a re-release of another old Character plugin",
    "tags": [],
    "slug": "cider",
    "short_description": "a re-release of another old Character plugin",
    "full_description": "Cider is another Character plugin. Works like the last few, sounds kinda like an MCI console? This plugin was posted on a week full of troubles, so there's very little instruction about it. It's a tone coloring plugin, and you can find a more current version of this sound in BussColors4 on the Dark setting.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ClearCoat",
    "description": "an array of bright ambience reverbs",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "clearcoat",
    "short_description": "an array of bright ambience reverbs",
    "full_description": "So, after months of work on refining Householder reverb matrices and realism and depth, and getting started on the huge tasks of mastering the tones of Bricasti reverbs and million-dollar analog recording consoles\u2026 I make a dual-mono bright ambience.\n\nWhat's that for? First of all, it's for me. I'm using it immediately on album mixes. But beyond that, it's an example of something very Airwindows-like: once I get access to something, I share it. I wasn't able to do sounds like these when I did the kPlate reverbs. I tried. My tools for making the Householder matrix stuff hadn't evolved enough yet: this is why kChamberAR sounds the way it does. I had bright ambiences, but they were very artificial (though, nifty in their own right)\n\nAnd this is what I'm sharing now: I got it to work. Next stage unlocked, with not one but effectively seventeen bright ambiences in one. ClearCoat is the one-stop shop for sparkle and atmosphere. It's not about lingering verb tails: the space it produces is dual-mono and remains tied to the sound that's creating it, and while there is feedback in the algorithm, it's calculated to be exactly halfway between the purity of infinite sustain, and the purity of BitShiftGain in the feedback path cutting the feedback by 6.08 dB. The idea there is to produce a consistent tone in the feedback path while allowing it to bloom a little. Basically more Chris from Airwindows experimentation: see if you like the results in the sense of space the plugin creates.\n\nOn top of that, I'm exploring a refinement of SubTight, the same plugin that backfired on me in ConsoleMC. I think if I scale it to sample rate a certain way, that might tame it, and the kind of energy it brought is perfect for this plugin. The brightening and subs-cutting is happening after the reverb matrix, to enliven the space.\n\nIt's simple to use: top slider picks a setting, bottom slider is your dry/wet. Add just a bit for in-line air on an instrument or submix, go all-wet for use on an aux. I'm using it as my Verb 1, with the upcoming kCathedral for Verb 2.\n\nWhy go for specifically this effect? The theory here is simple: you get better mixes when you're serving a purpose rather than throwing tone colors around just to make them happen. ClearCoat is there to be an extremely refined and intense form of 'nearfield reflections', like singing in a bathroom, or drumming in a live drum room. Yes, you can turn it way up and it'll sound like a really bright reverb, like a small (to medium) room with tile or stone walls. But what you can also do is turn it right down once you have the tone color you want\u2026 and then HINT at that tone color, with it.\n\nAnd if you do that, ClearCoat ought to give you the gloss you're looking for, while minimally affecting the rest of the mix. No clutter, no excess energy, no trace of a tone character beyond what you need, and a cleaner mix as a result.\n\nLet me know if ClearCoat works for you, and especially whether it's acting OK at diverse sample rates with the changes I made in SubTight. If so, I can and will update the actual SubTight plugin AND ConsoleMC to correspond (if you're working at 1x sample rates there will be no change for you, but if you're working 2x or 4x or oversampling 2x or 4x, you might not have to compensate for the brightness as much to get your sound)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "ClipOnly",
    "description": "a clipper plugin that suppresses the brightness of digital clipping without affecting unclipped samples",
    "tags": [],
    "slug": "cliponly",
    "short_description": "a clipper plugin that suppresses the brightness of digital clipping without affecting unclipped samples",
    "full_description": "Here\u2019s what I\u2019ve done. I started with Clip2 and the original Clip freebie, and I used the new plugin as a way to experiment with ideas about the recurrence of mathematical constants. For instance, a common value used in reverb allpass filters is 0.618\u2026 which can be continued into a mathematical constant, the Golden Ratio (0.618033988749894848204586). It\u2019s common for these things to turn up in disparate situations, so I look for them. And in the code where OneCornerClip rapidly converges onto full clipping with the broadest resulting variation of clip onset tonality, I found it zeroing in on cos(x) == x (0.739085133215160641655312) and selecting that optimal value for the guts of the thing I ended up with ClipOnly.\n\nIf you watch the video (one of the least necessary to watch for instructions: it\u2019s a clipper at -0.2dB) you\u2019ll see a lot about the other factors that went into ClipOnly. I show ADClip and its many controls, but then make an impassioned case for designs like ClipOnly, a known quantity with a predictable sound and no controls or adjustments whatsoever. Under normal circumstances there should be nothing you\u2019d want or need to adjust, since the clip level combined with the anti-glare prevents any \u2018digital reconstruction overs\u2019 in normal use. It doesn\u2019t do anything tricky to \u2018enhance loudness\u2019 beyond what it already is, unlike recent ADClip versions. It does have a very sophisticated enter/exit clip behavior, but to put it bluntly you don\u2019t need to be thinking about that when mixing into a safety clipper (or tracking into such a mix).\n\nIn fact, you should not be thinking of that OR me while tracking your music and mixing it, you should be thinking about the sounds you\u2019re making, and any distraction into the lands of \u2018oh gee Chris is so clever, ClipOnly was well worth the money, look at all these knobs\u2019 is hurting you even as it rewards me, the plugin developer, with attention.\n\nAnd THIS is why I program things like ClipOnly, where possible. It might be the most forgiving safety clipper yet, as far as avoiding glare and harshness (I\u2019m measuring extreme highs as much as 12 db down from the max under heavy load, and usually clippers by their nature exaggerate \u2018crunch\u2019 even when perfectly implemented). But ClipOnly is also part of a concept that I can run with now that I use Patreon: I get to make stuff that\u2019s not showing off, either with controls or concepts or fancy faceplates, and just delivers the sonic goods.\n\nI hope you like ClipOnly, but I also hope you quickly stop noticing anything about it, so you can focus on your mixing. You should be able to work into it, even hit it with heavy load and severe clipping for effect, without fussing or being distracted. The best silver bullet plugins are not the trickiest :)",
    "categories": [
      "Clipping"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ClipSoftly",
    "description": "ClipOnly2 but as a softclipper: a very handy building block",
    "tags": [
      "Latest"
    ],
    "slug": "clipsoftly",
    "short_description": "ClipOnly2 but as a softclipper: a very handy building block",
    "full_description": "What more needs be said? ClipSoftly is ultimate softclipping, using the techniques used on ClipOnly2 for softening the edge of the hard clipping, but on the softest possible clipping. Where ClipOnly2 manipulates the onsets of the brightest transients to give you pure hard-clipping without digital grit, ClipSoftly is doing that without even hardclipping.\n\nSo what we have here, basically, is a control-less (like ClipOnly and ClipOnly2) safety clipper, but it's a saturation effect. It's also a building block I (or others) can use inside larger plugins or new versions of Console, much like the recent Pop2 uses ClipOnly2 on the output, to give you the ability for really aggressive attacks.\n\nYou'd use something like ClipOnly2 in mastering specifically because it won't touch the values of any unclipped samples. ClipSoftly is different: it will touch the values of ALL samples, reshaping the whole sound to make it bigger, fatter, tubier.\n\nI hope you like it, and the way it'll affect my plugins going forward :)",
    "categories": [
      "Clipping"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "CloudCoat",
    "description": "an array of blur effects with a taste for evil",
    "tags": [
      "Latest"
    ],
    "slug": "cloudcoat",
    "short_description": "an array of blur effects with a taste for evil",
    "full_description": "Welcome back to the dark side of Airwindows!\n\nCloudCoat starts as an experiment. What if there was ClearCoat (a bank of small reverbs) except all the delays were allpasses?\n\nOkay, so a bit of explanation: allpasses are like reverb parts, but they make stuff sound smeary and blurred, like bloom reverbs. I've got a bloom reverb, MV, which is just a stack of allpasses. Most of my recent work is about avoiding allpasses completely by using reverb matrixes that give me LOTS of echo returns, impossible numbers, so I don't have to cheat with allpasses. This kind of works and kind of doesn't (work in progress, see my recent livestreams). But what would happen if you took what was clearly a reverb, and just replaced all the delays with allpasses?\n\nThat's ClearCoat and CloudCoat. The idea was I could give a completely different texture, but using literally all the same reverb constants, and then I could hear what it was like. I expected it to be more a cloudy, diffuse texture, hence 'cloudcoat'.\n\nYou might notice one difference right away: ClearCoat sounds a lot roomier. That's because it's designed with a little bit of feedback to fill it out. Sustain, if you will. It's also way more spacious, and way more metallic and ringy. This is in line with how it only uses delays, and is all part of the research.\n\nCloudCoat with sustain all the way off, is quite different. Depth and spaciousness is almost gone, but there's no metallicness either. It's like essence of fake artificial reverb blur. Remember, this too is a 4x4 Householder matrix: it's a complicated pile of allpasses, not something primitive like MV. I think it might find uses on pads or ambient sounds, or could be used to feed into ClearCoat at the same 'select' setting to create a more powerful room sound. With sustain all the way off, you can do many polite and nice things with CloudCoat.\n\nThen, throw it on some drums and turn the sustain up and ALL HELL BREAKS LOOSE :)\n\nCloudCoat is applying a kind of nonlinear reverb, like your classic 'nonlin' gated verb settings, but Airwindowsized. I'm allowing feedback, but of the four 'channels' of Householder feedback, each is also modulated by the output of the one next to it (a totally different sound)\u2026 WITHOUT smoothing. So the feedback is broken up by four banks of allpass output and cranked up to the point of meltdown, and that's CloudCoat. It disrupts the signal wildly and fiercely.\n\nWhy?\n\nBecause I tried it, on a livestream, and the drums absolutely exploded like nothing I've ever heard. There's rasp and rattle and an effect much like extreme compression while in a stone drum room, but there's no compression and no stone room. It just makes that sound. Instead of making it out of compressed, flat-topped compression smash, it's making the madness happen INSIDE the sound, meaning you can make it brutal and unbearable with ClearCoat and THEN loudenate it, unlike any other sort of compression or distortion. CloudCoat adds a whole new type of trash that is dynamic with your sound (again, nonlin) and automatically dials itself back if the source energy level does. It's a huge, nasty, energy-laden meltdown that can be escalated to pretty much any degree\u2026 and then dialed back down again, to pretty much any level of controllability, so long as you're using it on noisy percussion and as long as you're okay with its signature trash-sound, which is not like anything else and which is independent of added compression and distortion.\n\nAnd then you can do blur/texture effects with the sustain on 0. Just don't bother trying to make it work with tiny amounts of sustain: it basically can't. 0 or trash are your only options, and then there is a universe of trash and meltdown if trash you choose.\n\nBut seriously, why?\n\nBecause it makes me laugh with delight when snares go off like something out of the imagination of Trent Reznor. I don't know what to tell you. Enjoy CloudCoat, if it's the kind of thing you enjoy.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Coils2",
    "description": "a transformer overdrive emulator",
    "tags": [
      "Latest"
    ],
    "slug": "coils2",
    "short_description": "a transformer overdrive emulator",
    "full_description": "This is to Coils what Srsly2 was to Srsly. In other words, Coils was always ultra subtle. Coils2 lets you dial up the cheapness until the tone is wrecked (if you so choose).\n\nThere\u2019s two controls, Saturation and Cheapness. Saturation determines what happens outside the \u2018resonant band\u2019, and Cheapness narrows the band in which the transformer\u2019s putting out clean, pure sound. This is not a \u2018stompbox distortion\u2019 type of distortion. It\u2019s shaping the way the transformer produces sonority. If you narrow the \u2018sonority\u2019 band with more Cheapness, you increasingly distort and lose the lows and highs, and also get a hysteresis effect of magnetizing the transformer core. More Cheapness lets you hear the transformer crap out better when you overdrive it.\n\nSaturation gives you the maximum overload you can get to, NOT \u2018more total gain\u2019. It\u2019s clamping down, not boosting into. That means if you turn it up all the way you get a sort of bandpass: it\u2019s no longer really a model, you\u2019re hearing only what\u2019s left over after the transformer dies. To hear the grind, you have to set it to less than full crank, and halfway should already be quite a lot of overload (except if Cheapness is really low, it might be hard to overload the transformer, so it\u2019s a matter of taste.\n\nThat\u2019s a lot of talk to say: play with the knobs. They should do what they\u2019re labeled to do, and as long as you\u2019re not thinking \u2018turn everything up all the way\u2019 you\u2019ll be fine. It\u2019s meant to pass through a great deal of sonority even for tiny cheap transformers, just in such a way that you can really hear it this time. Coils2 is still in the spirit of Coils, in that you\u2019ll get the most accurate \u2018modeling\u2019 by not treating it as its own stompbox. It\u2019s the output stage, for shaping and sculpting things that already exist. You might combine it with tube distortion effects to get an \u2018amp-like\u2019 character, or use it subtly on a 2-buss to tighten lows and give you more impact and vibe. Remember to not use too much saturation and cheapness for full mixes :)",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Cojones",
    "description": "a new kind of distorty",
    "tags": [
      "Latest"
    ],
    "slug": "cojones",
    "short_description": "a new kind of distorty",
    "full_description": "Cojones is one of the promised releases from back when I started all this. What\u2019s interesting is, Cojones is also the seeds of Dither Me Timbers and StudioTan. That\u2019s because it does a similar thing: it tracks the trajectory of the waveform (over five instead of three samples) and either heightens or minimizes any disparities it finds. It\u2019s called Cojones, because I thought it highlighted that sort of quality in voices and guitars, though it\u2019s easy to just make it be distorty and strange.\n\nYou\u2019ll find that boosting Cojones can give a peculiar sort of midrangey sonority. I\u2019m not going to say it\u2019s GOOD sounding, but it is at least distinctive. There\u2019s also a \u2018breathy\u2019 which is more three-sample stuff like Dither Me Timbers and StudioTan, and a \u2018body\u2019 control that can beef up or cut bass and low mids.\n\nPretty much play with it and if you hate it, throw it away and curse its name and mine. It\u2019s all the rage! :D seriously, if you\u2019re the sort to like this, you know who you are. If you\u2019ve been putting Dither Me Timbers or StudioTan in places that aren\u2019t the output dither, you need to try this instead as you\u2019ll get a lot more out of it. And if its seasoning seems way too spicy and always produces trebly grit, try very slight amounts of its mojo, as this is one that\u2019s set up so you can apply too much.\n\nAfter all, what good is an ugly new distorty if you can\u2019t overuse it and make unpleasant yet unrecognizable noises? :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console0Buss",
    "description": "a radical, minimalist Console system",
    "tags": [
      "Recommended"
    ],
    "slug": "console0buss",
    "short_description": "a radical, minimalist Console system",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Console0Channel",
    "description": "a radical, minimalist Console system",
    "tags": [
      "Recommended"
    ],
    "slug": "console0channel",
    "short_description": "a radical, minimalist Console system",
    "full_description": "If the weirdness of Airwindows Console systems tends to throw you, it's probably good to skip this one. You'll either hear what it's about\u2026 or you won't. This is sort of an extreme position of a line of inquiry that not everybody buys into. It's really quite clear what's going on and why, but people disagree very intensely on whether it matters. Rather than make allowances, I thought I'd push it to the most radical extreme possible to see what happened.\n\nMeet Console Zero.\n\nThere will probably never be anything that goes farther in this direction\u2026 not in the purely digital domain, anyway. Not as free open source plugins that everyone can have. It's easy to get external hardware to do some of these things, but that's costly. Console Zero can be used by everybody\u2026 if, that is, you can deal with the demands it makes.\n\nConsole Zero is the Airwindows Console concept, crossed with the BitShiftGain concept, and pushed literally as far as it can possibly go. It has built-in gain and pan\u2026 kinda. It has aliasing-suppression filtering\u2026 kinda. It does the saturate on channels and then anti-saturate on the buss\u2026 kinda.\n\nEverything, everything is sacrificed to the Mantissa Gods. The idea is, with many analog-to-digital converters, with even fairly humble ones you can get quite a lot out of them if you just pass the audio straight through. Analog to digital straight to analog again? Often, it'll capture a really good sound. It all goes to hell when you start trying to work with it in the box.\n\nEven on a system like Console8, with NO other processing, there might be hundreds of mathematical operations on every channel, thousands. Things like sine and arcsine functions do a lot of processing to be accurate. Biquad filters can get you nice accurate filtering, but require lots of math operations to function. The stuff modern mix topologies get up to could be tens of thousands of calculations, PER sample, PER channel on the way to the final mix. We take this for granted and nobody tries to make the opposite approach work, certainly not while including filtering and analog emulation.\n\nConsole Zero does maybe eight math operations, per sample, per channel, between input and the final mix output, that touch the mantissa of the input values. INCLUDING the actual mix. Including the Console saturation/antisaturation system. Including the aliasing-suppresion filtering. Eight, if I remember correctly\u2026 for the ENTIRE chain.\n\nHow? By leaning on bit shifting, to an insane, excessive degree. It's a giant trade-off. All level and pan is done with built-in BitShiftPan. (even on the buss, and you shouldn't touch it\u2026 but why not? The point is that it doesn't alter any mantissas). That is mixing in 6 dB increments, 3 if you count moving stuff one notch to the side to make it quieter. The filtering is strictly simple averaging. One operation, and a bit shift to get back the original gain: the bit shift doesn't touch the tone. The Console system is simplified so much that it's just one calculation and another bit shift. Everything is traded off for minimalism. The saturation produces slightly more harmonics than something like PurestConsole, but almost without calculation.\n\nYou get a mix together in Console Zero through arrangement, through broad strokes. You CANNOT fuss with it. It's almost LCR panning, except there are obvious left-center and right-center points included, and a range of pannings nearer the edges. All these points sound exactly like unprocessed raw digital audio, all of them pass through the unaltered mantissa from the input sample. The entire mix, with all its levels and pannings, puts through every single track as if it was the untouched raw signal without even a gain change\u2026 because there is not a single mantissa change to any track on any channel, going into the Console processing.\n\nThis may mean NOTHING to you. If you got here and that's you, thank you for the great patience. And\u2026 does it sound good? All of this is in pursuit of a particular KIND of sound, very unlike typical DAW sound. Do you hear that in my example, do you hear it if you attempt a Console Zero mix? If you hear nothing unusual, move on, this is not for you.\n\nSome of you are going to lose your minds over how good this can sound. This is for you :)\n\nWait, it gets worse! You have to run 96k this time, 192k if you really want extended highs. If you're at 44.1k, the averaging will still work. It will be REAL DARK. Sorry! That means some people could do mixes at 44.1k with some of the desirable qualities we're seeking here, just so long as it's meant to be dark. Plenty of genres that can do that. But you should be running 96k. These plugins are SO lightweight, it's hard to even express how light they are: again, eight operations across the entire mix buss, not thousands or hundreds of thousands, per sample. That's from input to mix output. That will stand up to a lot of tracks\u2026 and the other secret is, Console Zero LOVES high track counts. The more stuff you have layered, the more freedom you have to do subtle loudness adjustments: a 3 dB nudge on one layer of one track made of four layers means the total loudness of those doubles, is the same as adjusting all of them by 0.75 dB. It will nudge one of the layers sideways in the stereo picture. And? The task becomes managing aggregates of tracks, thinking only of the big picture, letting some stuff be buried in the mix because you simply can't nudge it up in volume to balance.\n\nAnd it can all come together and work, better than you'd ever imagine, and quicker\u2026 and sound like life, not like a DAW.\n\nEither this will work for you, or it absolutely won't. Either it'll blow away anything you've tried, or completely frustrate you. This one's gonna be polarizing. It goes so far in the directions I try to achieve, that I'm certain it'll blow some of you away, and it's gonna make other people really mad. What price is an untouched mantissa? How much can you hear the inevitable digital erosion of overprocessing\u2026 and just how little processing can you do in a mix and still have a mix at all?\n\nConsole Zero\u2026 if you dare :) I will return to more accessible stuff, analog emulations etc, now. There will be no beating Console Zero for what it does. The rest is doing interesting tone colors, which I promise I'll bring you\u2026 but if this is your jam, you're done. There won't be any better from me or anybody else. It will beat many external summing busses. Console Zero is yours now.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Console4Buss",
    "description": "the original Airwindows ITB mixing system, a two-plugin mix buss replacement for DAWs",
    "tags": [],
    "slug": "console4buss",
    "short_description": "the original Airwindows ITB mixing system, a two-plugin mix buss replacement for DAWs",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console4Channel",
    "description": "the original Airwindows ITB mixing system, a two-plugin mix buss replacement for DAWs",
    "tags": [],
    "slug": "console4channel",
    "short_description": "the original Airwindows ITB mixing system",
    "full_description": "Console4 is a two-plugin mix buss replacement for DAWs. This was also the release plugin for my switch to Patreon, and the announcement that Kagi had gone out of business owing me hundreds of dollars, so for this Airwindopedia entry from August 3, 2016, I'm including the Patreon blurbs and explanation of what my business was going to do. Turns out everything I promised, I delivered on, and now everything is MIT-licensed open source. Over to the 2016 post!\n\nConsole 4 is the most recent version of basically my flagship Airwindows plugin. It works through a channel plugin on every sound source, feeding at unity gain into the buss plugin which overrides the digital summing with Airwindows summing (more internal space, more depth, and with Console 4 it now has glue making the top-end more listenable).\n\nYou can also watch the half-hour long introduction video that goes into a lot more detail about how it\u2019s used, how it works, how you make \u2018big kicks and snares\u2019\u2014Console doesn\u2019t let you crank any given channel up to full volume, but it\u2019s designed to layer stuff so if you need giant sounds the best way is to make them composite sounds, everything layered from separate channels in the mix. Rather than layer samples and put them on a single loud track, keep the layers accessible in mix. That does mean if you wanted things like sines to be superloud you\u2019d have to get creative, but the principle\u2019s clear.\n\nSpeaking of principles\u2026\n\nYou may notice no demo link, and also there\u2019s no Kagi shopping cart link. There\u2019s a reason for that. Kagi went bust Sunday. I may still get my last two months of sales out of whoever\u2019s divvying up the assets, but as of this Monday you cannot pay me for my work through Kagi, because there is no Kagi. They served me for close to ten years, always with perfect efficiency and scrupulous honesty, but the commission off my work wasn\u2019t enough to keep \u2019em going.\n\nI could go find the newest-trendiest shopping cart e-commerce people, but when I started shopping-cart shopping I found them all horrible, tacky hypemongers offering to do things like find people who\u2019d left a cart un-checked-out, and spamming them with reminder emails like \u2018Hi, I\u2019m your shopping cart and I\u2019m looonely! Do you miss me? I miss you! Surely you just forgot me?\u201d\n\nI ran away before I threw up all over their e-commerce portals. After all, I have never spammed or bugged people, never advertised, and what\u2019s more I give people free updates for as long as I live, none of which \u2018makes sense\u2019 in this happy future of badgering people for every cent, preferably by hyping them into a rental arrangement and DRMing the stuff until it\u2019s nearly ready to explode all by itself, never mind when the rent is due or the authorization servers are having a bad day. (but I digress)\n\nThere\u2019s something completely different I can do\u2014something I would never have done, except Kagi went out of business and I have no reason not to be completely rebellious and flip the marketplace table.\n\nEver heard of a thing called Patreon? It\u2019s not for discovering new artists. Really, it\u2019s more of a\u2026 payment processor. For people who are already well established, who are appreciated for what they do, and who are busy devoting their lives to giving the world something for \u2018free\u2019 (like comics, or perhaps music, or art). Much like I already do for existing customers: I\u2019ve promised all Console owners that they will have all Console updates for free.\n\nThere you have it. I am going all in on Patreon, and that is the full release version of Console 4, with the new Mac and PC VST builds, for free. Please remember this when I have figured out the details and started my Patreon. From now on, I will be relying completely on that to survive. I\u2019ve seen more than one person (for instance, Vechs, or Jim Sterling) who are doing great with Patreon, usually because they too are rebelling against some commercial thing and making a bid for total freedom from obligation.\n\nFrom now on all Airwindows plugins will be ported to Windows and Mac VST as well as being Audio Unit, and they will all be free from now on, and if I get enough Patreon support I will release all source code under the MIT license and document it as I go so that everybody can use the tools and concepts I\u2019ve built to create their own software. That will be my legacy, and if that ain\u2019t a worthy Patreon goal I don\u2019t know what is.\n\nThis includes old versions of plugins for when people preferred a certain version, so the total number of plugins to cover is over 250. That means if I do one a month it will take me more than 20 years. If I work like a maniac (well, more like a maniac) and put out one a week, that\u2019s still around five years just to turn Airwindows into a sort of audio plugin library and DSP school. And it will all be AU/VST with VST covering Mac VST2 and Win VST2 (built on older OS versions so the plugins work on the very widest range of hosts). I feel this isn\u2019t a bad strategy because if I set up the Patreon so I can actually survive on it, I can make the rate of these ports (and free releases of the existing AUs) conditional on whether I was able to eat that month, which seems fair. :)\n\nThat\u2019s not counting new research and new plugins\u2026 but I have a lot of VST plugins to do, to catch up. Over 250 of them. I\u2019d also ask pirates and haxxors (who don\u2019t have any VST airwindows but what I make, and don\u2019t have most of the AUs) to please leave this \u2018making them all free\u2019 process to me through Patreon and my own website. If all goes well, all the plugins will be free in the end (even with source code!) so if you could not mess this up I\u2019d be grateful. ;) leave it to me, please.\n\nOh, and the VST versions do \u2018double replacing\u2019, which means they noise shape to the 64 bit floating point buss. Technically that makes them higher sound quality than Apple\u2019s CoreAudio can offer, though I promise you really won\u2019t notice (and the VST versions also do 32 bit \u2018replacing\u2019 so they\u2019ll work on all hosts)\n\nConsider Console 4 an advance on this new concept. If it works, and if I can live for five or twenty years doing it, every possible Airwindows plugin will be part of everyone\u2019s toolbox and the code will be out there making people\u2019s products better.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console5Buss",
    "description": "a richer, warmer Console system",
    "tags": [],
    "slug": "console5buss",
    "short_description": "a richer, warmer Console system",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console5Channel",
    "description": "a richer, warmer Console system",
    "tags": [],
    "slug": "console5channel",
    "short_description": "a richer, warmer Console system",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console5DarkCh",
    "description": "a richer, warmer Console system",
    "tags": [],
    "slug": "console5darkch",
    "short_description": "a richer, warmer Console system",
    "full_description": "Console5 uses some more \u2018expensive\u2019 math operations, where previous Consoles tried to do their thing while keeping the Channel component as low-CPU as they possibly could. This might mean a heavier CPU cost, or it might be not that much of a difference. It\u2019s a change (the math here more closely resembles Density or PurestDrive).\n\nWhat do you gain? Using this more advanced math means there are functions which can exactly \u2018undistort\u2019 what comes in (more on that property later: there\u2019s a variation on Console that perfectly nulls when only one track is active). This brings an added level of bigness and signal purity. Then, Console5 applies a similar behavior to the slew factor, but backwards to what the amplitude factor is getting. Doing that takes Console5 away from perfect transparency (and subtlety) and gives it a big, beefy, large-console sound that still doesn\u2019t radically alter individual tones\u2026 but throws in TONS of \u2018glue\u2019 and solidness compared to the raw digital mix.\n\nThis is not a thing you\u2019d struggle to hear (listen for depth and space, not frequency changes). This is not a thing that\u2019d get washed out in mp3 encoding (in fact, because of the way it restricts slews in Console5Buss, it\u2019ll actually help encoding a teeny bit, because superhigh frequencies waste bandwidth better used on the mids). This is the new Console, and it should be a real revelation to mix through, no matter what style or genre you\u2019re working in.\n\nAs seen in the video, if you\u2019ve got a DAW that can enable/disable plugins on selected channels, you can audition it with one mouse click to switch. Console5 works like this: you want Console5Channel on every channel feeding the 2-buss (with all submixing and all post-plugin faders at unity gain), and Console5Buss first on the 2-buss. That\u2019s all, just replace digital summing with this system. If you can do post-fader plugins, you can use the faders (otherwise, best use the trims on the Console5Channels, or any earlier gain trim). The point is to replace your digital summing network with the Console5 system.\n\nIf you have that mastered, you can start playing with stuff like putting things \u2018inside\u2019 Console: delays, reverbs, EQs. Plain digital EQ in particular benefits from being post-Console5Channel on the track. Gain stage everything so you\u2019re not slamming Console5Buss more than about +3 dB: it should survive hot peaks but there\u2019s no special benefit to clipping it, and Console5Buss will clip there. Ideally, you\u2019ll frame a mix with Console5 in place, and you may find you don\u2019t need to do nearly as much \u2018twitchy DAW stuff\u2019 to get things sounding acceptable. Console5 addresses the root of the problem in a way no other \u2018console emulation\u2019 does. (if they do, you\u2019ll find they have exactly the same constraints: needing to keep unity gain between Channel and Buss plugins is a dead giveaway they are using the Airwindows design)\n\nThis is the Console version that can generate DC offset from sawtooth waveforms due to its interaction with slew rate handling, and the final Console5 you can get attempts to accomodate that. For the launch version (with a different DC-block strategy in place), use C5RawConsole.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console6Buss",
    "description": "a new more intense Console that peaks at lower dB",
    "tags": [],
    "slug": "console6buss",
    "short_description": "a new more intense Console that peaks at lower dB",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console6Channel",
    "description": "a new more intense Console that peaks at lower dB",
    "tags": [],
    "slug": "console6channel",
    "short_description": "a new more intense Console that peaks at lower dB",
    "full_description": "A little while ago I got a note from veteran GSposter torridgristle, entitled \u201cSimple Encode/Decode (Inverse Square)\u201d. It was a very simple little note.\n\n\u201cSomething I\u2019d been using in GLSL shaders for brightening the image turns out to work pretty well for an encoder / decoder pair when demoed with Maths. It may already have a name but I refer to it as inverse square. 1-(1-x)^2 and 1-(1-x)^0.5 https://www.desmos.com/calculator/3vhxkwjjyi The quiet parts are shaped like a plain multiplication, just a simple scale up or down, and then it curves back toward 1.\u201d\n\nNow, this wasn\u2019t quite code yet (for audio purposes, it has to be able to do negative voltages, perhaps suppress inputs that would give broken outputs) but I asked if I could have it under MIT license anyway, and torridgristle said yes, and off I went to code it into a Console-like thing to see what happened.\n\nRight away, I noticed that it was kicking in WAY harder. You could still put full-scale audio through it as one track, but for a dense mix, it broke up a lot sooner than Console5 or any previous Console had done. The channel plugin made stuff a lot louder and more aggressive, and the buss plugin cut stuff back harder. I had to pad my choir demo back a lot simply to stop it exploding in distorty noise. However, when I did\u2026 it was a hell of a big, intense, Console-style sound. This one wasn\u2019t subtle at all.\n\nAnd then, when I remembered how many times people had wanted a Console that did NOT have to peak near 0dBFS\u2026 I knew me and torridgristle, whom I\u2019ve never met and don\u2019t even know the first thing about\u2026 were onto something.\n\nThat\u2019s the neat thing about open source when people are willing to use it. I mean, yes Patreon, you wouldn\u2019t have this at all if not for that, you wouldn\u2019t have future stuff inspired by this etc etc\u2026 but the heart of it is, you have the newest greatest Console because two complete strangers got together and cooperated. torridgristle used this in shaders and has never heard what it sounds like until today, and had no idea what it would do or what it would sonically mean. I know an incredible sound when I hear one, and I know it\u2019s useful for people who are NOT trying to mix super-loud into their DAW buss, but I didn\u2019t think up the very simple and elegant little algorithm. torridgristle didn\u2019t code the Mac AU and VST Mac/Win/Linux ports, I didn\u2019t code the GLSL shaders and have never seen what they do.\n\nBut the whole is greater than the sum of its parts, and without either of us being too troubled with great struggling, Console6 happened, and here it is.\n\nSo the bottom line here is simply usability: mix into this like it\u2019s an analog mixing console that can be overstressed. You can still put full scale single tracks through there, losslessly, because that\u2019s what any Console does. You can mix into it provided you don\u2019t stress the buss too hard (or don\u2019t mind the distortion you get). Gain stage before hitting the Channel plugins, one Console6Channel plugin on each sound source with unity gain through the mix structure into the Console6Buss plugin. If you need to slam stuff louder afterward you must do it AFTER the Console6Buss plugin, in whatever way you like. Console is always a digital mix buss replacement without an EQ-style sound of its own, so if you want further color you need to use other plugins outside Console. If you\u2019re daring or just curious you can use things between the plugins (\u2018inside\u2019 Console) such as a DAW EQ, echoes, subtle reverb etc. If you choose wrongly, it\u2019ll distort or be weird, and things like EQs will be much more sensitive than usual to boosts and cuts.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console7Cascade",
    "description": "a drop-in replacement for Console7Channel that allows for MUCH higher gain",
    "tags": [],
    "slug": "console7cascade",
    "short_description": "a drop-in replacement for Console7Channel that allows for MUCH higher gain",
    "full_description": "I heard you liked slamming consoles. So I put five individually ultrasonic-filtered stages of slamming into your console so you can slam console while you Console7 :D\n\nThis is pretty straightforward. It\u2019s a drop-in replacement for Console7Channel, right down to the gain staging that works with the trim control to fit the result into the mix.\n\nThe difference is, this uses FIVE gain stages of the same processing in Console7Channel. And of course it\u2019s always better (I\u2019m learning) to filter more gently between individual stages, rather than try to super-filter all at once and then do all the distorting. And so, Console7Cascade is born: turns out to be a very very \u2018consoley\u2019 type of crunch.\n\nBy that I mean it seems to barely crunch at all. It just intensifies and gets REALLY LOUD. Might work as a guitar amp sim too? It worked so well for me on my drums that I might end up just using it by default for that: just all of the channels, all get Console7Cascade. You could also put it in place on a submix\u2026 or all the submixes, if you\u2019re kind of insane. This produces a really intense tubey loud effect with very little scratchyness or grind. I\u2019m pretty sure it\u2019ll be kind of brutal on the CPU as it\u2019s not only an Ultrasonic, but also five Console7Channels, each of which run two sine functions.\n\nYou might just find it was all worth it, though. Why compress when you can cascade Console7Channels?",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console8LiteChannel",
    "description": "simplified Console8, working with just a single mix buss",
    "tags": [],
    "slug": "console8litechannel",
    "short_description": "simplified Console8, working with just a single mix buss",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console8LiteBuss",
    "description": "simplified Console8, working with just a single mix buss",
    "tags": [],
    "slug": "console8litebuss",
    "short_description": "simplified Console8, working with just a single mix buss",
    "full_description": "Here's a useful update on Console8! The original Console8 was unlike any other Airwindows Console, as it's designed to be used only in a Channel/Submix/Buss configuration. Its ultrasonic filtering needs to run through all three stages in order to be set up right. Yet, Console8 also introduced other things: a custom distributed highpass algorithm for acting more like real-world analog circuits, treble softening to mimic the use of transformers, and as a result you got a distinctive sound that wasn't present in more purist Console versions.\n\nEnter Console8Lite! Bear in mind that the full three-stage Console8 will still have a slight edge in certain ways: the interactions with the ultrasonic filtering are more intense, and things like the capacitor emulation work more effectively on the larger mix topology with more stages. But there's also a place for simpler, more direct mixers, and that's where Console8Lite comes in.\n\nIt's designed from the ground up to bring all the Console8 features but in simpler, traditional Airwindows Console form. You put the channel plugins last on each channel, have the faders at unity gain, and put the buss plugin first on the buss. Everything else, from the custom highpassing to the treble softening to the ability to boost the buss output into an on-board version of ClipOnly2, is there in the simpler form, easier to set up and ready to bring analog tone to your DAW mix.\n\nWhen using it, set it up like any pre-8 version of Console. Use it as a replacement for Console8, though each plugin is roughly equivalent to a Console8 stage's In and Out run in series: if you mix and match it with Console8 full version it'll function but the ultrasonic filtering will no longer be calibrated.\n\nHope you like the new, simpler and more direct Console8Lite :)",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Console9Buss",
    "description": "just the summing from ConsoleX",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "console9buss",
    "short_description": "just the summing from ConsoleX",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Console9Channel",
    "description": "just the summing from ConsoleX",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "console9channel",
    "short_description": "just the summing from ConsoleX",
    "full_description": "Here we have the first part of ConsoleX that can come out and be put into use, just as it will be used in ConsoleX.\n\nYou see, the upcoming Console system is the big one with all the EQs and multiple dynamics paths and StoneFire built in, and it's got so much going on it requires the development of an elaborate GUI (for which a lot of work has already been done). But the guts of the system remains Airwindows Console and that gets its own development. Console is the system by which all the sound sources get pre-distorted and then un-distorted on the buss after summing, for a sound that (in theory) doesn't touch the tones of any individual mix element, but alters the spaces between the sounds.\n\nSo when using Console (or any version like Console9 that's strict about this) you should expect to hear exactly the same sounds you originally had, but they'll sit differently. They'll make up a more convincing space, in a subtle way that shouldn't mess with your sounds, that will just make it easier to make those sounds gel into a mix that feels good.\n\nThe algorithms for Console9 (as used in ConsoleX) are new, but they came about through work I did revising Console6. It turns out there's a resource called 'Herbie' that helps you re-hack algorithms to work better in floating point. That's immediately of interest to me, as I'm fascinated by the ways our simple digital math erodes and harms the tone of our sounds\u2026 I've already done a lot of work on word length and dithering, and I already advocate double precision processing over the use of simple floats. But it turns out algorithms that don't play right by Herbie can have special (bad) qualities, and the original Console6 plugins were guilty of this.\n\nWhat would happen is there'd be a big spike of inaccuracy as the calculations swept by zero. And that's as may be, but we're dealing with audio: especially with low frequencies, the sound is constantly sweeping through zero! It's digital math reinventing how to make crossover distortion as found in class AB amplifiers. Herbie exists to re-design such algorithms so they sweep through zero (or wherever else there's an issue) perfectly. It'll also estimate how much extra CPU it'll take: sometimes it'll do a silly approximation and say 'oh hey, if you just replace all the outputs with 0 you still have X much accuracy but the code runs much quicker!'\n\nThere were optimizations for Console6, and the version in Consolidated (and in the downloadable plugin collections) is the new version. The download from when Console6 first came out, remains the same for historical purposes and so you can get a hold of exactly how it was when it came out (this is true for pretty much all Airwindows plugins: use the collections or Consolidated to have the recentest versions).\n\nBut it turned out there was also a set of distort/undistort curves available from using the same type of math as in Console6, the Herbie-optimized sort, except scaling things by the golden ratio (of course it had to be the golden ratio, that thing pops up all over the place) and this produced a new sound for Console. It's got more headroom than any previous Console system, while also having some of the raw intensity of Console6 (which, even fixed, might be a little too raucous and garagey for most purposes). It's got a real good sense of transparency but it strongly brings that Console vibe to the spaces between the notes. And it's the summing buss that is going into ConsoleX.\n\nThe reason I say it's also the part that will be used IN ConsoleX, is because I'm adopting some Chris Lord-Alge-isms in ConsoleX. My take on how sends and verbs and things should be handled in ConsoleX is to use them kind of like Console8 uses submixes: you'll be sending stuff from channels to other channels that have the verbs on them.\n\nThe difference is, when you do that you put Console9Buss at the top of the sent-to channel\u2026 put in your verb or whatever, all wet\u2026 and then run the result through ANOTHER instance of ConsoleXChannel, and sum that. So, the idea is 'decode and then recode, except you get literally all the processing from any ConsoleXChannel, all over again, on the verb or delay returns'. And then you adjust those the same way you'd adjust any other channel: they just come in on even more channels, and all the same features apply. And so, Console9Buss is your 'decode' for making further verb stuff happen, because you don't need to run the full ConsoleXBuss to do that.\n\nThere's still loads of work to get ConsoleX done, plus I'm having another crack at ToTape to address the eager aliasing that came out of Dubly2. Unlike that weird beast, Console9 is very clean and simple so you can oversample it to the moon if you wanted to: I will not be doing that, I'll be running it at 96k and it will be fine. There is a reason people got an 'analog immediacy' hit off ToTape7: aliasing suppression is a tradeoff between artifact minimization and overprocessing tone-flattening, and in ToTape you're hearing one extreme. I'm still going to see whether I can have best of both worlds but I'm not taking away the ToTape7 people enjoyed. And when ConsoleX comes out, there'll be a dedicated 'only the tone controls' plugin (for use pre-EQing stuff to a channel instance of ToTape, which is a black art of its own) and so you'd be able to run the EQs and then oversample the summing buss to the moon if that pleases you, using Console9 to stand in for the built-in versions that are part of ConsoleX.\n\nFor now, I will continue to get over my recent bout of COVID (I'm testing negative, have just lost a lot of energy so be patient), will continue working through the backlog of plugins that can come out, and I'll talk to ya later :)",
    "categories": [
      "Consoles"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "ConsoleLABuss",
    "description": "the Airwindows take on the Quad Eight console",
    "tags": [
      "Recommended"
    ],
    "slug": "consolelabuss",
    "short_description": "the Airwindows take on the Quad Eight console",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "ConsoleLAChannel",
    "description": "the Airwindows take on the Quad Eight console",
    "tags": [
      "Recommended"
    ],
    "slug": "consolelachannel",
    "short_description": "the Airwindows take on the Quad Eight console",
    "full_description": "APIs and Neves and MCI, oh my\u2026 well, ConsoleLA emulates the most incredible console you've never heard of. This thing was the sound of LA in the seventies. It's on the back cover of Steely Dan records, it's been seen in Tom Scholz's basement, and it's heard even on classic 70s LA and Hollywood and San Francisco records it didn't make\u2026 because it's the production model of a whole lineage of West Coast custom recording consoles with similar designs and circuitry. And you can still get them, apparently, the company lives\u2026 but I don't know where, or for how much, or how, as there's no sign of prices or any way to get them. There's none on Reverb, Vintage King doesn't have any, good luck even finding channel strips\u2026\n\nMeet the Quad Eight.\n\nThis sound echoes through the Seventies. Tons of Steely Dan, tons of Zappa, Grateful Dead, Neil Young, Joni Mitchell\u2026 that's not even counting the wilder sightings, like when people figured this console mixed The Wall, or hearing it on Yes's Relayer album. The thing is, this was THE big production console before the days of Neve and API and SSL. Quad Eight were the first to go into production and come up with a recording console that you could just buy, set up, and use. Before them, you had to build your own.\n\nQuad Eight were (are, since the website says they can still make you gear) supplying the film industry, and it shows. These desks are amazing at making movies for your ears. (in the Zappa phrase, on the Hot Rats album, which was done at the Whitney studios in Glendale the year before they got a Neve, so that album was likely also Quad Eight or a kindred West Coast console)\n\nConsoleLA, like ConsoleMC before it, is a bit of a different approach to emulating these great old dinosaurs, some still things you could conceivably find and have, some forever lost. The thing is, this is the nearest thing to custom point-to-point wiring of discrete transistors. On top of that, the Quad Eight ran a higher supply voltage than anybody: negative 28 to positive 28 volts, for enormous energy and headroom. The way to get these sounds is not layer upon layer of 'digital emulation' but trying to get the behaviors right with minimal, atypical algorithms. Only then can you get the energy and sonority of the real Quad Eight.\n\nThe filtering is a whole other thing from the MCI. No mid peak here. The slopes are more gradual, but you can cut the hell out of the mids, and the deeper into the Seventies we got, the deeper the midrange cuts became. What I've done with ConsoleLA is try to make the simplest, most approachable Console system that can get the widest range of sounds as heard on these records, and reward you when you pursue music-recording in the old school, human way.\n\nThis doubtless won't be the last, but it might just end up being my favorite. I hope you like ConsoleLA :)",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "ConsoleMCBuss",
    "description": "the initial, bright take on the MCI console",
    "tags": [
      "Recommended"
    ],
    "slug": "consolemcbuss",
    "short_description": "the initial, bright take on the MCI console",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "ConsoleMCChannel",
    "description": "the initial, bright take on the MCI console",
    "tags": [
      "Recommended"
    ],
    "slug": "consolemcchannel",
    "short_description": "the initial, bright take on the MCI console",
    "full_description": "ConsoleMC is replacing my fully analog mixing system, which I'm now looking to sell off. Technically, just the mixer, as I can re-use the Lavry for tracking, where I used to have it dedicated to re-capturing the mixdown from the Heritage Audio mixer. This is what it took, to retire that glorious beast.\n\nIt's a channel strip that functions like a normal Console Channel, except it's got treble, a sweepable mid that only boosts (like the classic MCI mid boost), bass, a fader that runs before the EQ section like the classic MCI, and a special pan switching network that's like an evil cousin of LCR panning. And it's a summing buss that brings the summing character of the big MCI desks with a gnarly analog dirtiness that's not simply 'add a distortion box' but is actually a modification of other recent and unique work I've put out.\n\nConsoleMC draws on the following recent plugins: Creature. SubTight. Sinew. ResEQ2. Pear. BitShiftPan. There is not a single normal DSP algorithm in this thing unless you count sin() and asin() functions. It is ALL built out of current, 2023 Airwindows plugins that have all been pretty well received, sometimes with a fair bit of excitement. I told you all this was working up to something. This is it.\n\nSpecifically, this is the first 'it' to come together: I've got at least five other big console concepts that deserve this treatment, but ConsoleMC is right here for you to jump into, right now. There's a couple reverbs in the demo, including kCathedral which is a call-out to the corresponding Bricasti patch. Those are for later.\n\nConsoleMC is designed around running at 96k (or possibly 192k if you're so inclined) but ought to work at 44.1k. If you're at low sample rate and seek to oversample it 2x or 4x it shouldn't do it any harm.\n\nConsoleMC is NOT flat when set neutrally: use ConsoleMD for that. ConsoleMC, in its debugged form, uses the technique from SubTight to rein in subsonic bass, and this ends up applying a touch of very high-frequency 'air' that was unexpected. The original release also didn't scale this effect to sample rate (it's a very new algorithm that didn't seem to work that way at first) but the Redux version, which becomes the go-to version of ConsoleMC, does scale to high sample rates without losing additional bass. Again, for a DAWlike flat response use ConsoleMD, which has those 'inter-stage' highpasses stripped out. If you're okay with mixing into a slight presence lift and would like extra personality go with ConsoleMC.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "CreamCoat",
    "description": "a swiss army knife reverb with soft undersampling",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "creamcoat",
    "short_description": "a swiss army knife reverb with soft undersampling",
    "full_description": "Here's where the DeRez3 plugin came from. CreamCoat works as a general purpose reverb/ambience, taking the same basic algorithms from ClearCoat (when there's the Select knob and it's made out of 4x4 householder matrices, it's a Something-Coat reverb) but working an amazing trick on them that can really transform them.\n\nIt turns out you can get a smooth, lush effect out of the undersampling (no weird 'antique digital' artifacts) so long as you undersample by an exact divisor of the sample rate, and then use the Bezier curve trick to reconstruct the wave from the low sample rate.\n\nIf that was too technical, listen to the tone of the reverb as you drop the sample rate with DeRez. You'll get a series of 'steps', each of them being clean and natural-sounding, but having a very sharp cutoff. It's like a filter, but it's just how the wave is reconstructed. Using it at high sample rates is even better because it gets to reconstruct in a more finely-grained way, but also you'll get more 'DeRez' options around the area you're finding useful!\n\nIn keeping with the 'swiss army knife' concept, CreamCoat has a wide-ranging Regen control, letting you do infinite reverbs across any of the settings, or extremely short ambiences. And a Predelay control, letting you sit the short ambiences exactly where you want them.\n\nThis is almost certainly a better 'general purpose' verb than the original ClearCoat, which is simplified for ease of understanding the code. It's still pretty simple, though! I've got many more sophisticated reverbs coming or planned, but with this and CrunchCoat you should be able to cover an absurd number of bases, reverb-wise. I hope you enjoy CreamCoat!",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Creature",
    "description": "a soft slew saturator, a new class of noisechanger",
    "tags": [
      "Latest"
    ],
    "slug": "creature",
    "short_description": "a soft slew saturator, a new class of noisechanger",
    "full_description": "So here's something new: didn't exist before, even I didn't have it.\n\nCreature is a soft slew saturator. It's a way of working with applying a sin() function to slew clipping. In fact it applies an unbounded sin() function, so it might be technically considered a slew wavefolder? Because that's what everybody needed, was a slew wavefolder. How useful, nerdy, and pointless.\n\nNot so much. Listen to this little monster.\n\nCreature is up to 32 (or more, at high sample rates) soft slew saturators, stacked up like the poles of a filter. It acts like a distortion, except it's not a distortion. It acts like a filter, but it's even less of a filter. Its interaction with sample rate is really strange (has to scale up with the square root of the sample rate multiplier!)\n\nAnd what Creature really does, is roar.\n\nAs you keep adding Depth, the gain and the thunder increase unreasonably. The total force on tap is pretty ridiculous, and it keeps getting harder to control as you turn it up. There's an Inv control that can give you a really interesting cancellation that acts like a highpass-ish, but not like any highpass you've ever heard. Using it in phase, in Wet mode, unleashes a monstrous overdrive with humongous bass that refuses to lose weight even at impossibly high gains (real interesting on drum rooms!)\n\nThere is no overdrive. There is no EQ. There is no highpass.\n\nIt's just Creature, which is very much its own beast. It's also a very, very simple algorithm (isn't that so often the way?) so especially at low Depth settings, all this monstrousness can be yours for almost no CPU. I'll be finding ways to put this to use, but as always, you've got it fresh from the plugin forges. Be careful, and have fun with your new Creature.",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "CrickBass",
    "description": "a flexible but aggressive bass tone for dual pickups",
    "tags": [
      "Latest"
    ],
    "slug": "crickbass",
    "short_description": "a flexible but aggressive bass tone for dual pickups",
    "full_description": "I consider this a utility plugin, and maybe it'll find utility with you too. What's a CrickBass?\n\nChris's Rickenbacker Bass, set up with two DI inputs for neck pickup on the left and bridge pickup on the right.\n\nNow you might ask, which Chris? Well, obviously, Chris from Airwindows, but this plugin really came into existence when I worked out some of the details about Chris Squire's Rickenbacker tone\u2026 because this is also in the style of what he did.\n\nThe trick to Crick is, that bridge pickup is rattly and abrasive and would seem to be a great candidate for distortion and re-amping. And the neck pickup's right up by the neck, thin and relatively low impedance, and would seem to be a good candidate for clean and accurate low-end.\n\nAnd that's not what Chris Squire did, and when you hear and play through CrickBass you understand why that's not what he did. Squire liked to overdrive, not the bridge, but the neck pickup. That rattly clangy bridge was kept clean, even though it sounds amazing cranked through an amp.\n\nCrickBass is a composite of the Airwindows plugins BigAmp and LilAmp, with BigAmp on the left to take the neck pickup and distort it, and LilAmp on the right to give the right amplike qualities to the bridge pickup. Both share the same set of drive and tone controls, but the controls cover different ranges on the different amps to produce a range of sounds that should all work and adapt to any stereo bass (as in, neck and bridge pickups on separate outputs). Use the controls on the bass to make subtler adjustments. Adjust the drive for how much gain you should have, remembering that the neck pickup is supposed to overdrive enough for a huge foundation of the sound, and that the bridge pickup is meant to be cleaner but not necessarily totally free of grit. Then adjust the tone so that clicks, string handling and so on, hit with the tone quality of whatever snare you're making the bass merge with.\n\nBoth of these amp sims make a point of applying anti-aliasing filtering as part of the EQ filtering that helps mimic a cab, so they're far from full-range but good at sounding analog. Even when set up to be bright as hell, that's still 'bass amp' bright rather than 'supertweeter' bright. The idea is to match other elements in the track with your bass string percussive noises, so they jump right out and hit like a train.\n\nAnd then if you're NOT aiming for a really abrasive proggy tone\u2026 handle the string in such a way that it's not making vicious SKRONK noises :) maybe dial back the tone but do it with your playing, and let the 'amp' continue to deliver midrange articulation to the mix. That'll sit in the mix more effectively than something which sounds deep and bassy in solo.\n\nIf you're looking to get REAL abrasive, the remaining ingredient is fret buzz, and this combined with a really low action and heavy pick attack will get you into the Chris Squire zone very nicely (which some people don't like one bit\u2026 matter of taste and style, really).\n\nYou can also run a mono bass into it and it'll still work, but the intention is for neck pickup on the left and bridge pickup on the right. It'll sum the two sounds to mono in any event.\n\nIf this is the sort of thing you like, I might have given you a quick Crick in the neck (and the bridge!) and a real short-cut for bass DI tracking. Since this is a plugin, you can track right through it (zero latency) and then if you must do something else in the final mix, you still can. But it's meant to deliver this sort of tone in the most direct, no-fuss way imaginable. I'm looking forward to using this on everything: the extreme rawness of BigAmp and LilAmp turned out to be ideal for this purpose. If it's also useful to you, then yay! Bonus. Or of course misuse it, run breaks or synths or drums into it. Have fun!",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "CrunchyGrooveWear",
    "description": "a version of GrooveWear for more edge and distortion",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "crunchygroovewear",
    "short_description": "a version of GrooveWear for more edge and distortion",
    "full_description": "GrooveWear began as a feature on ToVinyl. It defaulted to \u2018on a tiny bit\u2019 and gave a slight treble lift and sculpting of the highs, following its working principle: averaging/smoothing the rate of change of the signal, something that\u2019s not normally present in audio processing. This would cause the output to try and \u2018keep going\u2019 at the speed it was moving, like a phono cartridge needle that had weight and inertia.\n\nThe thing is, it was also implemented with a bug (or possibly just an unwitting choice). It\u2019d overshoot, and bring on a kind of treble zing that was distorted and didn\u2019t always work for everybody. When I split this feature out into a dedicated plugin, GrooveWear, I found out through trying to incorporate a dry/wet control that I could apply half the effect and then the \u2018groove wear\u2019 wouldn\u2019t overshoot. And it produced a treble-eroding plugin with a different operating principle than normal EQs, with the same \u2018glue\u2019 effect but none of the tizz or distortion. And that\u2019s GrooveWear, and I considered it a good bugfix and came up with a way to run the dry/wet control in four stages so you could have the new \u2018glue\u2019 over an even wider frequency range, from a \u2018purest\u2019 one stage to twice the intensity of the original thing in ToVinyl. I still see that as the \u2018groove wear\u2019 to have, for realistically getting a \u2018vinyl warmth\u2019 effect, and I stand by that version.\n\nAnd yet\u2026 some folks missed the zing. So, this is for them.\n\nI\u2019ve experimented and I think this is the optimal algorithm for doing that original \u2018energy boost\u2019 up top, except now you can apply it, too, at a wider range, and you can also get up to four stages of the effect. Adjusting the dry/wet will dial in a wide range of tones because of the way the effect kicks in (halfway engaged stages give that treble-eroded quality, so the effect is most striking at 0.25, 0.5, 0.75, and 1.0). And if you fully crank it out, you can get a really intense sort of treble hype that\u2019s not like traditional EQs. It\u2019s more exciter-like, and has no pre-echo even though it seems like it\u2019s a very high Q filter with lots of resonance. It\u2019s crunchy and adds zing and character and if you\u2019re actually seeking fake zip of an interesting color, CrunchyGrooveWear has lots of potential. Remember, if you\u2019re looking for the most extreme crunch, use 0.25, 0.5, 0.75 or 1.0 as intermediate settings actively take highs away again (GrooveWear functions linearly so it doesn\u2019t have this behavior). But you\u2019ve got the full range of adjustments, because sometimes it\u2019s nice to let a plugin into the wild that\u2019s extremely weird and untame. This one\u2019s born to be a secret weapon because it\u2019s strange and unpredictable.",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Crystal",
    "description": "a tone shaper and buss soft-clipper",
    "tags": [],
    "slug": "crystal",
    "short_description": "a tone shaper and buss soft-clipper",
    "full_description": "Crystal\u2019s the first of the Character reissues, by request: I know there\u2019s the possibility for this to become people\u2019s favorite plugin, because it already is one user\u2019s favorite buss plugin and he begged me to rerelease it with updated code and VST compatibility. This is the result. Tonally it\u2019s exactly the same as the classic \u2018magic\u2019 Audio Unit, but it\u2019s got the denormalization and noise shaping to the floating point buss of 2018 and beyond.\n\nThe controls you\u2019ll be interested in are Hardness and Personality. Hardness applies the same algorithm that was in \u2018New Channel\u2019: though it\u2019s not a replacement for what made Channel special, it\u2019s got its own uses. It lets you define the onset of clipping, whether soft-clip saturation or digital hard clipping. Though this dirties up the sound a little, it lets you dial the \u2018fatness\u2019 of the saturation effect and gives you a tonal parameter that no other Airwindows plugin gives you. Think of it as a slider for how much the roaring, overdriven midrange sticks out.\n\nPersonality is a precursor to what became BussColors (and there are other flavors to come) but in Crystal it\u2019s a little different. The BussColors algorithms are taken from hardware convolution impulses, and there\u2019s a time-constant making the interpolation between \u2018loud\u2019 and \u2018soft\u2019 impulses happen over several samples. In the Character plugins, this didn\u2019t happen. It was sample-by-sample, so on the one hand there was no dynamic behavior, just each sample got a fixed convolution behavior.\n\nOn the other hand (and it took me a while to properly understand this) every convolution sample got its own, separate dynamic behavior. The curve was different for each one, so it became a more tightly controlled little kernel rather than a set of possible kernels. There are still people who swear these were the great ones, and I\u2019ve learned to pay closer attention to such things.\n\nAnd the thing is, Crystal\u2019s not using a hardware sample. Unlike anything in BussColors, Crystal\u2019s using a data set that comes from doing a brickwall filter: if I remember correctly, two different ones at different Q/steepness, and then generating the dynamic behavior out of that. So it\u2019s doing a treble-restricting EQ behavior (a FIR filter), but then it manipulates that. The question is, do you like what it does? Some people really, really liked this one. Not everything about it is in line with how I usually do things. That\u2019s why it\u2019s different. Maybe it\u2019s right up your alley? Let your ears guide you, and have fun checking it out.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "CStrip",
    "description": "an Airwindows channel strip",
    "tags": [],
    "slug": "cstrip",
    "short_description": "an Airwindows channel strip",
    "full_description": "Sometimes, Airwindows dabbles with what you might call \u2018the normal\u2019 plugins: for instance, CStrip. I was asked to make a channel strip, and while I usually prefer to do things in a more modular sense, it seemed like a fine idea, and so now there\u2019s an Airwindows channel strip, with sort of the usual things you might find there.\n\nSort of. ;)\n\nIt\u2019s never quite that simple with Airwindows. So, you\u2019ve got a three band EQ, but if you boost the top you get traces of the \u2018Energy\u2019 plugin just to add some aggressiveness to the extreme highs for heavy boosts. You\u2019ve got crossover frequencies, you\u2019ve got highpass and lowpass, but the highpass and lowpass aren\u2019t normal algorithms either: they\u2019re designed for \u2018trapping in\u2019 already bandlimited sounds to get the most out of them. There\u2019s a gate, but it\u2019s an Airwindows gate where the release is designed to pull the audio back in the sound picture, not just volume-ramp it. There\u2019s a time delay control that exists only to give the track a micro-delay relative to other tracks for groove purposes. And there\u2019s the compressor\u2026 CStrip uses the ButterComp algorithm plus a speed control that lets you do odd things like increase the speed hugely. ButterComp compresses interleaved samples in Class AB, so that\u2019s four independent compressors per channel. If you crank the speed under heavy compression you can get artifacts (for normal behavior, keep the speed a lot lower).\n\nThe whole idea with CStrip was to do the channel strip, but take it out into stranger realms where it can be used for various sonic destruction. It may not be the last of such plugins: some new stuff coming out is giving me ideas for other \u2018combination\u2019 plugins, especially ones where the algorithms can be interwoven to produce effects you literally couldn\u2019t have out of discrete plugins. (one day, I\u2019ll be open sourcing all of that and telling other plugin coders all about it)\n\nCStrip also uses a technique I came to rely on, where if a component of the plugin isn\u2019t being used (for instance, the lowpass and highpass when set to their extremes switch off) then it gets completely bypassed, and not even the math of the component is used: this is sort of like how \u2018unity gain\u2019 in code isn\u2019t the same as \u2018bypass\u2019. (if you\u2019re in floating point and you\u2019re multiplying by 1.0, you\u2019re also doing a math operation at a given exponent and this can wipe out floating point values at very different levels of detail)\n\nBut that\u2019s getting too wonky: I hope you enjoy CStrip.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "curve",
    "description": "the simplest, purest form of Recurve with no extra boosts",
    "tags": [
      "Latest"
    ],
    "slug": "curve",
    "short_description": "the simplest, purest form of Recurve with no extra boosts",
    "full_description": "sometimes you just want the effect to be lowercase.\n\nthe previous plugin recurve slammed home with 6 db of gain in its compression so you could hear it working, and had a clipper on the end in case you wanted to use it as a loudenator.\n\nbut maybe you don\u2019t. maybe the best thing for the purest, subtlest compression (the one with no transition point between getting louder and getting quieter, and no edges in the sound anywhere) is to have no gain either. it can still catch overs\u2026 most of the time, occasionally not. it can still be heard, probably, but in this form it can sit on nearly any track, unnoticed, quietly balancing levels in lowercase.\n\nyou could put it on everything, even though compression multiplies (you get the ratio of all the different compressions, times each other). curve is so calm and gentle that even putting it on all tracks and stems and then the 2-buss still shouldn\u2019t give you a heavily compressed sound.\n\npeople have asked whether you can still do airwindows patreon for one dollar a month rather than the \u2018fifty dollars a year\u2019 concept. the answer is yes, of course, the per-plugin concept is just to give people something they can relate to. also if you can only spare one dollar a month i would rather help you. but hey, if you gotta share the love i cannot argue as it would be most hypocritical given my own fierce affections for the music producing community.\n\ni was helping clean up my late dad\u2019s house and got a book called archy and mehitabel. whether it influenced curve will have to remain a mystery to the non-literary. suffice to say there\u2019s a dance in the old plugin-monger yet. whatthehell, whatthehell\n\n<3\n\ndo 2s and 3s count as uppercase",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Dark",
    "description": "a wordlength reducer that gives your music a blacker backdrop",
    "tags": [
      "Latest"
    ],
    "slug": "dark",
    "short_description": "a wordlength reducer that gives your music a blacker backdrop",
    "full_description": "Some weeks are MY kind of fun\u2026\n\nThis won\u2019t make big changes in your audio. In fact if you think you can reliably hear this on its HD setting, I think you\u2019re mistaken. And yet, this might be the funnest thing I\u2019ve done all year.\n\nWhy? Because I\u2019m back to the dithers again. I figured out a way (or two) to go EVEN FARTHER in the direction I\u2019d chosen. And it worked: it worked super well, and you can have it. Introducing Airwindows Dark.\n\nHow does it work? It\u2019s very simple, really. Much like Not Just Another Dither (NJAD, my previous best) it analyzes the results of the audio, depending on whether the dither rounds up or down. With correct TPDF dither, it\u2019s a factor of randomness, a noise that breaks up patterns in the output. With NJAD, it runs a Benford Realness calculation and uses that (for a more natural-sounding audio output). But Dark?\n\nIt simply works out the average trajectory of where the audio\u2019s going. It\u2019s following the lower frequencies, suppressing the highs. And then it makes its choice based solely on whatever is going to further this trajectory\u2026 and keep the output as smooth as possible. It is \u2018dithering\u2019 with intent, doing whatever it has to in order to get a darker, softer output. All done by truncation alone.\n\nThe result is delightful, if you are into analog sonics and the absence of bright digital artifacts and hisses. It is NOT obvious, unless 16 bit artifacts are already obvious to you, and at HD (24 bit) it is purely a matter of thoroughness and making correct choices and you shouldn\u2019t be hearing a difference. You damn sure won\u2019t be able to blind test a difference (that requires much more obvious stuff happening).\n\nBut, but, but! If your experience with audio (and probably loud listening levels, and REALLY good monitoring, and amazing source files) involves sinking into a lush bed of analog-rich sonics, where you quickly notice subtle shifts in sonic attitude and then take much longer to get used to them and form your judgements\u2026 there\u2019s nothing at all like this.\n\nIt can only wordlength reduce, so especially at 24 bit it shouldn\u2019t be able to ever hurt bright sounds that are supposed to be there. It\u2019s only dithering (in a novel way). But it\u2019s doing its thing in a way that\u2019s completely outside of anything you can do with filtering or normal processing. If you need depth and space, if you need rich black silence behind your mix, this beats NJAD\u2026 soundly.\n\nI hope you like it. The demonstration at 8 bit wordlength in the video ought to show you what to expect. Dark is yours to use (in fact, you can have the source code under the MIT license!). For now, if you are using Monitoring you\u2019ll need to switch it off to use Dark, as Monitoring defaults to a 24 bit wordlength reduction using NJAD and I\u2019m not prepared to simply update it and have it default to Dark for all things.\n\nThough I\u2019m tempted. ;) (in fact, this is what Monitoring2 became)\n\nAnd in turn, within two weeks, Dark became Dark Redux: same Dark, exactly as before, BUT now it has one added control. DeRez! Just like in the DeRez plugin, it zooms seamlessly down to 1 (or 0) bits. It\u2019s continuous, not discrete: you can do one and a half bits or whatever, play it by ear. Except that unlike the DeRez plugin, it\u2019s still Dark\u2026 so you can hear more clearly what the new wordlength reducer is doing.\n\nIt defaults to 0, which is exactly as it was before. Both the 24 and 16 bit settings derez, which means you can take it to 0 bit (silence) with 16 bit, switch to 24 bit, and the result is you\u2019re listening to 8 bit. (if you need really specific behavior, you can use BitShiftGain before and after the plugin to get exact bit values).\n\nThis makes it possible to do old school sampling effects, dark bitcrushed sounds. It also demonstrates that the Dark algorithm is a bit special, because you have to really trash the wordlength to deteriorate the tone much. It\u2019s more like a slightly noisier, slightly funkier, slightly gated grunge tone, even though the output is literally just bitcrushing. There isn\u2019t even any smoothing applied to get the \u2018dark\u2019 tonality, it\u2019s literally all a wordlength reducer, and with DeRez at 0 it\u2019s exactly the original Dark plugin.\n\nIf there\u2019s a problem or if you need to not see a control marked \u2018DeRez\u2019, my updates-in-place always leave the original file there, in this case renamed to DarkOriginal. They have the same ID and DAWs ought to be able to handle swapping the new one in, even on existing projects that use Dark, it\u2019s just to make sure people can get back the original release if they ever need to.",
    "categories": [
      "Dithers"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DarkNoise",
    "description": "an alternative method for producing bassier noise directly. Sound design stuff",
    "tags": [
      "Latest"
    ],
    "slug": "darknoise",
    "short_description": "an alternative method for producing bassier noise directly. Sound design stuff",
    "full_description": "DarkNoise is a technical experiment, that might be useful for sound design folks, or game coders, or people coding things like algorithmic clap effects. It\u2019s basically a way to generate noise directly that\u2019s more midrangey, or more bassy, without having to filter it (though there\u2019s a filter included, too!)\n\nSo how it works is: if you just generate rand() every sample, that\u2019s white noise. (or if you use an algorithm like my dithering-to-the-floating-point, which is not crypto-grade noise but runs more CPU-efficiently). And if you take a value and add rand() to it every sample, that\u2019s Brownian noise (something moves, but randomly) but it generates DC offset and needs to get filtered. I\u2019ve also done clever forms of noise like VoiceOfTheStarship (there in your NewUpdates.zip download for free, try it and compare with DarkNoise) which do the brownian noise, but at regular intervals it forces the random noise always to move TOWARDS zero, suppressing the DC naturally.\n\nThis is different. I\u2019m not sure it\u2019s better but it\u2019s different, and what it does is: say you\u2019re keeping a list of values that are all random. And you\u2019re replacing them with new random values, and you get your output by adding \u2019em together. Now, imagine that for each random number you put in, that tells you the next position in the list to replace. That\u2019s DarkNoise. It has a brighter top-end than VoiceOfTheStarship, and runs just as fast, but requires you keep a big pile of numbers around. However, you don\u2019t have to actually add them all every sample. It\u2019s in the code, how to work around that part.\n\nEnjoy the plugin if you like weird noise sources: again, might be sound design, maybe you\u2019d like to gate it along with something? Gate it along with your snare and pick one of the midrangey settings and you might get a nice beefy reinforcement. Cranked way up, it gives a background noise ambience that\u2019s like wind (heard from indoors, or being out in the wind) which can go from almost still, to thousands of miles an hour.",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DCVoltage",
    "description": "literally a DC control voltage, in a plugin",
    "tags": [
      "Latest"
    ],
    "slug": "dcvoltage",
    "short_description": "literally a DC control voltage, in a plugin",
    "full_description": "This is exactly what it says on the tin. Do NOT just put this in a mix and crank it up to see what it\u2019ll do. If your whole system is DC-coupled you will blow your woofers, just like that, after a big \u2018whump\u2019. I will not take responsibility for damage caused by misusing unusual tools.\n\nWhat SHOULD you do? Here are some ideas.\n\nThere is no DC offset filter nearly as good as applying an opposite offset. Use metering, perhaps option/alt-dragging on the slider if your DAW permits it, to cancel out a DC offset without any sonic penalty at all. This is called a \u2018DC servo\u2019, but digitally. If you can get it perfect and then bounce files so you can work with a center corrected section (so you don\u2019t have to get a pop from turning it on or off) this would be the highest quality way to get rid of a FIXED DC offset without altering any of the bass at all. It\u2019ll retain right down to 0.001 hz or whatever, and only kill what is totally unvarying DC.\n\nIf you have a converter that\u2019s DC coupled, and analog modular synthesizers, you can use this to create and modulate control voltages. Use it as a voltage source and then mix stuff together using DAW routing much like you use patchcords on your synthesizers, and be careful not to route control voltages to your monitors! I know there are people who\u2019ve done odd things to get DC voltages inside their DAWs. Now it\u2019s a lot simpler :)\n\nThis plugin may not be any use to you, and don\u2019t play with it if you don\u2019t know what it is. If it is useful to you, you already know exactly what you\u2019ll do with it, so go right ahead, now you\u2019ve got DAW control voltages out of a simple plugin.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DeBess",
    "description": "an improved DeEss, with perfect rejection of non-ess audio",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "debess",
    "short_description": "an improved DeEss, with perfect rejection of non-ess audio",
    "full_description": "Meet DeBess.\n\nNamed because, for some of you at least, it is at last The Best De Ess. Period. Ever.\n\n\u2026assuming certain conditions.\n\nDeBess is an extension of my former DeEss, which itself was the high point of several earlier attempts at a special de-esser with an unusual algorithm for finding specifically ess content and rejecting anything else in that frequency range, no matter how many overtones it had. DeEss used a set of sample comparisons to try and find esses, and was very successful at this\u2026 except some folks had trouble getting it to engage, and others needed it to be more perfect at rejecting even the faintest softening of other content.\n\nDeBess does this by extending the sample comparison window a LOT. In fact, it\u2019s now a slider! You can set it to be even blurrier than DeEss if you like\u2026 or barely crack it open to replicate the original DeEss\u2026 or crank it up for high isolation de-essing. If you are recording on prosumer equipment or using moving-coil microphones, you might not get enough change between samples to engage DeBess. Same if you\u2019re using high sample rates and your mics do NOT extend right up as far as the sampling lets you: DeBess is not for taking stage mics and making them lisp. It is very distinctly for taking the most high-end of vocal tracks and de-essing only the ess sounds out of them, with zero cost to anything else. Whatever you\u2019re using, if your esses are blowing out the highest treble (which is exactly what you need a de-esser for) then it ought to work for you.\n\nIf you\u2019re using high sample rate and struggling to get DeBess action and you\u2019re going to be treble boosting for that ultra-bright voice sound, try brightening BEFORE DeBess and you\u2019ll probably be able to get what you need. It wants very bright esses to work with, so it can duck and darken them. Use the filter control to shape a better EQ on your esses, rather than just trying to duck \u2019em.",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "DeEss",
    "description": "the best de-essing solution there is. A go-to utility plugin",
    "tags": [],
    "slug": "deess",
    "short_description": "the best de-essing solution there is. A go-to utility plugin",
    "full_description": "The Airwindows DeEss works by tracking slew rates, not by filtering and frequencies. It keeps a string of recent slew rates, and if it sees high slews that keep going back and forth (flipping direction) that\u2019s how it triggers. It doesn\u2019t trigger on things like square wave or sawtooth waves, because those aren\u2019t going back and forth fast enough to be an ess. It\u2019s purely mechanical: the trigger for DeEss happens instantly and way more powerfully on real esses, making it extremely easy to set. It\u2019s not fiddly, just crank up the effect so you can plainly hear where it hits and use that (don\u2019t overtrigger, for the bad esses you\u2019ll get a HUGE powerful trigger even when everything else is totally clear of de-essing)\n\nThen you use the ducking control and the treble rolloff to tailor the kind of esses you do want. The tone thing lets you have darker esses that are still very audible, and the ducking control means you can retain the original sound but duck it as much as you like. It should be possible to template it: since it triggers so powerfully on real esses, if you\u2019ve got a working setting it should always work. De-essing is now a solved problem, for good. Use good taste (avoid \u2018lisping\u2019 effects) and de-essing is easy.",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Density",
    "description": "a Swiss Army Knife of saturation/antisaturation",
    "tags": [],
    "slug": "density",
    "short_description": "a Swiss Army Knife of saturation/antisaturation",
    "full_description": "This one started a lot! The algorithm used here has echoed through many other Airwindows plugins. It\u2019s literally the smoothest saturation you can have in a plugin: the transfer function\u2019s a sine. This is what\u2019s in Channel, too: there are many ways to adapt such a simple mathematical function.\n\nBut there\u2019s more! Because Density runs multiple stages, allowing it to bulk up the tone into an overblown, insanely fat and saturated distort-fest. And then you can highpass just the distorted stuff alone, and trim its output gain, and mix it with the unfiltered dry to produce lots of tonal possibilities. And then there\u2019s the spatial positioning factor: saturating stuff this way brings it forward in the mix. You can also isolate midrangey elements and bring them forward using that trick.\n\nAnd then there\u2019s the negative values: if you UNsaturate, you get a thinned out lean tone and it drops back instead of pushing forward. And you can blend that too.\n\nDensity\u2019s one of the better utility plugins. It\u2019s there to reshape tones in myriad ways, mostly having to do with fatness or thinness, also having to do with upfrontness or recedingness. It can also give articulation to sounds that are murky, or simply produce the hugest fattest roaring wall of grunge you ever heard.",
    "categories": [
      "Distortion"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Density2",
    "description": "a different color for Density, some old code I had that people wanted",
    "tags": [
      "Latest"
    ],
    "slug": "density2",
    "short_description": "a different color for Density, some old code I had that people wanted",
    "full_description": "So in the absence of somebody coming forth and saying \u2018this is on my quadrillion selling hit record\u2019\u2026 weirder things have happened, occasionally to me\u2026 you should consider this as an alternate tone for Density. It\u2019s been around for a while, but people wanted to see it again: specifically, to see it run on modern machines and in VST and so on. How could I say no? I\u2019ve altered it as little as possible: there were always some weird things about it, but I refactored it to retain EVERYTHING unintentional or unusual. I gave it modern Airwindows handling of denormalized numbers, and it dithers to floating point instead of using the noise shaping to floating point that I used back then. Everything else is just as it was: no \u2018fixing\u2019 or making it do what I \u2018meant to do\u2019.\n\n\u2026this is on somebody's quadrillion selling hit record. I'm still not going to tell you who, or how they used it. <3",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DeRez",
    "description": "an analog-style bit and sample rate crusher with continuous adjustments",
    "tags": [],
    "slug": "derez",
    "short_description": "an analog-style bit and sample rate crusher with continuous adjustments. This entry includes the Patreon blurb from mid-2018, because the things it says about the build systems, what they target and why I'm doing it, are still relevant today. That makes that stuff its own sort of Airwindowspedia entry as part of the DeRez entry",
    "full_description": "What would an analog bitcrusher even be? It doesn\u2019t even make sense. You\u2019ve got sixteen bits, eight bits, twelve bits: you can\u2019t have, like, eight and a half bits.\n\nSure you can! DeRez is here! Its dark magic can be yours! If you don\u2019t believe in dark magic, the source code can be and is yours under the MIT license. Folks who are constructing strange models of things like obscure old digital gear should find this useful: do whatever compansion thing you had in mind using for instance PurestConsole, then use DeRez to dial in the right amount of bitcrunch.\n\nHere\u2019s how you use it: slide the Frequency control down, to continuously sweep the sample-rate crushing. Slide the Resolution control down, to continuously sweep the bit crushing. There are no transition points: the algorithm will always let you do just a tiny bit more, or less, of either, because it\u2019s really a floating-point algorithm at very high resolution. It\u2019s doing a fairly simple samplerate crush and softening the transitions just a tad for an analog feel, and it\u2019s doing the bit crush by chopping away bit-sized amounts and then truncating once it can no longer take away a whole \u2018bit\u2019. Due to this decision, a \u2018bit\u2019 can be any size at all, so you can sweep it without having transition points. Obviously, you can also automate the controls in your DAW to program continuous sweeps.\n\nIt should just work, and you\u2019ll never have to lament, \u201cBut why can\u2019t I set the bitcrusher to three and five-eighth bits?\u201d Because now YOU CAN.\n\nI know there are a few audiophile ears out there who\u2019ll pop a blood vessel over this nasty little toy, but I\u2019m not a \u2018bit\u2019 sorry. Those of you who love this will know who you are right away. Those of you who think this is a really irritating and pointless idea, this one is not for you, and there will be things coming up that are more to your taste.\n\nThis work is supported by Patreon, for those of you who like me making stuff even when I know it will get some flak and hate-comments: the whole point of being on Patreon for me is that I get freedom to do stuff that\u2019s not popular. Mind you, it\u2019s 2018, so this may well be one of the popular ones. Depends on whether bitcrushing and frequency crushing are \u2018in\u2019 or \u2018out\u2019. Another nice thing about keeping me around doing this stuff is that it stops mattering whether stuff is \u2018in\u2019 or \u2018out\u2019: I build the plugins on a Windows 7 VM and an OSX 10.6.8 system kept in a time capsule especially so that my stuff works EVERYWHERE, and by that I mean Mac, Windows, Linux and on machines so old they run PPC chips. Yep! The Mac builds are slightly larger because they\u2019re triple binaries and run 32 bit, 64 bit, and PPC. They should probably also work on OSes older than 10.6.8 but I don\u2019t even have any of those, it\u2019s just build settings. So these plugins are as close as I can get to \u2018Grandpa\u2019s Tools\u2019 levels of reliability, and you should never be forced to update, alter, or break your system just to keep up with compatibility with Airwindows plugins. This is in spite of Apple (for one) continuously breaking XCode w.r.t building for older OSes. Hence the old build system. Maybe one day I\u2019ll be running that in a virtual machine that runs it ten times faster than the original laptop. Maybe I\u2019ll run the Windows 7 virtual machine inside the 10.6.8 virtual machine inside the new computer. I will note that I have to keep the old Windows cut off from the internet, and have already had to do workarounds to stop Visual Studio breaking itself in a fit of pique that it can\u2019t install Win10 over the Windows 7 and blow itself up, so it\u2019s not only Apple that gets up to this stuff.\n\nSupport my Patreon, so I can keep on expanding the pool of plugins that don\u2019t break your system demanding updates and wrecking the joint. I know acting that way gets you more money\u2026 because I barely have any money, and the folks working that strategy have lots of money. And it\u2019s not a good enough excuse as far as I\u2019m concerned, so as always I will just not do the behavior that I don\u2019t like to see in others. Vote with your dollars, that\u2019s a somewhat practical way to be heard. It won\u2019t fix the world, but it definitely is able to keep me going :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Desk",
    "description": "classic Airwindows subtle analog modeling",
    "tags": [],
    "slug": "desk",
    "short_description": "classic Airwindows subtle analog modeling",
    "full_description": "Desk is a little bit like a precursor to \u2018PurestDrive\u2019. It\u2019s entirely an analog modeler, with a behavior that\u2019s far from a plugin stomp-box distortion. It glues and thickens the sound, with a headroom of about 30 dB, much like a true analog console (those don\u2019t turn into distorto-pedals the instant you hit 0 dB). Desk is the canonical version of this type of sound processing.\n\nNote that it\u2019s not tricky to use like Console4. It\u2019s not calibrated to work as a ConsoleChannel replacement (that\u2019s the most recent Desk3, which is one of the Kagi plugins to be released later). It doesn\u2019t have elaborate tone colors added like BussColors3 (also a Kagi plugin). It\u2019s not obvious in normal use, not adjustable like some of these plugins. In normal operation you\u2019re miles from clipping it anyway, and get only a subtle glue and tone shaping.\n\nBut what it IS\u2026 is classic Airwindows tone coloring brought up to 2017 standards. You can stick Desk on any channel, any submix or buss, the 2-buss, or all of the above. The more places you put it, the more obvious the analogifying becomes. And since it\u2019s Airwindows tone and transparency, you can put it up against any \u2018analog modeler\u2019 by anybody, at any price or subscription fee, and it should beat everything and give a bigger, punchier sound. If it\u2019s \u2018analog warming\u2019 and tone you want, and you require the sound not to turn into digital sludge and glitter, this is the one.\n\nAs a further note, the reason I've been willing to engage in hype like the above is a fundamental Airwindows principle: less is more. What Desk does is very simple and minimal. Doing less to the digital signal generally hurts the tone less. So, as long as you're getting enough 'analog tone shaping' cues in the particular ways Desk does them, it is actually true that if you find a plugin that does this as minimally as possible, with the fewest math operations, it is likely to sound bigger and punchier and better than more elaborate processing.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DigitalBlack",
    "description": "a quick, staccato gate",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "digitalblack",
    "short_description": "a quick, staccato gate",
    "full_description": "So here\u2019s a gate. And here is why you should care :D\n\nDigitalBlack is real simple on the surface: a threshold, and a dry/wet control. But what it does is more complicated. This isn\u2019t a \u2018gently fade to silence\u2019 gate like SoftGate, or a \u2018special effect\u2019 like Gatelope. DigitalBlack was designed for one purpose: tightening up staccato direct-recorded tracks. I\u2019m demonstrating it with a worst-case scenario because that\u2019s all I had: I don\u2019t get to do music, mostly, except for my live jams. But I had a drum room track where you can get some idea: play with it yourself if you\u2019re curious, it\u2019s free.\n\nDigitalBlack does three things that are interesting, two of which are pretty unique. Firstly, it uses hysteresis to prevent \u2018sputtering\u2019. That\u2019s pretty normal. Second, it fades not with a simple volume, instead it fades into negative Density (bulk of the sound attenuated, only the transients stick out) which has the effect of sounding like it\u2019s fading backwards away from you, very quick. This gives it a physical motion not common to gates. And third, it tracks zero crossings in a special way so that the \u2018silence\u2019 time it has to traverse, before hitting the negative Density area and then true silence, is related to the bassiness of the content.\n\nWhat this means is, if you\u2019re hitting it with bassy content it\u2019ll handle that gracefully. If you\u2019ve got loads of midrange, it\u2019ll gate that tighter. And if you\u2019re making bright trebly sounds without a lot of bass, it\u2019ll gate those FAST. And you can hear this on my lame demo, because in situations where only the initial spike of the drum hit got through on one side? (this is not linked: it\u2019s designed so you could throw it on a submix with different stuff happening on L and R so it\u2019s dual-mono) Even in my demo you can hear that some of those attacks are chopped off insanely fast. You\u2019ll probably recognize pretty quickly if this is the gate for you. Try it on something like a DI guitar going into heavy ampsims, and see if you can\u2019t get good results out of it. Put it on something like a kick or on individual drum mics (that you\u2019re not already using Gatelope on), or on anything that needs to be insanely tight and quick to gate itself. It might be just what you needed. (for linked gentler slower gating to silence, try SoftGate: for a gate that also acts like envelope filters, use Gatelope)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Dirt",
    "description": "a soft-clip distortion in the spirit of Edge",
    "tags": [
      "Latest"
    ],
    "slug": "dirt",
    "short_description": "a soft-clip distortion in the spirit of Edge",
    "full_description": "In the event that you\u2019d like a softer, tubier Edge\u2026 I\u2019ve got you covered.\n\nIf you liked Airwindows Edge, this is a variation. It doesn\u2019t go nearly as high gain but it\u2019s got a much softer clip to it, and the same controls set up the same way (so highpass/lowpass settings ought to match if you want them to). My intent with it was to have a companion plugin to Edge for use with ITB guitars: I\u2019d be using it with Cabs, but folks who need full-on IRs might try that too, or sandwiching your IR between Dirt and Cabs as a final tone/presentation tweak.\n\nI hope you like it\u2026 and not just on guitars. In line with my current ultrasonic filtering approach, you\u2019ll get more mileage out of this and Edge at high sample rates, but the lowpass will let you get some space between you and aliasing no matter what sample rate you\u2019re at.",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Disintegrate",
    "description": "Discontinuity on steroids",
    "tags": [
      "Latest"
    ],
    "slug": "disintegrate",
    "short_description": "Discontinuity on steroids",
    "full_description": "So what if you had a distortion that wasn't actually about distortion?\n\nDisintegrate extends Discontinuity to the point of total unreality.\n\nThis algorithm was invented to emulate the asymmetrical compression of air, and already exists in Discontinuity and ConsoleX. You set it according to what at the point of clipping, would be the physical loudness in air, and it applies a delay modulation that distorts the sound. It's meant to reproduce what happens when a huge rocket launch, heard from miles away, turns into strange air crackles (a natural phenomenon having to do with pressure discontinuities in the speed of sound). This happens in all sound transmitted through air, all of the time, and Discontinuity scales it appropriately.\n\nThing is, Discontinuity is designed to sound nice and not too crazy. So\u2026 why not go for broke?\n\nAll the controls on Disintegrate are things that are under the hood on Discontinuity. It's designed to let you get inappropriate noises, unnatural sounds. Typically it sounds like distortions, but it's not: it's a stack of modulating delay lines, but rather than modulating by an LFO, the sound's modulated by itself, over and over. When you get into distortion-like edge, that's mostly the frequencies stacking up, though it does have the ability to overdrive internally. In particular, Disintegrate takes pains to overdrive internally, the better to sonically obliterate and destroy.\n\nHope you like Disintegrate! I'll work on more realistic things soon! :)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Distance",
    "description": "a sound design or reverb far-away-izer",
    "tags": [],
    "slug": "distance",
    "short_description": "a sound design or reverb far-away-izer",
    "full_description": "Here\u2019s another utility plugin: Distance is specifically set up to mimic through-air high frequency attenuation. It\u2019s from my initial wave of Airwindows plugins, come to VST and with a new twist: though in the video it\u2019s a one-knobber, when you download it you\u2019ll find that it\u2019s got a Dry/Wet control, just to expand the things you can do with it. That\u2019s new! I try to listen to people, even when it\u2019s tempting to make it a super-dedicated one-trick pony.\n\nAs you can see from how it behaves, Distance is a lot more complicated than just running a shelf. For that reason, I suggest this plugin for sound design and creative mixing purposes. Don\u2019t try to use it for mastering or 2-buss, I feel it\u2019s too intensely colored. However, for creative use it\u2019s exactly what it says on the tin! Stick it on anything that\u2019s supposed to \u2018read\u2019 sonically like it\u2019s super far away, and you\u2019ll be able to hear for miles and miles. Works on anything from pads to thunder to basses to reverb returns (I suggest using it on reverb returns rather than sends: it will be able to add thunder and size to the output of the reverb algorithm)",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Distance2",
    "description": "a versatile space shaper for creating depth",
    "tags": [],
    "slug": "distance2",
    "short_description": "a versatile space shaper for creating depth",
    "full_description": "As requested, this is the unholy hybrid of Distance and Atmosphere. This one doesn\u2019t work like a Console5 system, it\u2019s strictly \u2018put it on and get a sound\u2019, but I wasn\u2019t expecting how cool it would be. Turns out this thing is completely absurdly good at taking tracks like drums, and making them huge and pounding and stage-like, without even the use of reverb or compression.\n\nThe beginning of the video\u2019s about using Distance2 as a loudenator, though I think using it on a full mix is overkill (maybe you want SOME elements to be up front and present). Bear in mind that you can keep the Atmosphere control set very low and still get an effect: the equivalent to the Atmosphere mixing system is to have it incredibly low, like 0.1 or less. The more you push it, the more nasty it\u2019ll get, because that algorithm alone is NOT enough to make a distance sound. It\u2019s not doing any of the high frequency attenuation you\u2019d get, so technically the sound of high Atmosphere settings is the sound of extreme loudness rupturing the air and your eardrums: pushed hard, it\u2019s unrecognizable as any natural sound. You wouldn\u2019t survive exposure to a sound so loud that it broke the air like that.\n\nBut when you also include the Darken control, that\u2019s when things start sounding realistic again. This is one of those plugins where I could have built these into a single control to deliver good-sounding results no matter what setting you used\u2026 and where I chose to give you access to the wrongest possible settings because people NEED to break rules sometimes. Somebody out there is going to be able to get a great sound by taking the right source, and obliterating it with extreme Distance2 settings, and who am I to stand in the way? And you can also apply a dry/wet that will conceal the wreckage: surprisingly small amounts of dry signal will mask the amount of distortion going on.\n\nAnd the reason I\u2019m able to put out a plugin where I KNOW that some people will set it wrongly and then hate it, is my Patreon. The thing about Patreon is that when it works, I\u2019m completely protected from having to make things market friendly. Market friendly is a curse: it makes you do only predictable things that most people would like, and it punishes you if you want to do something unpopular, or if you want to take something great and widen the range until people get into trouble with it. It\u2019s safer to give people presets that are known to behave on all source audio, that always sound nice. It\u2019s safer to give people a pile of mulch than a chainsaw.\n\nPatreon lets me give you the chainsaw :D now, whether you do damage with it is your own affair. But I think once you strap it across some buss with drums or guitars or whatever, and fire it up, you\u2019ll like chainsaws too. Just remember to dial it back when you need it not to be distractingly obnoxious. Or not: hey, it IS a distinct new distortion voice, with a whole new approach to slew clipping not previously available. Darken it or not, as it pleases you. Have fun.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Distortion",
    "description": "a slightly dark analog-style distortion with several presets, like Focus",
    "tags": [
      "Latest"
    ],
    "slug": "distortion",
    "short_description": "a slightly dark analog-style distortion with several presets, like Focus",
    "full_description": "I think this one ought to go over well. People often want \u2018analog-style distortion\u2019. Here\u2019s a collection of Airwindows distortion algorithms in a handy plugin with a new twist: it\u2019s optimized for high sample rate in an innovative way.\n\nWhat does that mean? Distortion is a slightly \u2018dark\u2019 distortion plugin. Not only are the algorithms pretty smooth (with some exceptions: check the end of the video for one!), it uses sample averaging to stop extreme highs from getting through. At 44.1k, there\u2019s an averaging stage before the distortion, darkening the output but also interfering with aliasing. Averaging also has some tonal benefits to midrange and bass, so this gives the plugin more of a \u2018voice\u2019. That\u2019s at 44.1k, CD quality.\n\nBut, if you use higher rates like 96k or 192k, Distortion begins to use more \u2018poles\u2019 of simple averaging. It\u2019ll bring in averaging after the distortion, softening the tone. It\u2019ll use more and more stages of this treble-softening, still always on just the most recent two samples, even though that becomes more and more finely grained as the sample rate goes up. Because of how averaging works, this never brings in weird notches or cancellations (like broader averages) but it does produce a sort of bleed-off of highs. Run at 44.1k this would give you an increasingly wide roll-off.\n\nAt the high sample rates this was designed for, what you get instead is exactly the same \u2018dark distortion\u2019 tonality, but increasingly better aliasing rejection as the sample rate goes up. I think 96k is a sweet spot for this: at 96k, still a basically normal sample rate, you get extremely warm and fluid distortion, even when pushed to extremes.\n\nIf you like extremes, look into the final two distortion modes. In Distortion, the modes Mojo and Dyno operate in their purest form, where the distortion shape can curl around again to produce strange effects if you slam them ruthlessly. In the video you see me discovering this on Mojo, running a simple DI bass at far too high a volume into Mojo, and then doubling it up to make crazy organic synth-like effects. Other modes like Density, Drive or Spiral will just go to ultra-clipping normally.\n\nDistortion will give you truly warm overdrive effects, especially at high sample rates, without a bunch of fake analog modeling. I don\u2019t recommend using it on everything (because maybe some sounds are good WITH extended high-end, especially if you\u2019re working at 96k and all) but as always, I\u2019m not the boss of you.\n\nAgain, the notable thing about this relative to other cascaded aliasing-suppressed distortions like Console7Cascade is that Distortion is doing it all with simple averaging filters. That will give you a distinct, softer sound without the clarity you get from multi-pole biquad rolloffs. Distortion is for when you want warm, warm, warm and are OK with letting the highs soften, plus if you want to pick different sorts of crunch edge (not often a feature on Airwindows plugins).",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Ditherbox",
    "description": "a switchable selection of dithers in 16 and 24 bit, plus monitoring tools",
    "tags": [],
    "slug": "ditherbox",
    "short_description": "a switchable selection of dithers in 16 and 24 bit, plus monitoring tools",
    "full_description": "This one\u2019s fairly simple to explain. It\u2019s (nearly) every Airwindows dither plugin in one box, with a control to select between them.\n\nWell, there\u2019s a bit more: Ditherbox comes with 16 bit versions built in (the individual plugins are based on 24 bit, with the exception of NotJustAnotherCD). So rather than messing around with BitShiftGain (which will still give you any weird bit depth you could wish for) you can output to CD-quality 16 bit directly from Ditherbox. That was kind of waiting for Ditherbox to come out, didn\u2019t want to steal all of its thunder.\n\nOh, did I say thunder? Ditherbox also comes with monitoring tools: calibrated SlewOnly and SubsOnly playback, where it\u2019s supposed to give you roughly the same levels and dynamics from full bandwidth, SlewOnly and SubsOnly. Might not be exactly the same, but if one of them is wildly different from the full bandwidth you might have a look at the mix.\n\nLastly, it has a new trick: Silhouette! The idea behind this one is simple: calibrated noise replaces your mix. If you can still hear beats and dynamic behavior, or best of all if your music is kind of recognizable, it\u2019s a good sign! That means your mix is communicating information dynamically. If it\u2019s just a wash, you might want to look at your overcompression or over-limiting, because especially now in the days of replay gain, it\u2019s good to leave the ability to communicate with dynamics and not squish everything too much. It\u2019ll also tell you things about how spikey your compression peaks are, and the dynamic texture of your drum impacts.\n\nThis plugin marks the open-sourcing of everything I\u2019ve ever done dither-wise, including the Benford Realness-based Not Just Another Dither (named by the internet!). Seemed sensible, as they are all included in Ditherbox (well\u2026 actually the TPDF-based stuff like TapeDither, NodeDither, PaulDither, DoublePaul didn\u2019t get included as they weren\u2019t in the original Ditherbox. I\u2019m kind of exhausted doing this one and VSTing it and opensourcing everything: there was a lot of fussy porting work and barely room to move the slider on the VST: forgive, plz?)\n\nAnyhow, with MOST of the Airwindows dither work represented, hopefully this is fun to fool with. I do still recommend Not Just Another Dither on general principles, as in practical terms it\u2019s the best one. You can still put TapeDither on outputs going to a mix, I\u2019m just saying, it all culminated in NJAD.\n\nAs a follow-up in 2022 (not 2018, when this came out), Ditherbox is somewhat out of date. The version of NJAD in it isn't the most current: Monitoring has a better one. Monitoring also has Peaks, which is superior to Silhouette at the task Silhouette is for. One of the reasons Ditherbox still exists is, if someone got into it and REALLY liked the version of NJAD in there, it's all very well making improvements but I should keep unaltered versions of things. And that's what Ditherbox is now: it's not a go-to in my opinion, but if someone was depending on it, it got through a series of additional ports (like to signed AU and VST for Mac M1 processors, native) without anything about it changing. This has value of its own.",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DitherFloat",
    "description": "a demo of floating point truncation: can also dither to 32 bit float output",
    "tags": [],
    "slug": "ditherfloat",
    "short_description": "a demo of floating point truncation: can also dither to 32 bit float output",
    "full_description": "This AirwindowsPedia entry contains the most current public domain source code for adding floating point dithering to your own work, either to a float or double precision buss (which would mean you'd have to be using something longer like long double for your internal processing).\n\nDitherFloat is NOT for putting in mixes to 'dither the plugins'. It is a demo, and the only use you could possibly do with it is to put it on a double precision buss and dither to save as 32 bit floating point instead of double. I don't think that's productive. Again, DitherFloat is NOT a plugin to use on things to make them more dithered. It's a proof of concept, like putting 'DeRez' onto dither plugins to hear how that works. You can literally hear the truncation in floating-point mantissas using this plugin, and what it sounds like when those are dithered. On to the original post when this came out\u2026\n\nThis began as a challenge. A forum poster said you couldn\u2019t dither floating point outputs, and posted a link to a study explaining why.\n\nFloating point (including the kind that fits between every plugin in a mix on MacOS or 32-bit bussed VST) has fixed point math of the kind one needs to dither, in a part of the number called the mantissa. (64-bit VST has it too, just more finely grained.) It\u2019s not all that hard to work out how to apply dither to this part. You scale it up or down according to the part of the number called the exponent.\n\nThe trouble is (a) it\u2019s hard enough getting people to dither to 16-bit CDs, and (b) the argument is that the amplitude of the dither would fluctuate madly, making it unhelpful and incorrect. This is kind of like how flat dither isn\u2019t correct: with only one noise source what happens is, the noise floor fluctuates according to the waveform causing a kind of distortion. If you have a low sine wave you\u2019ll hear the ripple effect of flat dither, and the argument is that dithering floating point is like that only more so (and so, nobody ever tried).\n\nDitherFloat demonstrates this, and it\u2019s not true. You can TPDF dither (even PaulDither, like I\u2019m using here) floating point. The noise doesn\u2019t fluctuate according to the waveform represented in the mantissa. It fluctuates according to the value in the EXPONENT, because it has to, because the quantization noise also fluctuates wildly in volume. And if you get it right, you end up with no truncation distortion at all, just like using TPDF to fixed point.\n\nThe video explains more and shows it working. It\u2019s practically impossible to hear ONE stage of 32 bit truncation (may be literally impossible, I think) but you can cheat and hear it as obviously as you like. You just add a huge offset to the number, convert it to float, and then subtract the offset again: and that\u2019s what DitherFloat does. It\u2019s a demo. It shows you there\u2019s still truncation in floats, and it shows you the way TPDF dither completely removes the truncation distortion. It linearizes the signal so that no trace of the truncation is present (that\u2019s how correct dither works).\n\nYou can\u2019t add DitherFloat after existing plugins to fix them: even though you can use it (with zero offset) to export a 64 bit buss to 32 bit float and dither it, by itself DitherFloat can\u2019t fix existing plugins. You would have to put the code for the dithering, into every single plugin that outputs 32 bit floats. Every MacOS plugin, every singlereplacing VST (every older VST implementation before they implemented 64 bit buss). For the Airwindows library that would involve personally revising every plugin I\u2019ve released under the VST/Patreon years, many hundreds of plugins.\n\nSo I did. :D\n\n(as of 2022, all the 32 bit buss plugins I make still dither to the 32 bit floats. In 2021, I experimented and decided to make my internal busses double precision instead of long double, as I wasn't able to find a difference and thought it would save some CPU; at that point, Airwindows plugins running on the VST double processing buss began outputting directly without a dither stage, for a slight efficiency boost. They still have the DitherFloat code in case the random number needs to get used, but the application of the dither is meaningless when the buss is already double, so that bit is commented out.)\n\nBelow is the actual code, licensed as public domain, for both the 32 bit and the original 64 bit floating point dithers.\n\n\t\t//This is free and unencumbered software released into the public domain.\n\t\t//this is in the header file, defining a continuing variable\n\t\tuint32_t fpd; //this is an unsigned int used for the random generator\n\n\t\t//this is in reset, where we start off the variable as a default starting number\n\t\tfpd = 1.0; while (fpd < 16386) fpd = rand()*UINT32_MAX;\n\t\t\n\t\t//the random generator is xorshift32 which can't start off with zero.\n\t\t//if the reset is randomized, all the dithers are different randoms\n\t\t//then in the actual processing code:\n\t\t\n\t\tint expon; frexpf((float)inputSample, &expon);\n\t\tfpd ^= fpd << 13; fpd ^= fpd >> 17; fpd ^= fpd << 5;\n\t\tinputSample += ((double(fpd)-uint32_t(0x7fffffff)) * 5.5e-36l * pow(2,expon+62));\n\n\t\t//Anyone is free to copy, modify, publish, use, compile, sell, or\n\t\t//distribute this software, either in source code form or as a compiled\n\t\t//binary, for any purpose, commercial or non-commercial, and by any\n\t\t//means.\n\t\t//In jurisdictions that recognize copyright laws, the author or authors\n\t\t//of this software dedicate any and all copyright interest in the\n\t\t//software to the public domain. We make this dedication for the benefit\n\t\t//of the public at large and to the detriment of our heirs and\n\t\t//successors. We intend this dedication to be an overt act of\n\t\t//relinquishment in perpetuity of all present and future rights to this\n\t\t//software under copyright law.\n\t\t//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t\t//IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\t\t//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\t\t//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t\t//OTHER DEALINGS IN THE SOFTWARE.\n\n64 bit version for hilarious overkill is almost identical but with small changes in frexp() and the constants. This is now a sort of mad community effort, so that becomes public domain too:\n\n\n\t\t//This is free and unencumbered software released into the public domain.\n\t\t//this is in the header file, defining a continuing variable\n\t\tuint32_t fpd; //this is an unsigned int used for the random generator\n\n\t\t//this is in reset, where we start off the variable as a default starting number\n\t\tfpd = 1.0; while (fpd < 16386) fpd = rand()*UINT32_MAX;\n\t\t\n\t\t//the random generator is xorshift32 which can't start off with zero.\n\t\t//if the reset is randomized, all the dithers are different randoms\n\t\t//then in the actual processing code:\n\t\t\n\t\tint expon; frexpf((double)inputSample, &expon);\n\t\tfpd ^= fpd << 13; fpd ^= fpd >> 17; fpd ^= fpd << 5;\n\t\tinputSample += ((double(fpd)-uint32_t(0x7fffffff)) * 1.1e-44l * pow(2,expon+62));\n\n\t\t//Anyone is free to copy, modify, publish, use, compile, sell, or\n\t\t//distribute this software, either in source code form or as a compiled\n\t\t//binary, for any purpose, commercial or non-commercial, and by any\n\t\t//means.\n\t\t//In jurisdictions that recognize copyright laws, the author or authors\n\t\t//of this software dedicate any and all copyright interest in the\n\t\t//software to the public domain. We make this dedication for the benefit\n\t\t//of the public at large and to the detriment of our heirs and\n\t\t//successors. We intend this dedication to be an overt act of\n\t\t//relinquishment in perpetuity of all present and future rights to this\n\t\t//software under copyright law.\n\t\t//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t\t//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t\t//IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\t\t//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\t\t//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t\t//OTHER DEALINGS IN THE SOFTWARE.\n\nIt\u2019s not complicated but it\u2019s my own code and it\u2019ll work: it\u2019s even pretty easy to drop into other plugins. If anyone\u2019s game to do that and shout out that they did, I\u2019d love to hear about it.\n\nIf they don\u2019t, they will just continue adding a little truncation with every single plugin, every single calculation, and now none of MY plugins do that :)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DitherMeDiskers",
    "description": "dark deep 'dither' in a 16 bit version",
    "tags": [],
    "slug": "dithermediskers",
    "short_description": "dark deep 'dither' in a 16 bit version",
    "full_description": "",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DitherMeTimbers",
    "description": "dark deep 'dither' in a 24 bit version",
    "tags": [],
    "slug": "dithermetimbers",
    "short_description": "dark deep 'dither' in 24 bit version",
    "full_description": "What is a dither? Dither is a way of changing one type of noise, quantization, to a different type, just plain noise. It\u2019s all about manipulating a situation where your waveform must decide between two options, \u2018up\u2019 or \u2018down\u2019, and pick one of a very limited number of positions in a lower-resolution space. In the strictest sense, dither is adding two sources of calibrated noise in order to make the resulting noise floor completely unrelated to the audio signal.\n\nOr, if you\u2019re me, \u2018dither\u2019 can be an affair of tracking the Benford Realness calculations of each option, and always choosing the direction that will most closely approximate real sampled data, then noise shaping the result to produce a bright airy hiss for the background noise, and an open, detailed sound picture far more revealing than normal \u2018dither\u2019 can be. And that\u2019s Not Just Another Dither, which uses a completely different approach to selecting \u2018up\u2019 or \u2018down\u2019. And then there was last Monday, my first Airwindows tech-support livestream, and a little diagram I drew to explain the sampling theorem\u2026 and an idea.\n\nWhat if you just picked whichever option smoothed the signal out most?\n\nIntroducing Dither Me Timbers, the tonal opposite to Not Just Another Dither. Although it has dither in the name, and works like a dither, and occupies the same place in your DAW as a dither, it\u2019s not a dither at all (though it does have a noise shaper). It\u2019s a filter. It exists to take the tiny microdetails in the sampling theorem, and make them darker and deeper. The functionality is very simple: it runs one sample of latency (it\u2019s an output stage, so that shouldn\u2019t be too much of a problem in practice) and, for every sample, asks whether it\u2019s larger or smaller than its surroundings. If it\u2019s the top of a corner or a spike of treble, it simply picks whichever \u2019rounding\u2019 will smooth out the treble the most. How much? It doesn\u2019t care. It just always picks the least treble at any given moment, no matter what.\n\nThe noise shaping is gentler than that in Not Just Another Dither. Instead of establishing a bed of subtly hissing noise like NJAD, Dither Me Timbers uses its noise shaping to transform what is not even a dither, into a behavior. It doesn\u2019t try to decorrelate the noise, or present a clean signal behind it. Instead, it does this: it works to make whatever noise is produced, as loud as the original sound would have been. This is all at superfaint levels, and interacts with the treble-darkening effect. It sounds like analog mechanical noise from some sort of playback system that\u2019s part of the audio. As it drops way below the noise floor of what TPDF dither would have been (and I mean WAY below that noise floor) it replaces faint musical content with faint rustles and sputterings, not unlike a vinyl record\u2019s artifacts. It\u2019s entirely correlated with the audio, and closely matched in volume to what the audio would have been\u2026 far below what we\u2019re used to experiencing as a digital noise floor. And it\u2019s combined with the EQ behavior of Dither Me Timbers, producing a behavior where the audio goes first dark, then quiet, as it drops beneath perception.\n\nThis produces an effect you can\u2019t get anywhere else, which contrasts with Not Just Another Dither completely. Instead of sparkling detail, you get depth like no other digital medium can produce. Ambient stuff, distant sounds, are twice as deep and twice as dark. If you\u2019re going for natural organic tones, they\u2019ll feel all the more solid, all the more real. There\u2019s an ease to the presentation, a blackness and silence to the background, as if distant reflective surfaces became velvet curtains. Quiet musical notes take on body, lose sparkle, sit back in space as if they\u2019re on a distant stage.\n\nThere\u2019s also a version that does this to 16 bit, Dither Me Diskers. I don\u2019t do that with many dither experiments: NJAD has its CD version, and now there\u2019s finally a follow-up for those who\u2019d like to make seriously warm, deep, organic sounding CDs. If you\u2019re not pushing the frequency limits of human hearing with your content, it\u2019s possible to get CDs to sound surprisingly good, and Dither Me Diskers takes that to another level. You won\u2019t feel a lack of depth and distance from your CD with this. There\u2019s hints of sound way way below what you\u2019re using to thinking of as the grain of 16 bit digital audio, and you can\u2019t feel the edges of it at all. Everything\u2019s more dark and mellow.\n\nAnd lastly, some of you will hate it. This is a filter. It takes the most delicate subtleties of the digital waveform and darkens them up, on purpose (\u2018cos you gotta do something, when you\u2019re quantizing). You know who you are: if you\u2019re not panting for that depth perception and analog smoothness, if you\u2019re not secretly into the resonance and power of the best old vinyl, this is not for you. Try NJAD, which will give you all the airy detail you could ask for.\n\nIf you want to sink into the music like it was soup, if you think digital would sound better through tubes or tape or anything to cut the dryness and shallowness of it\u2026 odds are you\u2019re going to love Dither Me Timbers. It is as wrong as a pirate at a garden party: it\u2019s not even a dither at all, but a filter and a bizarre noise shaper. It\u2019s a trick, a stunt, a mockery of \u2018correct dither behavior\u2019. It\u2019s an EQ, a tone-changer.\n\nAnd there\u2019s nothing else like it\u2026 and it\u2019s yours. Enjoy :)\n\nNote: there is a more sophisticated version of this behavior in Airwindows Dark. The difference is, Dither Me Timbers only looks for a tiny micro-environment, within three samples. Dark extrapolates outward to work out which option will best make the WHOLE sound darker, not just a tiny three-sample area.",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Doublelay",
    "description": "StereoDoubler with independent delays and feedback",
    "tags": [
      "Latest"
    ],
    "slug": "doublelay",
    "short_description": "StereoDoubler with independent delays and feedback",
    "full_description": "This one was a request: I have a weakness for doing plugins for folks who worked on records I grew up listening to on vinyl. So often we recognize only the rock stars, but the guys behind the desks do so much to help the magic happen. And this plugin is there to bring the magic. It was a GREAT suggestion.\n\nDoublelay starts with Stereo Doubler, then adds delay taps to the pitch-shifted L and R independently, and then it also lets you feed back the results into the input again, in a secret combination that nobody knowing me will be surprised to know is the Golden Ratio. It's 0.618.... direct feedback, and the inverse as crossfeed. The direct feedback will continue pitch shifting up and up, and the inverse/crossfeed will continue shifting the pitch back again to where it started. The end result is an ability to further expand the spatiality and pitch-iality of the effect to taste, up to 1.0 where you'll get close to infinite feedback\u2026 unless you're using the pitch shifting, where it will trail off faintly into color-smeared audio trails.\n\nOr you can skip the feedback and use it to thicken vocals and things, or do an 'echojam' effect in stereo with just two taps where the echoes are also pitch shifts, or have one side not be a delay and the other side be a big delay: turns out there are a lot of things you can do, and since this is a very immediate (based on the very 'raw' sounding Glitch Shifter by way of Stereo Doubler) delay based effect, the added ambience you create will not fill up nearly as much space as a full-on reverb might do. Truly a great way to fill up some mix space with what you've already got in the tracks, and go on from there if you like. And I hope you do like Doublelay.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DoublePaul",
    "description": "like PaulDither but more so",
    "tags": [],
    "slug": "doublepaul",
    "short_description": "like PaulDither but more so",
    "full_description": "This is for sort of a special purpose.\n\nI\u2019ve got an outrageous custom dither (well, wordlength reducer: there\u2019s no noise and no randomness in it) called Not Just Another Dither. For final output, it\u2019s that I recommend.\n\nHowever, I\u2019ve got a mastering engineer friend (Hi Bob!) who favors another dither of mine, PaulDither. The reason is, it\u2019s traditional TPDF dither. It handles dithering duties perfectly (with a slight Airwindows-izing: the weight of the final noise floor is balanced to make one \u2018bit\u2019 function as zero, and to make the dither activate adjacent bits on either side for a better sound. This also gives a teeny least-significant-bit DC offset, if you assume \u2018zero\u2019 is between the two smallest bits, positive and negative)\n\nI wanted to give Bob (and anyone else selecting traditional TPDF) something fancier that still counted as purely normal dither. So, here\u2019s DoublePaul.\n\nIt\u2019s TPDF highpassed dither, just like PaulDither. But, I\u2019m also using some adjacent samples to skew the noise profile even further into the highs. It\u2019s just a redistribution of energy, and it leaves the key pair of full-intensity noise samples to stay as TPDF dither. I just doctored the way you hear the noise, to push it a little farther into the highs. I\u2019ve also backed off the teeny DC offset, and shaped every filter tap by ear. If you liked PaulDither, try DoublePaul and see if you like taking the PaulDither concept just a teeny bit farther, with no penalty to how the TPDF works. It\u2019s just like a little sinc interpolation, a thing that\u2019s trying to hide the TPDF energy by pushing it farther into the extreme highs. If you don\u2019t trust NotJustAnotherDither, but you\u2019d like something even quieter than PaulDither, try this.",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DrumSlam",
    "description": "a heavy-processing tape modeler",
    "tags": [
      "Latest"
    ],
    "slug": "drumslam",
    "short_description": "a heavy-processing tape modeler. This entry contains personal details about what was happening in 2018 for me, and is included in full because there are things that have a place in AirwindowsPedia, as a sort of 'historical section'",
    "full_description": "So this is not a sad plugin but it\u2019ll be sort of a sad post and I may as well do it anyway: I\u2019ll keep it brief and to the point, and it\u2019s kind of relevant to the Airwindows plugin release schedule.\n\nFirst, the plugin: this is DrumSlam. It was originally meant to sound like Massey TapeHead. It\u2019s sort of a multiband tape emulation/distortion, and it didn\u2019t end up sounding like TapeHead but it does have a sound of its own: all the more since it\u2019s a technique I don\u2019t normally use (multiband stuff rarely makes sense to my ear). I see it as an effect plugin more than general purpose, but as always I\u2019m not the boss of you and you can use it however you please. It\u2019s open source, so you can also use the code or do variations on it: all you have to do is credit that you\u2019re using Airwindows code, and you can even charge for your own DrumSlam-based plugin provided you make the credit clear: in fact, since it\u2019s not the \u2018advertising clause\u2019 version, you get to cite Airwindows and suggest that it makes your plugin sound special: if you ask, I\u2019ll help you make that be true. I just don\u2019t take personal responsibility for the sonics of plugins that use \u2018Airwindows Open Source\u2019 in their promotion, because there are still ways you could screw it up cooge if you\u2019re also open source, I\u2019d be able to look at the code and give my opinion on whether it\u2019s maintaining the integrity of the input data.\n\nSo that\u2019s DrumSlam. Try it, slam it, do stuff with it, it\u2019s simply another type of tape emulation done somewhat Airwindows style, and it\u2019s got its own sound that you might like.\n\nAlso, this is my Patreon, if you find these plugins indispensable please join it at the rate of however many plugins a year you think you\u2019d be buying from me if they were sold at around $50 each, perpetual license complete with source code. It\u2019s kind of a bargain, and the opposite of DRM: in soviet Airwindows, your rights manage me! :)\n\nNow, over to my status report. I think I\u2019m going to be able to keep up my plugin releases at least through StereoFX next week and probably won\u2019t even have to skip a week but it\u2019s possible I won\u2019t be able to focus, or I might derp some of the releases and get them wrong and have to fix them, like with Console5 last Xmas. Apology in advance, if so. The reason is the same as it was then. Last December 6th, my Mom died. She\u2019d kept me from starving when I was starting up the Patreon, and I owe her everything. After that, January 23rd of this year, the cat many of you have seen in videos (my last cat since the other one got hit by a truck the year before) died. She was very old, and around 3 AM that morning she fell down and no vet office was open at 3 AM and I just cuddled her and was with her as she died, which was all I could do (I couldn\u2019t have afforded veterinary care at the time anyhow, I was living on $858 a month from the Patreon). So it\u2019s been a lot of loss around the turn of the year.\n\nSo, three days ago, Thursday July 5th, my Dad died. I\u2019d got word he was in the hospital (he was VERY old and feeble) and I tore ass down to Pennsylvania to see him: he\u2019d fallen and hurt himself and was unresponsive (like me, he lived alone and got a lot out of being in his home, his final years were good). This was the price of that freedom: he\u2019d hurt himself at a time when nobody would check on him for at least half a day. Once in the hospital, he came to for long enough that my sister got to speak to him, and he was grateful to see her. But then he took another downturn, they resuscitated him, and had to do it so fiercely that it harmed him further. I did see him but he was mostly gone by then, was with my sister as the doctors broke the news that they couldn\u2019t safely keep rescuscitating him, and we told them that in that case it was clear: keep caring for him, but there was nothing more they could really do. Roughly an hour later he passed on.\n\nIf I\u2019m demanding of myself he\u2019s part of the reason why, for fair and foul reasons. This was a guy I couldn\u2019t really give gifts to: he was a brilliant scientist in his day, and there were no emotional things that didn\u2019t go through that rational filter so if my gift wasn\u2019t perfect he\u2019d be openly unhappy with it. There was an exception: I\u2019ve painted and cartooned and stuff like that, and he valued those things more than I do, and in his declining years I even drew some comic strips just for him. Maybe I\u2019ll scan them now and put them up somewhere as a memorial of the only thing I could do that he uncritically loved. That sounds dark, but there was more to him than only that. When I was tiny he used to indulge a fierce and violent temper, and Mom got him to stop it\u2026 and he did, some of my siblings never saw that in all their lives. He was sad a lot of his life, but he was also the Dad who literally built our childhood television set from a Heathkit electronics kit, so I grew up playing Atari 2600 games on the TV my Dad had literally built from parts. To a nerd like me, that is awfully cool. He was a hard act to follow and a hard man to please, and though it was sometimes a rocky path I know that I was able to be supportive in his final years, and the last time I saw him alive and aware, I hugged him and I meant it\u2026 and he hugged back.\n\nI think I\u2019ll be able to keep the Airwindows release schedule going without missing a week. I think he would respect me wanting to do that: it\u2019s the sort of thing he would do. Also, there\u2019s nobody much left to DIE anymore now that my parents and my cat have gone, so at this stage it\u2019s time to just keep doing what I do, and that\u2019s what would please me and would\u2019ve pleased them.\n\nWell, not the cat. She would have demanded cuddles. But I was good for those, too.\n\nLove you guys, and I will try not to put out any awful buggy derps of plugins, but fair warning in case I do: it\u2019s been sort of a difficult half-year. It ought to start getting better, I feel I must be through the worst of it and I\u2019m still here and will be OK. <3",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DubCenter",
    "description": "a version of DubSub where the bass reinforcement is purely mono",
    "tags": [
      "Latest"
    ],
    "slug": "dubcenter",
    "short_description": "a version of DubSub where the bass reinforcement is purely mono",
    "full_description": "So here\u2019s DubSub (below) with mono bass. This isn\u2019t the last you\u2019ll hear of this tool as I have BassKit coming out (which is the more approachable, well-behaved version of DubCenter) but this is the one that will let you get the most extreme. If you were using DubSub to its fullest, this one lets you do the same only with the bass and sub outputs centered.\n\nThe reason you\u2019d want to do that is, whether for sound reinforcement or vinyl mastering there\u2019s little reason to have stereo bass. It just makes the woofers fight each other, below a certain frequency (which depends on how far apart your speakers are). This is why elliptical EQs exist.\n\nAnd the thing with DubCenter is, you don\u2019t have to filter the original audio or mid/side it! All you have to do is use DubCenter to reinforce the bass, and it\u2019ll automatically make that added content mono. This is even better than using (for instance) ToTape and its head bump mechanics to reinforce bass, because that (like a real tape deck) produces a stereo head bump. This produces the same fullness with the same algorithm, but it\u2019s strictly mono so you get the effect of an elliptical EQ without having to run one! Only the super-deep stuff gets reinforced and the information and phase relationships of your original mix go untampered with.\n\nAgain, BassKit will do this in a super-convenient way with much of the tweeky functionality simplified or taken out (for that one, there is no chance of abusing the sub-octave to do weird stuff as it\u2019s restricted to only convincing subs content) but DubCenter is the one like DubSub, where you can make it do crazy things. You\u2019ll find it in your plugin menu next to DubSub, most likely. Have fun!",
    "categories": [
      "Bass"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Dubly",
    "description": "a retro vibe and atmosphere maker",
    "tags": [],
    "slug": "dubly",
    "short_description": "a retro vibe and atmosphere maker",
    "full_description": "Some people will recognize this instantly\u2026 even if you don't do heavy metal in Dubly, you know :)\n\nHere's what this is. There's a famous sort of noise reduction, with variations, that's based around the idea of taking the audio, filtering it, compressing it 2:1 and adding that TO the signal. You then record that to tape. And when you play it back, you take that combination, compress it and filter it AGAIN, but this time subtract it from the signal. And hey presto, perfect sound!\n\nWell\u2026 nope. Doesn't add up. Changes the sound. The thing is\u2026 that changed sound is sort of magical.\n\nHow come? For starters, when you distort tape you get harmonics. If you do that to the sound you start getting harmonics a lot sooner, over a broader range of sounds\u2026 but then you're taking the added harmonics you just made, and you're subtracting them again. You're turning them down. You're making the dynamics of your sound come with dynamically varying harmonics, a real color adder, but without the dynamic squashing of just plain saturating. And that's not even getting into when you've got the machines misaligned\u2026 or tuned by ear to bring out a particular magical sparkliness and ambience that's NOT really accurate, but maybe is the special sauce for a particular studio's recording machines\u2026 we may never know, we know only that these old noise reduction things were fiddly beasts\u2026\n\nSo what if you strip all that down, Airwindows-style, to only the basic principle?\n\nMeet Dubly. It uses uLaw technology (really!) for good, not evil! It does the most general form of that processing, NOT like any specific very proprietary tech, and uses a simple distortion inside rather than any tricky tape emulation (that can come later!). It defaults to 0.5, where it will just bring a delicate aura of retro magic to the sound. But, the way it's calibrated (very tricky, by nature) you can crank it out and mis-calibrate it. And when you do, you'll get more and more into a crazy, hyped, intensified zone that adds a lot of treble energy. But this doesn't make it into a 'single ended' version of the processing (even though that's a known secret weapon). It remains the double-ended, full chain, noise-reducing system (that is, if the single distortion stage was adding noise, which it isn't). Just\u2026 twisted.\n\nThere will obviously be more of this, but for now, you can do your heavy metal in Dubly, you know. It will get a little lighter and spacier and more atmospheric, which is probably why this is Not Done. But who knows, maybe you'll like a little Dubly on your record. Hope you like it :)",
    "categories": [
      "Effects"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DubPlate",
    "description": "ruthless dubplate mastering for electronic music",
    "tags": [
      "Basic"
    ],
    "slug": "dubplate",
    "short_description": "ruthless dubplate mastering for electronic music",
    "full_description": "It's possible you need this to make your music sound its best. I've used this literal plugin to put out a record! Just now, on something that I'd tried to get right for years!\n\nIt's also possible this is a retro-themed blast from the past with no use in a modern world of downloadable hyperaudio and that you'll immediately know it's trash not to be taken seriously.\n\nLet's explain. A dub plate is like a vinyl record except it's cut from acetate, which wears out quicker. These are traditionally known as 'masters' and electroplated to make vinyl-stamping machinery, but you can also play them on a record player directly. The UK electronic music scene went through a phase where dubplates were extremely popular, with mastering houses booked solid and people waiting in lines to get their dubplates made from their DAT tapes. The experience of going to clubs and listening and dancing to this music was a golden age all its own, separate from the golden age of rock or metal or prog, etc. And there's a distinct dubplate sound that can be exploited, one that's wildly different from what you typically get out of DAWs or stuff like lofi hip-hop, even though people like to bring in lofi elements to resist the 'DAW sound'.\n\nWhat's this dubplate sound made of? There's an unexpected reason beyond just the lacquer material. Airwindows DubPlate makes NO effort to mimic surface noise, or groove wear, or any of that. Instead, it acts like a mastering chain that's so bulletproof it can resist any terrible audio thrown at it. There's three ways it does this and gets the dubplate sound (it was dialed in using Airwindows Meter to track what's actually happening sonically)\n\nFirst, you can't just throw any synthetic noise at a vinyl record and have it play. You can even break a lathe if you throw too much high frequency energy at it. So, DubPlate uses the 'glue' control in Mastering\u2026 except it uses an intensity Mastering can't even reach, and it uses two of them each set differently, just to get to what was coming off the dubplate example I had as a real life reference.\n\nSecond, the side channel is highpassed very aggressively! Dub plate houses had to handle anything that came in the door no matter how insane it was, and there was no time to fiddle with a troublesome DAT tape. If the guy had thrown in a full volume 808 kick distorted and out of phase, well, the mastering house had to turn it into a dubplate that played, and so the side channel doesn't let any bass in. (There's a special technique that might warrant more exploration, which I included to help things stay punchy even when filtering that aggressively).\n\nLastly, even the mid channel isn't safe! Making competitive dub plates, you couldn't let people swamp their audio with subsonic rumble no matter what they made their synths do. The gear of the time was already capable of getting you into trouble and burying everything in useless energy-sapping sub-bass, and musicians could be expected to get this wrong as easily as they could get it right. (Monitoring contains a zero cross section and a reference 40dB line that can show you whether your bass is unproductive in a live setting.) Plus, simply running into the analog amps and lathes of the day, the mastering chain, could drastically alter the subs. And so, Dubplate goes after extreme digital lows as well, reining things in until you could cut the output of the plugin to a lacquer and be pretty safe from trouble no matter what audio you put in. This one also uses the technique for having the force of the bass stick around while being reined in.\n\nAnd that's the secret. If you have a fantastic playback system, killer subs, and years of mixing experience, then maybe you can get creative and come out with something that will be awesome, and then tweak it with Mastering and Meter, and you get to explore the farthest realms of audio creativity without setting a foot wrong.\n\nIf on the other hand your reach exceeds your grasp, you can put together creative exciting stuff that also happens to be real obnoxious on multiple levels. You're distorting too much, and you didn't notice that you went over-bright, and a bunch of things in your bass are freaking out, and it's too complicated and to make it safe takes away the heart of your creative decisions.\n\nSo, go into DubPlate\u2026 pad your stuff down with PurestGain if you have to, the output might peak louder even if it is pulling the subs back\u2026 and let the uncaring mastering chain strip down your sound into the gutsy heart of its intention. If it's hyperpop you wanted, maybe you check out right there. But if you're looking for size and depth and power and the sound of the dubplate era calls to you\u2026 maybe this brings your music the rest of the way there.\n\nHope you like it! I put out a record (Dragons Dub Plate Edition) specifically because I had music literally from that era made using those methods, and the plugin instantly turned it into the experience it was always meant to be. That record's at the usual bandcamp price but DubPlate is open source and free! See if it helps you out :)",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": true
  },
  {
    "name": "DubPlate2",
    "description": "like an ITB mastering house for electronic music",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "dubplate2",
    "short_description": "like an ITB mastering house for electronic music",
    "full_description": "By request, more DubPlate\u2026 and new instructions on how to get this sound.\n\nTurned out the audio reference I used to chart a path from digital audio master to the sound of that very dubplate, wasn't as simple as I'd thought it to be. I didn't have the real master\u2026 and then, when I was fortunate enough to get it, it turned out there wouldn't be a simple way to go from that to the correct sound. The plate had been cut from an earlier mix, and the mastering engineer had complained about how bright it was, and applied more than a bit of EQ. That meant I couldn't treat it like it was a simple one-step process. I'd have to build in an EQ to do what the engineer did, before I could apply the same stuff DubPlate used. On the bright side, that would let the 'lathe' be cleaner, less aggressive. But there would have to be controls that matched what had happened to my reference in real life.\n\nBut there was an EQ I hadn't revisited for a while\u2026 that turned out to be just right for the job. My Baxandall EQ had gone to version 2 already, stripping out some early 'analog effects' I'd used in the first version.\n\nTurned out that adding an input trim control, adding the analog effects back again (I'd used the Console5 processing for this), running this into DubPlate and readjusting it using the real reference audio but this time also doing the EQing and then compensating for the changes that no longer needed to be handled by the lathe\u2026 got me what I'd wanted in the first place.\n\nProvided, that is, you operate it properly\u2026 so here's the new version of how to get a dub plate sound using DubPlate2.\n\nFirstly, if your audio is perfect and you run it flat, you only need to pad it down with the input control until you have NO, repeat NO clips. The processing even without EQing can produce overs. Baxandall3 (built into DubPlate) is able to peak some way hotter than 0dB, to the point that you'd need a safety clipper like ADClip8 or ClipOnly2. Do not use one! Don't use a limiter, or anything like that, just pad the Input until there are no clips at all on your output.\n\nThis is important because you can't put a safety clipper between your audio and the lathe. The corners produced by a clipper are hell on lathes, high frequency energy that can burn the cutting head right out. The EQ and things like the elliptical filter and normal highpasses that are part of the circuitry are able to rearrange your audio a bit, stopping it from having the digital clips and brickwalls it might have, generating smoother peaks that don't follow the usual digital rules for where energy sits. To get a real dub plate sound, get your loudness through midrange, not through clipping the peaks.\n\nBut you have an EQ, so what if you need to use that? It's a very gentle filter, Baxandall3. You can certainly lift the highs or lows, or indeed cut them if that's what you need. The thing is, you have to follow the same rule. Even more so, as Baxandall3 is an analog-style filter that's capable of saturating when pushed! You can add deep lows to work around the bass loss from the lathe and elliptical filter. This will only get you so far, plus you'll discover that it eats up your loudness without giving you that much in return. You can add extreme highs, and the same thing will happen. You'll be fighting the lathe all to produce a more untrackable record that won't even be loud\u2026 since, remember, you have to pad the level until it doesn't clip. Otherwise you'll automatically not get a dubplate-type sound.\n\nSo, think in terms of midrange, allow the record to act like a record, and you should be able to get your ideal dubplate sound out of DubPlate2. You can use Meter to really dial in your results, but even without it the work should be pretty straightforward. Let it give you the sonic peaks your sound deserves, and DubPlate2 will be able to do its job :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "DubSub",
    "description": "a fully featured bass doctor",
    "tags": [],
    "slug": "dubsub",
    "short_description": "a fully featured bass doctor",
    "full_description": "Be careful what you wish for. I like making plugins with very few controls, but when you have to use ALL the controls\u2026\n\nHere\u2019s how it works. The top section, Treble Grind, is like a bass guitar presence circuit. You shouldn\u2019t use that for hi-fi purposes, if you want clean pass-through use the Dry/Wet. Treble Grind works like a distortion, and has an Inverse/Out control allowing you to subtract it as well as add it. \u2018zero\u2019 is in the middle.\n\nCrossover determines what goes to the Treble Grind, and what goes to the bass sections. To make it track bass better, set the crossover low.\n\nBass Drive is how hard you\u2019re pushing the main bass section. It\u2019s essentially an adjustable Head Bump control like in ToTape. Bass Voicing controls the depth of the bass boost: setting it higher up sounds more like overdriving a bass amp. Bass Inv/Out is the same as in the Treble Grind section, an \u2018attenuverter\u2019 like in certain Eurorack modules: it lets you subtract the bass, not just add it.\n\nSub Drive, Sub Voicing, and Sub Inv/Out are much like the bass section, except they work on an octave-divided version of the bass section. This helps it get good octave-down sounds some of the time, but it\u2019s not anything like a digital suboctave synthesizer: it\u2019s working crudely like an analog octave divider, which means it can make horrible noises if it doesn\u2019t have clean signal to work with. This is of course intentional :) if you want it to do a recognizable sub-note, feed it a carefully controlled signal off a single track. Or, you can set it very deep and not mix in all that much of it, and get an interesting effect sound. For cleaner deep bass, work with the main bass section, or voice both of them very deep in hopes of cleaning up the sub-bass section a little by refusing to let it have more complicated signals.",
    "categories": [
      "Bass"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "DubSub2",
    "description": "the essence of the Airwindows head bump",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "dubsub2",
    "short_description": "the essence of the Airwindows head bump",
    "full_description": "The final element for reinventing ToTape is in place, with DubSub2!\n\nI've always used this one particular algorithm, both for ToTape and for various bass-emphasis plugins. It acts like a combination between an IIR filter and a saturation. And it's got fantastic sound, but with a catch: it has to be controlled in the higher frequencies or it'll sound growly and distorted if you push it, and it's unstable.\n\nThat's literal. I have to do stuff to control it or it will throw bass so hard that it sits around pushing DC. The algorithm has to be filtered because it's unstable, it'll constantly bring up deep bass no matter what. The sound of it is intrinsically tied to this behavior.\n\nSo, what if I tried the technique I use in Parametric, and set up some biquad filters as bandpasses, and then stack them (slightly staggered, for tone purposes) to get better rejection of unwanted DC energy? What could go wrong? Well\u2026 it's tricky. If you do that, phase shifts will cause there to be a cancellation around the bandpass frequency. You'll get notches, the placement depending on what your filter bandwidth is.\n\nBut hang on. Jack Endino's got a webpage where he's measured lots of real analog tape machines, showing the head bumps. And the thing is, on his measurements there's consistently a notch there, too. It's exactly an octave above the head bump, and that's part of the sound.\n\nSo what's the bandpass resonance, when you're using two of them stacked, and then you want the notch produced by the phase shifting (already an unusual choice) to line up exactly an octave over the head bump resonance, so that your DubSub2 head bump will consistently behave like the real thing? You can set the head bump frequency to whatever you like (Jack finds that doubling the track width halves the head bump frequency, and of course going from 15 ips to 30 ips doubles the head bump frequency, and the notch stays exactly an octave higher). But the Q is what positions that notch. Since there is clearly no correct value for such a bizarre experiment, since super-shallow Q won't work, since using Butterworth (0.7071) is slightly too tight\u2026 what's the resonance number for the two stacked bandpasses?\n\nThe golden ratio.\n\n\u2026hope you enjoy DubSub2, and this is what will become the head bump for ToTape7 :)",
    "categories": [
      "Bass"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "DustBunny",
    "description": "unpredictable distorty noise, like dust wedged under your turntable needle",
    "tags": [
      "Latest"
    ],
    "slug": "dustbunny",
    "short_description": "unpredictable distorty noise, like dust wedged under your turntable needle",
    "full_description": "And then sometimes there\u2019s a plugin that just makes you go \u2018wut\u2019\u2026\n\nDustBunny was an accident. I was doing something and put out a plugin (possibly a freebie) and there was a bug and I was in a hurry and put it out without checking\u2026 and quickly learned something horrible was wrong. Initial reports were along the lines of \u2018oops\u2019 and \u2018yikes\u2019, and when I checked, sure enough, the plugin erupted in terrible scrunch, and I in turn erupted in apologies and scrambled to fix the problem (which wasn\u2019t that hard).\n\nBut even before I\u2019d got the fix out (and simple oversight problems, I sometimes fix within hours), more reports were coming in: hold on, don\u2019t fix it, it\u2019s cool!\n\nThat wasn\u2019t what I had in mind, but the solution was obvious: DustBunny was born. This twisted little plugin just applies a weird accidental scrunch based on where the bunny control is set. Please don\u2019t use it on the 2-buss, or in mastering :) but more seriously, this is born to sit inside some kind of weird plugin matrix device as part of a nefarious sound design idea. It would\u2019ve been perfect in one of the parallel effect chains used on the latest DOOM soundtrack, mangling a sinewave. If you hit it with high levels it gets kind of jumpy, so you might want to give it more restrained levels. If you don\u2019t like running a gain trim in front of it, run something more amusing like a delay or a flanger to pad your signal a touch.\n\nDustBunny is kind of like a joke, except for it\u2019s real and does produce an unusual, distinctive effect (or 1000, as all the settings are kind of unique).",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Dynamics",
    "description": "a combination compressor gate",
    "tags": [
      "Latest"
    ],
    "slug": "dynamics",
    "short_description": "a combination compressor gate",
    "full_description": "Dynamics started with a request: the gate, from CStrip, on its own. Then I thought, what if I included the compression too? I could tweak both and see if I could make 'em better for the new plugin. And then I thought, what would it be like if I combined them into a single dynamics object?\n\nI think it worked.\n\nDynamics can be very transparent, or you can crank the speed and intensity to be hyper-squished\u2026 but since it's a single plugin, you can hypercompress AND gate as a unit. That means you're triggering the gate off the source audio, you're able to control the closing of the gate like it's raw sound, but the sound you're gating is the compressed one. And that means terrific control and cleanness on the sculpted, tightened sounds. I've designed it so you can make it gate on almost anything, and squish very aggressively. It's unlinked so you can use it on a stereo submix with distinct parts for each side, or put it on a mono track to control and shape it.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Dyno",
    "description": "a lot like Mojo, but for intensity instead of loudness",
    "tags": [
      "Latest"
    ],
    "slug": "dyno",
    "short_description": "a lot like Mojo, but for intensity instead of loudness",
    "full_description": "Dyno is similar in some ways to Mojo, but Dyno has a completely different character. Instead of loudenating, it \u2018intensenates\u2019. It\u2019s a little bit like Remap in that way, but it\u2019s not the same as Remap. You won\u2019t get a volume boost out of it really, nor will it let you slam it for fatter peaks.\n\nInstead, it brings fire and intensity to the audio and reshapes the waveform in a Mojo-like \u2018evolution of Spiral\u2019 way. Because it doesn\u2019t take to slamming in the same way, it\u2019s going to be a more subtle effect, but for those who got excited by Remap, this one deserves your attention.",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Edge",
    "description": "a seven-stage distortion with Hypersonic filtering and tone shaping controls",
    "tags": [
      "Latest"
    ],
    "slug": "edge",
    "short_description": "a seven-stage distortion with Hypersonic filtering and tone shaping controls",
    "full_description": "With all the talk I\u2019ve done about Hypersonic (composite filtering making very steep Butterworth slopes from sets of biquads), one must ask: what if you just made a distortion out of it?\n\nThis is Edge. It\u2019s seven stages of hard clipping with Hypersonic-style filtering between each one. It\u2019s real bright and has silly high gain, and it\u2019s going to become real useful.\n\nThat\u2019s because it\u2019s one piece in the DI Guitar system I\u2019m devising: a set of plugins that combine my style of aliasing reduction (using biquads, so zero latency) with guitar-grade distortion and a reissue of a classic old plugin of mine that\u2019s totally revitalized for the modern day, Cabs. (it can also be run into the Airwindows amp sims, of course)\n\nSuffice to say Edge is the high-gain distortion stage of such a system. It should run pretty efficiently, and it\u2019s got a carefully designed set of controls. The gain of course is obvious.\n\nLowpass is basically your cutoff frequency: this isn\u2019t designed to be swept (though you could if you\u2019re OK with some crackles) but is a very efficient Hypersonic-style lowpass that you can set from 25k right down into the deep bass. Since it doubles as the ultrasonic filter, dialing back on the extreme highs will give you even better aliasing performance (run at elevated sample rates to use this properly) and also gives you an interesting tonality at the cutoff which isn\u2019t exactly resonance, but it\u2019s a bit like it. The way the phase shifts going into successive stages of gain boost and clipping produces a distinctive tone.\n\nHighpass is your secret weapon for when you use it as a guitar amp: get the rest of the system huge and beefy, and then dial in the lows using this input highpass, for maximum texture.\n\nOutput and Dry/Wet are for use when you\u2019re just making it be a hard clipper. It\u2019s never going to be exactly a hard clip because of all the stages and the way the EQ interacts with the sound, but between the highpass, lowpass and the gain on tap you\u2019ll get many sounds out of this one. Unlike stuff like \u2018Tube\u2019 this is never intended to be smooth. It\u2019s just edgy in a distinctive way that might come in handy.",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "EdIsDim",
    "description": "mid/side conversion utility plugins",
    "tags": [
      "Latest"
    ],
    "slug": "edisdim",
    "short_description": "mid/side conversion utility plugins",
    "full_description": "",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Elation",
    "description": "a re-release of another old Character plugin",
    "tags": [
      "Latest"
    ],
    "slug": "elation",
    "short_description": "a re-release of another old Character plugin",
    "full_description": "This is Elation, which is NOT REALLY a sort of LA-2A like thing. That\u2019s because it builds a distinct sound out of LA-2A convolution impulses, makes it already not an LA-2A, and then doesn\u2019t properly compress :D it does something, but it doesn\u2019t count as compressing. I\u2019m not sure what I was up to here.\n\nBut it\u2019s got the Character plugin \u2018character slider\u2019 that lets you greatly accentuate the tonal effect (this is another one that steals bass if that interests you) and a drive slider that lets you crunch things, and unlike typical plugins it has a dry/wet on the top for some reason! So, if you\u2019re looking for a \u2018analog-ifier\u2019 based on dynamic convolution that can hype up a sound in an interesting way, and it\u2019s important to you that you use something other people won\u2019t have or aren\u2019t using, this is your silver bullet: like the other Character plugins, it\u2019s a weird secret weapon that won\u2019t sound like other peoples\u2019 plugin chains. If you can work with what this one has, then you can bring a bit of color that people won\u2019t have constantly heard.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ElectroHat",
    "description": "a hi-hat tone generator that uses the original sound as a control voltage",
    "tags": [
      "Latest"
    ],
    "slug": "electrohat",
    "short_description": "a hi-hat tone generator that uses the original sound as a control voltage",
    "full_description": "I\u2019ve always liked this one. ElectroHat uses primitive residue sequences to produce a \u2018noise\u2019 like effect that makes the hi-hat, but since it\u2019s such a crude method of generating randomness, you get artifacts and peculiar electronic noises instead of nice pure noise. Peculiar electronic noises turn out to be a lot of fun as hi-hats!\n\nYou use this by feeding some sort of control voltage to it. It responds very, very quickly, so if there\u2019s any amplitude modulation as part of your wave, you\u2019ll hear it affecting the hat. You can use that on purpose, you can use a real DC control voltage to drive it, or you can simply make the envelope you want using a square wave tone for the underlying signal: it\u2019ll rectify the squarewave to be only positive, and that\u2019ll end up the same as a control voltage.",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Energy",
    "description": "electrifying fixed-frequency treble boosts",
    "tags": [],
    "slug": "energy",
    "short_description": "electrifying fixed-frequency treble boosts",
    "full_description": "In the continuing series of \u2018weird algorithms other people can\u2019t give you\u2019, here\u2019s Energy. What\u2019s the matter with Energy that only Airwindows can/will do it? Pretty simple. It\u2019s a bizarre algorithm which acts like half a super-high-Q boost and can\u2019t be tuned in the normal way. It can only work on integer multiples of the sample rate. So the labels only relate to 44.1K, they\u2019re colorfully named rather than specifying frequencies, and at different sample rates any frequency labels would be lies anyhow\u2026 and they can\u2019t be tuned, and the Q can\u2019t be altered. Literally all it does is slam huge amounts of super-aggressive treble on.\n\nBut what a treble it is! Energy accentuates the attack transient like no other high frequency EQ (especially linear phase, and \u2018DSP cookbook\u2019 biquad EQs). The principle of operation is totally different. It didn\u2019t catch on because it\u2019s a weird idea to start with, and it\u2019s completely not adaptable to anything. It\u2019s not even that great at cuts, though you can try it for cuts if you like. It\u2019s really just about slamming a bunch of punchy brightness on at 22K, 15K, 11K, 9K and so on: or, Hiss Glitter Rat Fizz Scrape Chug Yowr Snarl, as the labelling goes.\n\nThe lower ones extend down into high-mids as you\u2019d imagine (at high sample rates they\u2019d work as high-boosts) but that\u2019s another reason I can\u2019t simply label them as frequency controls. These are nasty. They won\u2019t give you clean tidy boosts, not even \u2018analog style\u2019 clean tidy boosts. They\u2019re interacting with the sample rate in a nasty way and produce a bunch of extra overtones and skronk so it\u2019s better to leave them as adjectives to avoid even the suggestion that they would give you polite EQ shaping.\n\nBut if you are looking for brutal, raw electrifying ENERGY I think it\u2019s hard to do better than Energy. The only thing that\u2019s new on this old school super secret weapon, besides denormalization and the noise shaping to the floating point buss and higher resolution internal processing, is the InvDryWet control, which was an obvious call. Since the different sliders can get into strange interactions, since you can play them off against each other, that means you could try to isolate high frequency stuff you don\u2019t want and accentuate it as much as possible\u2026 and then, return to dry, and give it just a bit of inverted effect. That\u2019s one way to tame nasty highs (such as from a bad condenser mic). I accept no responsibility if the bad mic, combined with Energy boosts, kills you with treble. That\u2019s kind of Energy\u2019s job :)",
    "categories": [
      "Effects"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Energy2",
    "description": "electrifying fixed-frequency treble boosts for high sample rate",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "energy2",
    "short_description": "electrifying fixed-frequency treble boosts for high sample rate",
    "full_description": "Energy2 is energy boosts. Mostly treble, but you can also bring out aggression in the high-mids. These are NOT done through usual means. They\u2019re a weird little algorithm that\u2019s tied to the sample rate, and the big deal with Energy2 as an update is that it\u2019s using my undersampling (which I just recently improved) to function as intended at high sample rates: it\u2019s also more CPU-efficient than the original, but otherwise it\u2019s the same (the original Energy might still be preferable for some, for instance if you absolutely must work at 48k and find it works better for you than Energy2 at that rate).\n\nWhen I say energy boosts, what I mean is: this is not a normal EQ. You could not make the Energy2 sound happen by mimicking the frequency curve using a pile of biquad filters, or worse yet phase accurate EQ. It\u2019s an entirely different algorithm, and this is what you get. Energy2 has enormous edge and focus around attack transients, not smearing them with pre-ring or high-Q traditional filtering, even though it produces very steep curves and isolates specific tones. Energy2 also has a definite color in how it adds frequencies: if you\u2019re boosting upper mids with one of the lower sliders, you also get a bunch of highs along with it. Part of the sound. Probably shouldn\u2019t struggle to remove those overtones too hard.\n\nYou can combine the sliders in weird ways to get very striking tone colors, but I think Energy2 is at its best when you focus on one color at a time, perhaps with a little of another color added or subtracted (less than zero means taking that tone color out: but remember, this is Energy2, it\u2019s never completely tame or predictable). The breakthrough with Energy2 is that it\u2019s designed to run at elevated sample rates, undersamples its boosts, but unlike the original Energy, it mixes that with a NON-undersampled Dry to get best of both worlds: the exact tone colors it ought to have, but against an unaltered, hi-res background. Since Energy\u2019s generally able to get obnoxious levels of boost, the thing to do is get sounds where at least one slider is cranked out as far as it\u2019ll go, and then use Inv/Dry/Wet to use only as much of that added energy as you need.\n\nYou get high and upper mid boosts, all the way up into the highest of air bands, that are more like they\u2019re part of the original sound and not even added using EQ at all\u2026 but complete control over how much of that is added to the fully high-resolution sound at elevated sample rates. (and at CD rates, it works just like the original Energy, but with the CPU enhancement from not processing unused bands, plus the Inv/Dry/Wet is run at a higher word length than before, and uses modern Airwindows dithering to the floating point buss: that\u2019s how old the original Energy was)\n\nIf I make a special Airwindows 96k mixing kit, like Starter Kit but more for experts adopting my mixing system rather than beginners, Energy2 almost defines what that would be like. It\u2019s a very strong way to get a more Airwindows-y sound. (It\u2019s also a nifty sort of anti-Soothe: nothing will pop out vibey overtones, intensity, and sonority like this plugin)\n\nHope ya like it. It\u2019s one of the special ones. :)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Ensemble",
    "description": "a weird flangey little modulation effect",
    "tags": [
      "Latest"
    ],
    "slug": "ensemble",
    "short_description": "a weird flangey little modulation effect",
    "full_description": "Here\u2019s a further experiment along the lines of Chorus and ChorusEnsemble! This one is more in the \u2018unique because it\u2019s kind of lame\u2019 category. I like being able to do this sort of thing, because in this 2017 plugin business, everything you do has to be the hippest trendiest most popular thing or you\u2019re basically doomed to get squished like a bug.\n\nBut hey! I\u2019m doing a Patreon, not a \u2018business\u2019 of selling \u2018hit plugins\u2019 that are \u2018the best plugins\u2019. And therefore, nothing\u2019s stopping me from putting out something that\u2019s not an emulation of some famous hardware manufacturer\u2019s property (and putting them out of business, eventually). My stuff doesn\u2019t have to be the target market for what people have learned to want the most over the years (often for good reason). Heck, my plugins don\u2019t have to have a reason! And most importantly, my plugins don\u2019t have to succeed. They can exist (and be updated, etc) even if only a few people out there like them\u2026 or even if unpopular people like them.\n\nKind of punk, or something (stay tuned for some major DIY Airwindows stuff coming down the pike along those lines).\n\nSo, here\u2019s Ensemble. It\u2019s a weird, unique little sound. It was meant to be a big pad thickener with great richness and depth. Well, you can throw on a bunch of bass, but it\u2019s more like \u2018cheesey string ensemble synthesizer from the 70s\u2019, and that by accident, so it\u2019s not even a specific (branded!) string ensemble synthesizer from the 70s. It\u2019s kind of an annoying sound, I think.\n\nIt\u2019s free, so if you think you might have use for that, have fun with it! I\u2019m off to make something else :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "EQ",
    "description": "just the EQ parts of CStrip",
    "tags": [
      "Latest"
    ],
    "slug": "eq",
    "short_description": "just the EQ parts of CStrip",
    "full_description": "CStrip actually came out of this: a set of EQs specially coded to work together. It\u2019s a lossless three-band (as in, the bands are made by different IIR filtrations being subtracted from each other, so if it\u2019s flat it\u2019s totally bit-identical output and also it has no pre-echo) with a special highpass and lowpass. Each of these things gets switched out of the circuit if not in use (much like CStrip). That makes EQ a very nice default EQ for broad-stroke filtering.\n\nThe slopes aren\u2019t super high, but that just helps it sound more natural (for a more striking-sounding filter, try Capacitor which is a more aggressively sloped highpass and lowpass). I could have given it set frequencies, but it seems like that\u2019s kind of handy. This plugin is given to you (in AU, and Mac/Win/Linux VST) by request, as I\u2019ve had a user ask for it even though CStrip is already out. So, for a simpler and more approachable Airwindows EQ, here\u2019s EQ :)\n\nThis work is supported by my Patreon, and I\u2019m happy to say I\u2019m back in the top 50 of the \u2018Music\u2019 section at \u2018Graphtreon\u2018: I always like that, feels like I\u2019m getting somewhere with all this. I also like something else, too: I\u2019m definitely giving you folks \u2018Aura\u2019 this month. It\u2019s thanks in large part to a mysterious creature known as Slipperman who got involved, and in his honor, next month you\u2019re getting \u2018Golem\u2019. Remember, the bigger a success the Patreon is, the more I\u2019m able to persuade people that my way of doing things is good. So if you want this sort of thing to catch on, throw money as that\u2019s all people pay attention to these days\u2026\n\nOther stuff I\u2019m working on is Atmosphere, DeRez, and the latest Righteous, Righteous4. Also, if anybody wants to meet me, and also enjoy a rather special academic experience, I\u2019m attending a scholarly lecture by a certain Doctor Bill Bruford in Albany NY this Tuesday, which I\u2019m very excited for. I have no idea how well this\u2019ll go over but I have a smaller version of the famous bent cymbal he discovered (the real one tragically broke after much use), and I mean to give it to him as a gift in honor of his creativity in the field of timbre. Anyway, wild horses wouldn\u2019t keep me away from there, so if my car behaves itself you can meet both me and a REAL great person ;)\n\n(as a follow-up, by 2022 I'm hanging down just above 100 in the global Patreon music rankings, and I did in fact get to Albany and the lecture by Bill Bruford. I got in late, and confused him with my cymbal gift after the lecture (Bruford: 'but it's not the one!' which, true, it was not, and I got quite flustered. I hope he understood in some way that I just wanted to give him something, somehow. And no Airwindows people were there, which simplified things I guess)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "EveryConsole",
    "description": "mix-and-match Airwindows Console",
    "tags": [],
    "slug": "everyconsole",
    "short_description": "mix-and-match Airwindows Console",
    "full_description": "Sometimes I give people tools AS I am working on them\u2026\n\nEveryConsole contains the original Console algorithm, Console6, Console7, the sin()/asin() routine that's the guts of Console8 and PurestConsoles 1 and 2, BShifty which is the near-sin() approximation that's in PurestConsole3 from last week, and Console Zero.\n\nAll of these algorithms are stripped of all the tone shaping parts and ultrasonic filterings to be the bare-minimum functions for their purposes. That doesn't mean they are every Airwindows saturation routine: Distortion has more. But these are all the ones designed to encode and then decode on the buss.\n\nAnd, EveryConsole includes both the Channel functions, and the Buss functions, under one hood. So you basically select the version you want, and whether it's channel or buss.\n\nBecause there's no filtering or tone shaping these lend themselves to oversampling, for instance Reaper's new oversampling. That doesn't mean it'll be better: I think it kinda won't, but if you have oversampling capacity this is now yours to fool with. EveryConsole gives you access to the raw encode/decode functions without making you use them in an Airwindows way.\n\nThat's not why I made it, though. I'm working on modeling the sound of big classic consoles, and I've got a lot of audio reference, and I needed to do a lot of study of how different Console versions combined. I'm already working on doing tone shaping to get closer to the target, and I wondered whether mismatching Console versions got you types of presentations that reminded the listener of specific big consoles.\n\nThat would be a YES.\n\nSo I'm busily at work using this plugin to monitor a lot of variations on Console and compare them to classic records, and if I get to have a tool then so do you! So, here is EveryConsole. If you'd like to combine it with the distributed ultrasonic filtering I like to use, then load up UltrasonX or HypersonX and arrange the instances of those so they're in the right places around the EveryConsole instances. If you'd like more like Console7's ability to bring elements forward and back in mix, or Console8's tone, you have to use those as there's extra stuff built into the plugins. But if you want more basic building blocks to assemble your own Airwindows big console\u2026 this is for you as much as it is for me.\n\nHope you like it!",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "EverySlew",
    "description": "a wide variety of unique sound processing tools",
    "tags": [
      "Latest"
    ],
    "slug": "everyslew",
    "short_description": "a wide variety of unique sound processing tools",
    "full_description": "Where to even begin? This is the Swiss Army Chainsaw of treble processing plugins. It'll do Slew, GoldenSlew, PlatinumSlew, or any combination of them, forwards, backwards and inside out. I hesitate even to recommend it as there is no real introduction to it, or any other plugin or processor that will really teach you how to use it. If you'd like to just tame unruly high frequencies, you can still use GoldenSlew or PlatinumSlew, and as long as you can still hear audio coming out you're fine (don't crank up Slew or GoldenSlew all the way to 1.0 unless you want to sample and hold, because they will do what you asked).\n\nBut if you're still reading, here's what you get extra in EverySlew, which is mainly for me to use developing versions of Console that sound like real analog desks.\n\nFirstly, the Depth control gives you number of stages, with full crank being the equivalent of GoldenSlew or PlatinumSlew. For many sounds there will be no difference between the full ten stages those have, and much fewer. It'll be hard to hear. Fewer stages means lighter CPU load, so I'll be finding optimal settings here, but it also means less of the 'golden' effect when given extreme inputs. When used to take off only the brightest highs (more on that later) you can use fewer stages with no penalty. Two or three should suffice: 0.2 or 0.3 or so.\n\nSecondly, the Halo control gives you a terrifying, industrial meltdown of a sound that also introduces attenuation into the deep bass. I called it Halo because it brings in an odd sparkliness and energy that could come in handy. It uses another level of previous-sample to try and identify actual corners, changes in the angle of the wave, like my DeEss and Acceleration plugins do. I've never got this algorithm to work until now: having made it work, it's a strange and unruly thing. Realistic settings will all be rather low, especially if Slew is anything like obvious. HIgh Halo settings are a kind of terrible distortion I've never quite heard before: I expect this to be used in anger to make some very aggressive noises not quite like any other (which is always handy, right?)\n\nLastly, you've now got a dry/wet. But not JUST a dry/wet, an Inv/Dry/Wet. Dry is 0.5 on the control. Crank it up and you have full wet\u2026 but set it to Inv, and you can make it cancel out the dry signal. When you do that, it shows you only the bits that are slew clipping, and silences everything else. So, for the first time, it's a slew clipper where you can monitor the clipping only, and directly hear exactly what the thing is doing. And this is handy, because the effect is very hard to hear at the levels it should be used! It will tend to make things sound exactly like they already did, except with glue and space in the mix, combing over the stray edges and points. Setting it to Inv means you can hear the points being put into place. Also, if you're using Halo, you can hear when that begins to reshape the effect, bringing in lows and so on.\n\nEverySlew isn't for everybody. I made it because I'll need it. I share it because that's what I do. If you're the sort of person to like this sort of thing, I hope you like it :)",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "EveryTrim",
    "description": "Left/Right, Mid/Side, and Master in one plugin",
    "tags": [
      "Latest"
    ],
    "slug": "everytrim",
    "short_description": "Left/Right, Mid/Side, and Master in one plugin",
    "full_description": "EveryTrim is like PurestGain only more so: it is very simply every basic stereo trim you can have (in loudness terms, anyhow!) You get left, right, mid/side, and a master level control. It works on stereo tracks only, as mid/side is meaningless without stereo.\n\nIt\u2019s also efficiently coded, suppresses denormal numbers, and uses the same noise shaping to the floating point buss you get in PurestGain. If you need a nice basic gain trim that does all those things (and nothing fancy: Wider is much more sophisticated, and I\u2019ve got an idea for a still more sophisticated stereo-widener plugin that is in the works) then EveryTrim will come in handy. Begone, dull pan-pots! EveryTrim will also be simpler than using EdIsDim and MidSide just to adjust mid/side balances: while you can do that with that pair of plugins, they\u2019re really for doing processing between them using another plugin (any plugin, doesn\u2019t have to be M/S). With EveryTrim, you can tweak mid and side levels directly, in a more obvious way.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Exciter",
    "description": "an Aural Exciter plugin that can be both subtle and extreme",
    "tags": [
      "Latest"
    ],
    "slug": "exciter",
    "short_description": "an Aural Exciter plugin that can be both subtle and extreme",
    "full_description": "This plugin isn't my usual jam, but I've been listening to this type of effect all my life. The Steely Dan album 'The Royal Scam' wouldn't be the same without the Exciter effect. And now it's a free Airwindows plugin!\n\nNote that this is NOT a clone of hardware, or any particular brand. As I usually do, I've extracted the guts of the effect and then adapted it so it can be used normally or exaggerated. You'll find that as you apply the effect, it'll start off sounding like it does nothing, gets more and more intense and then suddenly blows up into crazy distortion. To use it like a normal exciter, fine-tune it so that it's just barely making transients 'pop'. If you're hearing obvious crunch, you've already got it cranked up higher than real-world examples would let you do.\n\nThe effect works like this: get a sharp band filter going to extract certain kinds of information. Distort it with a soft clip (I use a sin() function, and some real-world examples used a 4049 hex inverter chip, which does a very similar super soft distort when used as an audio effect: it's the chip that made up Craig Anderton's 'Tube Sound Fuzz' circuit back in the day, and I still have lots of these chips to play with :D ) Then, once you've distorted this bandpass, add just only the distortion elements back into the full bandwidth signal, by subtracting the bandpass again.\n\nExciter lets you adjust the frequency you're using, and dial in the amount of effect you want. I'm pretty sure it'll consistently sound good (not quite natural, but this is 'late seventies heightened detail' tone here, it doesn't have to sound natural) if you're careful to not crank it too much. And of course this is Airwindows, you can crank it on stuff that doesn't have much to excite, and blast it on bright stuff to make a distinct form of gritty evil distortion for effect.\n\nA lot of the stuff I like in analog is when transistors and chips are misused and freaking out. You can get tones like that out of Exciter, if you like. You can put it in the middle of uLaw, if you like. I've not tried that so you can be the first. I hope you enjoy Exciter :)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Facet",
    "description": "a new kind of hard clip that adds two sharp corners into the wave",
    "tags": [
      "Latest"
    ],
    "slug": "facet",
    "short_description": "a new kind of hard clip that adds two sharp corners into the wave",
    "full_description": "Facet came out of me trying to come up with a new and distinct kind of distortion for the combined-distortions plugin I\u2019m going to do. Rather than just bring Drive, Density, Spiral, Mojo etc. together, I wanted to add something different.\n\nSo, Facet adds a \u2018clip point\u2019 but rather than a hard clip it just changes the \u2018knee\u2019 of the transfer function so your peaks can still go super high, way beyond 0 dB if you like.\n\nBut, they change \u2018angle\u2019 at a sharp point which becomes sort of a corner in the sound. Except for high settings it\u2019s both high up in the loudness, and a very gentle \u2018corner\u2019: still sharp, but very little change.\n\nAnd down near zero, it\u2019s damn near total hard clipping. At silence, it literally is a hard clip to silence.\n\nAw hell. Play with it, see what you think. i can\u2019t explain this one well, at least not right now. The mad scientist labs have released another weird one. It will act like it\u2019s a hard clip or a semi-dirty saturation, except the range of adjustment acts different, and it\u2019ll throw an odd artifact on pure low-frequency tones\u2026 just play with it, see what you get. It will find its way into the combined plugin because it\u2019s got a flavor all its own, but I can\u2019t describe it today.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "FathomFive",
    "description": "a way of supplementing extreme bass that\u2019s not just EQ",
    "tags": [],
    "slug": "fathomfive",
    "short_description": "a way of supplementing extreme bass that\u2019s not just EQ",
    "full_description": "FathomFive introduces a special Airwindows algorithm that acts like a combination between an EQ and a bass amp. This plugin can be used in sound design or on isolated tracks, but it\u2019s also part of an Airwindows DAW workflow I outline in the video I\u2019ve made. The idea is this: rather than blur and damage your sound by running through lots of \u2018fake analog\u2019 effects on your buss to impart deepness and analog-like tone, use the Airwindows plugins Console4 and FathomFive to get a big-sounding mix while letting most mix elements through with minimal processing. You can run the \u2018bass bloom\u2019 behavior on an aux, and feed it with only the elements you want, and then integrate it into the sound with Console4 which both works the way Console wants to be used, and addresses limitations that Console has when used all by itself.\n\nIt\u2019s all in the rather long video, and of course you can simply download and use the plugin if you prefer making up your own rules. There are no rules, I\u2019m only explaining one very specific use case where FathomFive works symbiotically with Console.\n\n(followup: this is a very old plugin. Newer ones that do this type of thing with increasing ease and friendliness are DubSub, DubCenter, and BassKit. FathomFive is wilder, and you probably want to keep an eye on whether it is spitting out excessive DC offsets, as the algorithm these plugins use for the bass is tricky to manage)",
    "categories": [
      "Bass"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "FinalClip",
    "description": "one stage of ADClip8 set up to clip +6dB for Final Cut Pro",
    "tags": [
      "Latest"
    ],
    "slug": "finalclip",
    "short_description": "one stage of ADClip8 set up to clip +6dB for Final Cut Pro",
    "full_description": "If you like ADClip8, this came first and is basically the seed of ADClip8.\n\nFinalClip is a few variations on ClipOnly2, with a bit of slew clipping thrown in, and adjusted to work specifically for Final Cut Pro, the video software I use. This is because if I put any normal clipper such as you'd use in a DAW into Final Cut, it applies the clip to the cut at 6dB down. I can only assume this has to do with how it gain stages stuff for video. There's a way to gather clips into some sort of large composite clip and apply a 'master buss' plugin to the sum, and if you thought Airwindows Console in DAWs was awkward to set up, yikes! I'm not even trying to do that. I just run camera audio directly to the output of Final Cut and use that.\n\nBecause the clip point is 6 dB down, it seemed like I could build a special clipper just for Final Cut, that would always apply what I needed. I could control loud voice outbursts, soften the entry to/exit from clipped parts in the way ClipOnly2 does, and I could even throw in a very subtle slew-clip to just faintly soften treble information, so my sibilance off my Roswell Colares would never be annoying (it's pretty good already, the mic tries to imitate an ELA M 251)\n\nNot only did this work, it turned out that allowing multiple stages of exactly this gave me ADClip8! So everybody wins.\n\nAnd of course I'm immediately letting people have the tool I made for me. If you experience normal clippers such as ClipOnly taking effect 6dB down, this is the one to use. Or, if for instance you're hammering a peak limiter on your mix buss at way over +6dB to the buss, then you can try this to precondition what the limiter sees, and you might get a pleasing result.\n\nBut really, this just exists as a tool for me, or anyone who's using Final Cut and would like to drag a simple Airwindows clipper onto a (video) clip in the timeline, and have it make peaks more elegant, with no red clip lights happening and no abrasive highs when things get loud. Using this, I don't have to be that careful of my dynamic levels recording. If I suddenly yelp or talk loudly, clipping the camera's recording, this plugin will straighten it out and smooth off the corners just a bit so the loud bit isn't too objectionable.\n\nSince there's next to nothing to say about this plugin, nothing to do (no controls) and nothing to show (in a DAW, the interface is a blank rectangle or an empty line), the video's full of everything else I do to get the audio for my plugin-posting videos. If you'd like to see my setup, have at it. Otherwise, totally ignore it and just use the plugin :)",
    "categories": [
      "Clipping"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "FireAmp",
    "description": "a bright, loud, tubey amp sim for leads and dirt guitar",
    "tags": [
      "Latest"
    ],
    "slug": "fireamp",
    "short_description": "a bright, loud, tubey amp sim for leads and dirt guitar",
    "full_description": "FireAmp is sort of Marshally, compared to the other Airwindows amp sims. It is midrangey and doesn't give very heavy bass or chug, but it's got a characteristic high-mid tone and would work well for some kinds of guitars/tracks, or as layering to bring more of its quality to a larger mix.\n\nFireAmp\u2019s the first in a set of old/new plugins I\u2019m doing. They\u2019re the opposite of your usual guitar plugin arsenal: no multi-effects, no squishy thick tone color, barely even settings. FireAmp is ONE tone, that aligns with some kinds of things I like to do with guitars. It sits in the mix like a classic rock track: you\u2019re hearing it with a set of retro tones that blend with FireAmp (in fact, the bass is a Rickenbacker, and the neck pickup\u2019s through another upcoming Airwindows amp sim but the bridge pickup is also through FireAmp).\n\nIf you want to get freaky with it and want a tone stack, you might try putting ZNotch in front of it, or MackEQ\u2026 your tone stack doesn\u2019t HAVE to be part of the amp sim plugin. Just sayin\u2019.\n\nIt runs zero latency so you can track through it. It\u2019s loud, bright and sonorous, raw as hell, high impact, no gloss or glitz. Even if it\u2019s not your pet sound you might find a use for FireAmp on layered guitars or other sounds\u2026 and unlike the original, it has undersampled FireCab built in for its matched tone, and it has a sophisticated dry/wet control that begins giving you raw amp AND raw signal to provide a range of more open tonalities through the high gain amp sim madness. This makes it an interesting choice for dirtying up non-guitar signals: the dry/wet will let you tailor that in interesting ways.\n\nI hope you like it. There\u2019s more to come, all of them just as quirky and one-trick pony as FireAmp. Back in the day, I liked to alternate real miked guitar amp usage, with stuff like the Rockman, to get different textures. FireAmp is one such different texture, and you never can tell when it might be useful :)",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Flipity",
    "description": "a channel phase flipper/swapper utility",
    "tags": [
      "Latest"
    ],
    "slug": "flipity",
    "short_description": "a channel phase flipper/swapper utility",
    "full_description": "This is per a request. Someone asked for a plugin to flip the phase of the left channel :) well, how about flip the phase of the left or the right channel? Or the phase of the left AND the right channel? Or swap the channels, L for R, R for L? Or, swap the channels and then flip the phase of what is now the left channel? Or swap the channels and then flip the phase of what is now the right channel? Or flip both?\n\nThat's Flipity. Utility plugin that apparently isn't available on some DAWs. Fair enough then :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Flutter",
    "description": "the flutter from ToTape6, standalone",
    "tags": [],
    "slug": "flutter",
    "short_description": "the flutter from ToTape6, standalone",
    "full_description": "This is by request. Sometimes you want stuff to go a little unsteady and wobbly, but you don't want a full-on tape emulation with, like, dubly and everything. (you don't do heavy metal in dubly, you know.) And so, here is Flutter, standalone!\n\nThis is a tricky little algorithm, so let me give some details on what's happening here. It's not a vibrato, or even particularly random. Flutter gets its rate of waver, from the input signal coming in. This probably means that if you put a test tone in, you get a regular warble\u2026 or maybe even some awkward noise\u2026 out. The reason it does this is to react to the input waveform more directly. I realize the input waveform doesn't directly modsulate tape flutter, but this does, so there you go.\n\nIn practice, you get a flutter/warble that stays pretty subtle right up to when it doesn't. Push it far enough and you get aggressive flutter. Dial it back and it quickly becomes more well-behaved, but it's still functioning and can do a nice job of destabilizing pitch in a tapelike way. A side effect of this quirky approach is that it runs with low enough (but NOT zero) latency that you can use it on a live instrument. You can sneak it onto a delay send, or reverb send, to give yourself just a little spread and layering to what otherwise sounds digitally flat and flawless. Or you can sit it on regular tracks and just go for that very subtle mulch-tone of old school retro, and use other means to dirty the sound up.\n\nSometimes it's handy to be able to take something ultra-pure, like a bell or electric piano, and destabilize it without any tonal adjustment at all. Retain the chime but add that bit of drift. I hope you like Flutter.",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Flutter2",
    "description": "the flutter from ToTape7, standalone",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "flutter2",
    "short_description": "the flutter from ToTape7, standalone",
    "full_description": "It's time for a new ToTape (actively being worked on, and yes you're still getting more reverbs and ConsoleX and all that) and it turns out that when I went back in to revise the tape flutter algorithm, live on stream, the work went so well that I COULD NOT WAIT. I was basically looking to address how, in the original Flutter, it slows as well as becoming gentler when you turn it down, and I thought that for 2024 ToTape7 it might be worth bringing in extra controls just to give people more power over their flutter effect.\n\nAnd then when I improved the algorithm and discovered that, cranked up, it does everything from shortwave radio impressions to Cookie Monsterification, that was exciting.\n\nBut not as exciting as when I learned that if you crank it way up and make the flutterspeed REALLY slow, you get a heavy guitar doubler. Suddenly, I had a really decent fake hard-panned, still weirdly tight, doubled guitar that sounded fantastic apart from occasionally (and understandably) going mono on me.\n\nEnjoy Flutter2, it's going to be in the new ToTape7 when that's done. It means you have everything from reel-to-reel (less flutter than 0.5 for that), to cassette, to Roland Space Echo, to VHS, to cassette that's been yanked out of the shell and jumped up and down on for a bit and put back and attempted to be played.\n\nAlso, here's my tip: rather than track one guitar and try to make it two with Flutter2, have you considered tracking three guitars and trying to make it five? If you do two real doubletracks, and then one 'thickener' to put in the center, and THEN add Flutter2 to that center track and use the dry/wet control, you can very definitely mimic FIVE guitar tracks for the price of three, and if center/flutter2 is slightly quieter it won't stick out that much when Flutter starts to hint at mono occasionally, because there's meant to be a mono track. You can lean on the Flutter2 a bit harder if you want to go superwide.\n\nOh, which reminds me, there's also a new Srsly coming\u2026 but more on that later. Enjoy Flutter2 :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Fracture",
    "description": "a frequency multiplier/waveshaper with a soft disruption to the sound",
    "tags": [],
    "slug": "fracture",
    "short_description": "a frequency multiplier/waveshaper with a soft disruption to the sound",
    "full_description": "Fracture is straight up a West Coast wavefolder, in a plugin. My original description doesn't help explain that too much: it is a sine-based distortion that wraps around and lets you set a maximum 'fold' which becomes a hard clip. Boost into it with Drive to do more intense wavefolding, and increase Fracture to allow you to fold more times before it just clips. This also allows you to clip either at full crank, or at silence (for a different effect). Original post was simply this:\n\nHi! Merry Xmas to Xmas-ers. Here\u2019s a truly freaky little wave-shaper. It\u2019s of interest to distortion fanciers, those who make wubs and things, and anybody who might like the digital equivalent of an insane boutique stompbox that doesn\u2019t sound like anything else.",
    "categories": [
      "Effects"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Fracture2",
    "description": "a wavefolder that allows more extreme disruption",
    "tags": [
      "Latest"
    ],
    "slug": "fracture2",
    "short_description": "a wavefolder that allows more extreme disruption",
    "full_description": "Fracture2 is straight up a West Coast wavefolder, in a plugin. You've got Drive, Fracture, Threshold, Output and Dry/Wet controls. Drive is basically overdrive like in Mackity, and you can get unity gain at a setting of 0.1, and Output and Dry/Wet are what you'd expect.\n\nFracture makes the signal go exponential before folding. What this means is, if it's at zero you'll get a simple wavefold. With a sine, that'll create a distinct overtone (stronger than the original Fracture) which will slow down as it nears the top, then reverse. As you increase Fracture, the pitch of the wavefold increases because the wave you feed in will start folding faster and faster the more it folds: it will also open up the unfolded part of the wave, making it more dynamic. On non-tonal sounds, this makes the effect dryer and punchier and more aggressive.\n\nThreshold is by request from a fan who asked in Youtube comments, and whom I've got some things in common with. The idea is basically, can you make the folding part only take up a certain amount of space, like back to the zero point but not past? Turns out you can! And what this does is, it lets you have a volume control on the fold part. So, at zero threshold, you have a soft clip (or, with Fracture, a weird expando-clip like High Impact). As you increase it, the wavefold comes out of the clipping, expanding down (or up) from the flat-top of the wave, with 0.5 going to the center of the waveform and 1.0 doing a full-amplitude wavefold.\n\nBecause this effect lends itself to the Rack port of my plugins (where you can feed audio rates into any controls), all the controls except Fracture are smoothed for better automation. I don't do this all the time, but it just seems to be the kind of effect where you might be sending sine waves into it (revealing zipper noises) and then modulating it like crazy, so it's using the same smoothing that's in the Z2-series filters.\n\nHope you like it!",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "FromTape",
    "description": "a minimalist, cleaner analog tape emulation",
    "tags": [],
    "slug": "fromtape",
    "short_description": "a minimalist, cleaner analog tape emulation",
    "full_description": "Here\u2019s something more\u2026 refined.\n\nFromTape was originally conceived as a \u2018bump-less\u2019 ToTape. It appeared with the original ToTape, and then with ToTape3, as a stripped-down version without the head bump, intended as very much the same thing but less bass. In some ways that\u2019s still true.\n\nBut, as ToTape grew to version 5, it developed many unusual traits. There was always that untameable head bump code, and its desire to throw DC everywhere (ToTape\u2019s head bump literally doesn\u2019t want to settle on 0, it wants to be either a positive or negative offset voltage by preference). There was the flutter. There was the built-in highpass, coded in a curious way to get a resonant quality around the corner frequency without any actual resonance applied. ToTape grew into a rich and strange effect, with many curious qualities and many fervent fans. And it\u2019s out.\n\nAnd then there was FromTape.\n\nThis FromTape draws on what I\u2019d learned from the Purest plugins. It\u2019s like no previous FromTape: elements have been rearranged, deleted, rethought until it became just this: the \u2018unusual\u2019 highpass (which accumulates tiny alterations in a buffer and then applies them in a single add for purity reasons) and THEN the Softer control, accentuated, but ONLY the Softer code and not the \u2018Airwindows saturation\u2019 that\u2019s a major part of ToTape and allows for the \u2018tape drive\u2019 and saturation effects. The highpass is called \u2018Weight\u2019 and wired backwards so as you increase it, more bass comes out.\n\nSo, this new FromTape does the very transparent treble softening, but has no real \u2018distortion level\u2019 because it has no distortion outside of Softer. It has the highpass (over a far broader range, and adjustable) but not the head bump the highpass was designed to handle. Instead of going after the other effects, the highpass goes first, and then the Softer works on the output of that.\n\nIt\u2019s capable of clipping to a set level only if Soften is cranked totally, and then it\u2019s not a good sound (still available, though, in case you want it). Anything else will let peaks through largely undiminished. The highpass cuts bass, but in such a way that clean unclipped bass pre-FromTape might well turn into over 0dB output after FromTape: it cuts the bass in such a way that it might end up 3dB louder. Go figure, use the output level control to buffer it. Rather than loudenating stuff by \u2018slamming it with tape saturation\u2019 it\u2019s more likely to reshape the tonality of the sound so it sounds quieter for whatever peak level you\u2019re reaching.\n\nIt sounds amazing. It\u2019s also way more CPU-efficient than ToTape, and eats much less in terms of delay buffers and things. You could use it everywhere, certainly on channels where ToTape would be too heavy, but even on channels plus the 2-buss. You could use it in mastering if you wanted to soften digital edge while retaining total clarity, or if you wanted to take an overlimited mix and make the bass rounder and more open, giving a little crest factor back.\n\nI got lucky. FromTape sounds amazing, it really came together in a surprising way. You might like the added thickness and fullness of ToTape, or the bells and whistles, but if you want to call FromTape superior, you won\u2019t be seeing an argument from me. Surprise! This might be your new best tape plugin, especially if you like subtlety and have ears like a bat.",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Galactic",
    "description": "a super-reverb designed specially for pads and space ambient",
    "tags": [
      "Basic",
      "Recommended"
    ],
    "slug": "galactic",
    "short_description": "a super-reverb designed specially for pads and space ambient",
    "full_description": "Been working on this for a while on Monday coding-streams! Galactic is an extension of my Verbity reverb, designed for ultimate deep space ambient music. It\u2019s a combination feedback and feedforward reverb designed to make wide stereo verb-spaces out of anything, even mono test tones if you like.\n\nIt takes in audio (dry/wet control available) and uses the Replace control to determine how much of the new sound coming in should replace the space that\u2019s currently there. Detune shifts the pitch for both channels (in a quadrature pitch shift arrangement that means maximum widening for each sound) and Brightness controls both the brightness going into, and coming out of, the reverb. Replace, Brightness and Detune are designed to be playable on the fly to make your ambient spaces or evolve them. Bigness is the reverb buffers, so you can still alter that but it will make crashing noises when you do (that will then become more infinite spaces).\n\nI think this one is really fun! As you can see it fits with my experimental-music aesthetic (didn\u2019t even have to add Srsly2 on the end of it to make it superwide\u2026 though of course I could, and so can you). If you\u2019re not quite that abstract, you can still use it on pads for more normal things. Just set Replace to a lot higher, set the Brightness and Bigness appropriately, and use Detune to chorus out your new huge enormous synth pad, or whatever else needs to have an unreasonably huge and wide stereo field. I\u2019m pretty sure this can become your go-to for epic fields of reverb, no matter what\u2019s meant to be causing them.",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Galactic2",
    "description": "a super-reverb REdesigned specially for pads and space ambient",
    "tags": [
      "Latest"
    ],
    "slug": "galactic2",
    "short_description": "a super-reverb REdesigned specially for pads and space ambient",
    "full_description": "Galactic has been a huge success, no pun intended. It might be the most popular of my first batch of feedforward reverbs, and it's still available, from its banks of 4-wide householder matrix delay lines, to its pitch shift stereo widening.\n\nSo, why revisit Galactic? What is there to even improve? Well, it's a matter of taste. My newer big reverbs and realistic reverbs go for a bigger reverb matrix with a distinct, more organic texture to it. And I wasn't really satisfied with how you worked with Galactic: I'd imagined a thing where you'd have reverb space going, and then you'd 'paint' in other sound, perhaps with a slider, or just by overloading the existing space with other stuff.\n\nAnd so, here we are. Galactic2. Drive, Sustain, Darken and Wetness. And a tone that owes more to the K series plate reverbs, than Infinity or Verbity. Sustain starts to feed back forever a little ways past two-thirds up, with halfway being long decays, and very short sustain being your kill switch. It'll creep up in gain at full crank, so be careful with that. Drive is how you feed in new audio while it's going, Wetness is probably going to be full crank for most use cases, and Darken goes from totally, scintillatingly bright to mellow and distant-sounding, both as part of the total output of the reverb, and as part of the feedback loop (so if you have bright stuff going, and you Darken, your sustain will start to get darker as it continues, which can add realism).\n\nI keep saying it's like the kPlate reverbs, but I checked the code and it's still 4-wide Householder matrixes, like the original. So what makes this so different? Its handling of stereo, is what. Either you'll love or hate it. This is why you should love it. Unlike the original Galactic, this isn't a pair of matched reverbs using pitch bends to stereo-ize them for mono things. Galactic2 is a SINGLE giant stereo reverb that uses all the same delay values, but uses them crossways: one channel accesses the matrix vertically, the other accesses the matrix horizontally. It's 'the same', but all the echoes are arranged differently. These are way harder to come up with but it's what was used on the kPlate reverbs, except those are 5x5 matrixes and this is still a 4x4. There's just a teeny bit of crossmodulation to round it out.\n\nWhat this means is, if you put stuff in the left, it makes a sort of cloud of reverb sound that's also mostly on the left. If you put stuff in on the right, likewise: you'll get 'space' happening mix right.\n\nAnd if you put stuff in mono\u2026 you get WIDE center content. The whole texture is wider than what original Galactic can do, without use of chorusing or pitch shifting to widen it. That gives it a completely different character, which is why you've still got original Galactic to use if you want. This is a second bite of the apple. It's about trying to get even deeper into space, and I hope you enjoy it :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Galactic3",
    "description": "exactly Galactic again, but with better undersampling",
    "tags": [
      "Latest"
    ],
    "slug": "galactic3",
    "short_description": "exactly Galactic again, but with better undersampling",
    "full_description": "This is always a bit tricky: I try to revisit my biggest hits and make them better. The last time I did that with Galactic, not only was it merely different, it had a bug that Galactic doesn't have: four variables that didn't get initialized properly. Galactic2 is now fixed and presumably bugless, and is still just 'different', a variation on what Galactic does.\n\nGalactic3 is straight up better. Because it's exactly Galactic again\u2026 but instead of the linear interpolation it used to use (like CrunchCoat) for high sample rates, it's now using my new Bezier curve technique to interpolate, like kCathedral3 and CreamCoat.\n\nFirst, that means it should have better tone at high sample rates. Second, in theory it should gracefully handle even really outrageous sample rates (Galactic will eventually start scaling the verb space down in size, Galactic3 won't). But most importantly, that means you have a Derez control like CreamCoat, except on the reverb engine of Galactic. So you have exactly the sounds of Galactic, but you can further undersample them for a cool 'reduce sample rate' effect\u2026 and in doing so, increase the reverb space in size. How much? To unreasonable size: galaxy-sized.\n\nTo use the new tone with the same apparent room size, decrease Bigness until the giant space is back to what you want again.\n\nGalactic3 takes in audio (dry/wet control available) and uses the Replace control to determine how much of the new sound coming in should replace the space that\u2019s currently there. Detune shifts the pitch for both channels (in a quadrature pitch shift arrangement that means maximum widening for each sound) and Brightness controls both the brightness going into, and coming out of, the reverb. Replace, Brightness and Detune are designed to be playable on the fly to make your ambient spaces or evolve them. Bigness is the reverb buffers, so you can still alter that but it will make crashing noises when you do (that will then become more infinite spaces). And Derez, the new addition, will snap the whole pitch of the reverb space up and down without otherwise glitching it, so in theory it's playable as well.\n\nI think this one is really fun! As you can see it fits with my experimental-music aesthetic (didn\u2019t even have to add Srsly2 on the end of it to make it superwide\u2026 though of course I could, and so can you). If you\u2019re not quite that abstract, you can still use it on pads for more normal things. Just set Replace to a lot higher, set the Brightness and Bigness appropriately, and use Detune to chorus out your new huge enormous synth pad, or whatever else needs to have an unreasonably huge and wide stereo field. I\u2019m pretty sure this can become your go-to for epic fields of reverb, no matter what\u2019s meant to be causing them. And Derez adds darkening abilities beyond the scope of original Galactic. Honestly, I think I finally managed to make it better rather than just different. Let me know what you think :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "GalacticVibe",
    "description": "the stereo vibrato from the original Galactic reverb",
    "tags": [
      "Latest"
    ],
    "slug": "galacticvibe",
    "short_description": "the stereo vibrato from the original Galactic reverb",
    "full_description": "GalacticVibe is about taking the code I used to make the Galactic reverb super wide, and breaking it out into a chorus-like effect\u2026 at which it turns out to be great!\n\nUsed in Galactic, it's always full wet. It's a dual vibrato that's 'quadrature', meaning the channels are two different offsets on the same LFO. Except it's not exactly an LFO in the sense of low frequency oscillator, because it's slightly irregular. You don't hear it as being super off, but it's a somewhat organic quality whatever speed you choose.\n\nThis produces two stereo outputs (even if you're just giving it mono) and the way they modulate is a bit like a miked-up Leslie: the pitch wavers across both channels. But then, if you add dry (which isn't part of Galactic's modulation) that blends against both stereo channels\u2026 and you end up with a nice little vibey chorus, with definite Leslie-like qualities, but without any of the speaker emulation and without an accurate pitch modulation on what would be the treble horns (instead, it's something else, a little smoother).\n\nSo it turns out the modulation inside Galactic (Galactic2 is different) is quite nice just by itself! In particular, it seems very nice giving slow swirly effects, and ramping up to a quicker speed has a really striking 'leslie, but not leslie' quality. A happy accident that is now yours, because this is an open source, free plugin, so enjoy adding this tool to your stereo toolkit.\n\nAll this is paid for by my Patreon, and the better that does the more I can do with it: as promised, the Bricasti reverb is here. Like I said I am not going to make a clone, but I am certain I can both get some useful k-series reverbs inspired by classic Bricasti patches, and design future reverb algorithms that incorporate more Bricast-isms, just from being able to hear it properly and make use of it in the studio. There's also the new Console versions coming along, currently in study mode as I explore a world of classic vinyl records heard in the fullest fidelity, and develop channel EQs that will go along with the new Console versions.\n\nThanks, and hope you like GalacticVibe!",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Gatelope",
    "description": "a special gate that applies filters",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "gatelope",
    "short_description": "a special gate that applies filters",
    "full_description": "Gatelope was initially developed for Ola Sonmark, to solve the following problem: can you gate a tom mic in such a way that it rejects cymbal bleed, but lets the lows sustain longer, and then transitions into silence gracefully?\n\nIt just so happens that in developing that, I also wanted to do the opposite: reject low frequency rumble and sustain the highs more. I thought it might be useful for tightening up spot mics on kick drums. And the result\u2026 does both those things, and anywhere in between, and various other effects besides. It\u2019s existed as a secret, Mac-only, AU-only weapon for long enough. I didn\u2019t want to wait any longer, so enjoy Gatelope now (the Mac AU build contains an extra plugin, Gatelinked, which works like the VSTs: Gatelope in AU is \u2018N to N\u2019 and meant to be used on mono tracks, and the VSTs and Gatelinked are exactly the same, but linked stereo to prevent the stereo image from going to the side randomly)\n\nThe way to use Gatelope is, find the proper gating threshold with the top slider. Attack Speed might help depending on where you find that point. Then, Treble Sustain and Bass Sustain can be reduced to let the gate start gating. If you reduce Treble Sustain, it will be opening fully on an attack and then rolling off the treble as it closes. If you reduce Bass Sustain, it'll be rolling off bass as it closes. When these two roll-offs sweep past each other, your signal is gated and quiet: use the dry/wet to make the effect be at a lower ratio and let through some natural sound.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "GoldenSlew",
    "description": "a multistage slew clipper based on the Golden Ratio",
    "tags": [],
    "slug": "goldenslew",
    "short_description": "a multistage slew clipper based on the Golden Ratio",
    "full_description": "Slew clipping is a fairly uncommon effect: it takes the bright off sounds, but replaces it with a distorty edge. You've already got Slew to do slew clipping with, and if you like Channel part of what you like is its built-in slew clipping\u2026 but what if you could expand on what slew clipping does?\n\nGoldenSlew is a chain of slew clippers becoming increasingly restrictive as they go, each one scaled by a factor related to the Golden Ratio (if it was applied to the 'slew' control). You would think this would produce a simple result: the sound would always be restricted to the smallest amount in the chain, and it'd sound just like Slew.\n\nExcept it SO doesn't\u2026 because each new value's working from what the previous one was clipped to. And so, when you apply slew clipping as a chain, you get a completely different effect. And what it sounds like\u2026 is distant, roaring, big, loud, powerful in a way you just don't get from slew clipping alone.\n\nBe warned: for this plugin, like Slew, if you have audio going through it and you crank the slew clipping ALL the way to 1.0, what you're telling it is 'stop slewing completely, don't budge' which means sample and hold which means you're stuck on a DC voltage. There are reasons why you might do this, for instance if you're in VCV Rack and using it on a control voltage and you want to do sample and hold on that voltage. Don't crank it up to 1.0 on audio signals or you might hurt your speakers if they're DC coupled.\n\nThis is one of a series of plugins starting with Slew and continuing with GoldenSlew, where they're refinements of a tone I like using for analog emulation. When used for that, you typically want to keep the setting fairly low, less than 0.5 certainly. It's for controlling the digital-ness of the highs without apparently making them quieter: remember this is a clipper, not an EQ, and it'll kick in only on LOUD treble. There will be more explorations of this concept because I'll need a really good test-bed to use for when I start dialing in sounds of actual classic analog consoles: it's not just the maximum restriction of slew (like in the Channel plugins), it's about the sound character as we hit that limit.\n\nYou can use GoldenSlew on things like drums, final mixes: anywhere you want the effect of extreme loudness, but don't want the treble coming forward and poking at you. Hope you like GoldenSlew!",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "GrindAmp",
    "description": "a heavier amp sim for many purposes",
    "tags": [
      "Latest"
    ],
    "slug": "grindamp",
    "short_description": "a heavier amp sim for many purposes",
    "full_description": "GrindAmp gives sort of a Mesa-y tone, and is good for chugging guitars with some beef to them.\n\nGrindAmp is a followup to FireAmp, and you\u2019ll hear them back-to-back in the video. And where FireAmp is all about that midrange howl and rawness, GrindAmp is a different style: heavier! Thing is, you must understand how these work. They\u2019re distortions voiced to work with guitars, into filtering and truncated, undersampled cab emulation that has dynamic processing. When I say truncated I mean it: there\u2019s very little cabinet rumble or any over-hang beyond the immediate sound. Also, the dry/wet control both brings in dry AMP sound against the cab sim, and also dry guitar sound against the amp sim\u2026 at the same time.\n\nSo GrindAmp is every bit as much designed for a Rockman-type, extremely direct and dry tone, as it is for an amped, miked tone. It\u2019s sort of a hybrid. Why would you ever do this? For the same reason Def Leppard used Rockmans on Hysteria: you can use this kind of tone to bring in a part without getting in the way of everything else. You can arrange with whole instruments, bringing in stuff to emphasize certain qualities. If you used FireAmp you\u2019d be bringing in extremely raucous midrange, if you use GrindAmp you have a lot more low-end punch and the ability to push the gain a bit higher (though I think it\u2019s at its best when you\u2019re allowing it to be kinda percussive)\n\nNeither of these have chorusing and delay/reverb\u2026 but hey! I\u2019ve been putting out plugins that do that, and I bet Chamber will do the slapback thing on a guitar very well, and there\u2019s always PocketVerbs Spring: Airwindows plugins are deeply modular and you already have literally hundreds of them so if you wanted to go full Rockman with GrindAmp (or FireAmp: more to come) then nothing\u2019s stopping you. And they\u2019re free, so nothing is stopping you. And they\u2019re open source, so if you really really REALLY wanted to build them into one plugin\u2026 amazingly, you can! Or you can let me make \u2019em for you :)",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Gringer",
    "description": "a full-wave rectifier plugin, like a Green Ringer guitar effect",
    "tags": [
      "Latest"
    ],
    "slug": "gringer",
    "short_description": "a full-wave rectifier plugin, like a Green Ringer guitar effect",
    "full_description": "Here\u2019s another no-controls wonder\u2026 that \u2018models\u2019 an actual obscure guitar effect that also has no controls! And it makes horrible unmusical noises, just like the original obscure effect makes horrible unmusical noises! Whee!\n\nSeriously, though, here\u2019s Gringer. It\u2019s like an emulation of the old Dan Armstrong Green Ringer, kinda. No attempt was made to exactly circuit model anything, but it does the full-wave rectification thing that characterizes this effect, you can bypass it by bypassing the plugin, and it\u2019s got a couple of biquad bandpasses (with VERY wide bandwidth) to mimic having analog circuitry and DC-blocking capacitors on input and output.\n\nStick it on your guitar solo and see what you get. Please don\u2019t stick it on your mastering console. No good will come of that.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "GrooveWear",
    "description": "for scrubbing highs off mechanically like a stylus would",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "groovewear",
    "short_description": "for scrubbing highs off mechanically like a stylus would",
    "full_description": "Here\u2019s something interesting! I revisited some pieces of ToVinyl4, one of \u2019em being GrooveWear. In fiddling with it, I discovered that I could put in a dedicated wet/dry for just that one part, and if I did, I got perfect high-frequency rolloff at 50%. In other words, as an effect it was working as intended (bit of overshoot available, like the needle was loose in the groove), but I could also redesign it as a tone-softener.\n\nIt\u2019s all based on variations of averaging. I\u2019ve got Average to soften just only sample values (it has some interesting quirks but I swear by that algorithm for naturally rolling off highs in a way that doesn\u2019t sound digital). GrooveWear goes one step beyond that, and averages slews (not sample values). That means it\u2019s averaging the rate of change. Then, later, I did Aura, which is averaging the rate of change OF the rate of change\u2026 but that\u2019s another story ;)\n\nMore importantly, I came up with a nice feature doing the revision. The GrooveWear contained in ToVinyl uses two stages of processing, since it can be a subtle effect. I worked out a convenient way to make the dry/wet control handle multiple stages so, as you increase it, you\u2019re progressively adding stage after stage with the final stage going from dry to wet: it means you can start off with a very mathematically clean amount of effect, just one stage dry/wet, and then keep adding more. And in the spirit of that, I doubled the stages so now GrooveWear has four.\n\nSo, you can adjust the intensity control that specifies how much slew averaging the stages are doing (acts like a sort of frequency range control for the effect) or you can adjust the dry/wet to go from pristine to incredibly deep groove wear. It\u2019s partly roll-off of the highs but it\u2019s not JUST normal EQ, texturally it\u2019s quite different because the effect doesn\u2019t try to stop big transients like a square-wave\u2019s sides, it tries to stop smaller-scale detail stuff while retaining the big harmonic content of waves. It\u2019s averaging slew, not deleting it, so certain waveforms get through untouched\u2026 you\u2019ll see.\n\n(Followup: this technique of stepping through wet/dry stages was also used for the Z series filters)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "GuitarConditioner",
    "description": "like a Tube Screamer voicing without the squishiness and indistinctness",
    "tags": [
      "Latest"
    ],
    "slug": "guitarconditioner",
    "short_description": "like a Tube Screamer voicing without the squishiness and indistinctness",
    "full_description": "I designed this plugin when I saw what Slew was capable of. It uses a combination of Slew and Highpass in a sort of parallel matrix arrangement, with heavy use of my Highpass\u2019s unusual tone shaping features (extreme lows get Tight tone shaping behavior, and a boosted mids circuit is set to Loose rolloff for the proper texture). Both aspects hit their own Slew at different levels and with different voicings, causing a distinct tone quality.\n\nThis is not a Tube Screamer plugin at all. It\u2019s an alternate tone for doing similar things but with more sonority, focus and impact. It\u2019s intended for Djent style sounds and people who can play much, much better and more aggressively than me :)\n\nThe reason Slew is relevant to a Tube Screamer effect is, the guitar pedal uses op-amps that can be limited in their ability to deliver slew and bass. Therefore, they don't only distort and make louder, they also restrict treble and bass in a nonlinear way, and that's the same thing my Slew effect does. So Guitar Conditioner is Airwindows techniques addressing the same purpose.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "HardVacuum",
    "description": "tube style saturation effects",
    "tags": [
      "Latest"
    ],
    "slug": "hardvacuum",
    "short_description": "tube style saturation effects",
    "full_description": "Time to revisit an Airwindows classic!\n\nThis is one of the plugins Airwindows \u2018made its bones\u2019 on, brought up to date and converted to VST for Mac, Windows and Linux (and made open source!)\n\nHard Vacuum refers to vacuum tubes, and as you\u2019d expect it\u2019s a saturation device but with some interesting twists. It\u2019s got a warmth control that brings in second harmonic and nonlinearity like you might see in a class A tube design, but set up to be abused if you\u2019d like to produce exaggerated effects (that aren\u2019t really \u2018warm\u2019 anymore, but if you want to play nice, don\u2019t push this control too far). It\u2019s got a nice Airwindows sine-based saturation curve\u2026 and it\u2019s got a control called Aura that will bring out sparkly highs and hot searing overtones you might not have heard from a plugin before.\n\nThe way that one works is thus: I saw scope traces of tube circuits that were showing slanty tops on squarewaves, like the power supplies weren\u2019t keeping up. It became an obsession to make plugin saturation do that, and I came up with something that turned into Aura. Note that this is NOT \u2018analog modeling\u2019, not as people normally mean it: I\u2019m rarely interested in running hapless audio through lots of math pretending to be electronic parts. I generally want a simple, unexpected algorithm that\u2019ll do what I intend with minimal unnecessary math, because I find that overprocessing digital audio hurts the tone.\n\nAs such, Aura doesn\u2019t model any specific tube. You could probably combine it with Desk4 and who knows what else, to make a really good emulation given decent reference material, but Aura is simply a way to doctor the tone in a way that\u2019s not EQ. By that I mean, the effect might lift up highs but it\u2019s not working in terms of frequency zones, it sees only the amplitude of any given moment and the angle by which it reached that moment. Think of it as an extra thing you can do to the sound. This one\u2019s sat around being Mac AU only for ten years before getting brought up to date (with denormalization fixes, noise shaping to the floating point buss, etc) and ported to VST, so now most of you can join in the fun.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Hermepass",
    "description": "a mastering highpass to set by ear only",
    "tags": [
      "Latest"
    ],
    "slug": "hermepass",
    "short_description": "a mastering highpass to set by ear only",
    "full_description": "This is specially by request from Gregg of Hermetech Mastering: it\u2019s my try at a specific plugin he wanted. He wasn\u2019t able to find a fantastic-sounding highpass with JUST a frequency control and slope, no bling, no other stuff, as small as possible.\n\nThis is of course right up my alley :)\n\nAll the more when he responded warmly to my idea of having both the cutoff and slope have NO LABELING to guide you: just 0-1 sliders. You have to listen. That\u2019s the whole point, and I delighted in taking it that one stage further.\n\nTwo stages further, because I worked out how to make the slope control continuous. It uses up to six poles (staggered, an idea that Gregg and I independently came up with: it\u2019s present in my ToVinyl2 and ToVinyl3) but as each pole is added it gets its own little dry/wet internally, so you can have two and a half or four and a third poles. Smooth continuous adjustment of how many poles (and how steep the slope), much like my bit-crusher has continuous sample rate crush and bit depth crush.\n\nThree stages since it uses Airwindows interleaved IIR filtering for the very first stage to start off at a slope even shallower than one pole of IIR: sort of \u2018half a pole of filtering\u2019 to start off.\n\nThe controls are set up to give useful results around the middle of their travel. I\u2019m not sure exactly how many poles that is, or what frequency: use your ears, says me and Gregg (for whom I made this). I do know that depending on how you set it, the transparent cutting of extreme low frequencies WILL give rise to higher peaks, so either gain stage it or use limiting or clipping. This plugin is not a loudenator. It\u2019s a tone shaper, for retaining every possible bit of tonality while reshaping the extreme lows to trim the lowest frequencies: it\u2019s sound balancing, not \u2018make louder-ing\u2019.",
    "categories": [
      "Bass"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "HermeTrim",
    "description": "Very Fine Adjustments, otherwise just like EveryTrim",
    "tags": [
      "Latest"
    ],
    "slug": "hermetrim",
    "short_description": "Very Fine Adjustments, otherwise just like EveryTrim",
    "full_description": "If you\u2019ve seen EveryTrim, you know how this works: it\u2019s the all-possible-trims trim. +- 12dB of left, right, mid, side, and master volume. By request, and a handy little tool for all manner of stereo tweaking. It\u2019s very nearly as clear and accurate as PurestGain, which itself is very nearly as accurate as BitShiftGain (and most people will find any of these more than acceptable, because this is uber-pickiness land and none of you are likely to be able to tell these from your standard utility gain plugin from your DAW, ten out of ten. I just know I\u2019ve implemented mine with extra rigorousness)\n\nThing is, the person who\u2019d requested this is the same one who requested Hermepass\u2026 and in this case, I fumbled it a bit. On many DAWs, and all my Mac Audio Unit stuff, you can hold option to get tiny fine adjustments. But my user with the enlightening (and accessible) requests isn\u2019t using a host that can do that\u2026 and needed to have much, much finer adjustments on tap.\n\nSo, now Hermepass has a companion, HermeTrim. This is exactly the same as EveryTrim, only it\u2019s 1.5 dB plus and minus. It\u2019s more a mastering tool: make tiny little tweaks to get the master just right. EveryTrim will sound just as good, but this one\u2019s geared towards non-mixing purposes. Hope you like it.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "HighImpact",
    "description": "distorted grit and punch without fatness",
    "tags": [
      "Latest"
    ],
    "slug": "highimpact",
    "short_description": "distorted grit and punch without fatness. This is also another little window into Airwindows history, as this is the point where I began putting out the for-pay plugins for free through Patreon. The post is presented in its entirety as a picture of where I was at on April 9, 2017. By now I have put out more than 300 plugins and I'm still going, but this was when I'd done 47 and all the most sought-after ones were still being held back as goals\u2026 here is the original post",
    "full_description": "Sometimes it\u2019s all in the name.\n\nHigh Impact has been one of the Airwindows secret weapons for a long time. It\u2019s a pretty basic idea: know how Density distorts and makes audio huge and fat, and Drive distorts and doesn\u2019t make stuff as fat? High Impact answers the question, \u2018what if you could distort and not make things fatter AT ALL\u2019.\n\nThis is not EQ I\u2019m talking about, though it can come off like EQ depending on what you feed into it. High Impact combines a distortion and anti-distortion circuit to reshape the transfer function of the audio, as follows: crank it up, and quiet subtle samples aren\u2019t turned up much. Then medium samples are turned up a LOT, and then the loudest samples are distorted and hit a wall past which they can\u2019t go. The result is an obvious distort which doesn\u2019t bloat things. It\u2019s a \u2018dial-a-rasp\u2019, or \u2018dial-a-slam\u2019 for percussive noises, and though the concept is two different kinds of overdrive combined, it\u2019s an Airwindows plugin so it\u2019s not overprocessed, it\u2019s super raw.\n\nThat suits this plugin super well, and that\u2019s why the AU-only High Impact has been a secret weapon for many people for years\u2014and now it\u2019s out for Mac and PC VST.\n\nA word about the \u2018secret weapon\u2019 thing: I hate that. Do as I do, and communicate openly. Airwindows plugins are not preset things that you hide somewhere to add magic sauce to your mixes. They require intention, and there\u2019s no one right way to use them: Airwindows plugins are like if a certain mic modeler you can rent that offers \u2018silky expensive microphone models\u2019 had just a blank ugly faceplate with just one knob, \u2018silky\u2019. And you could use it as a guitar stompbox if you wanted, not even a microphone anymore, and it was no longer connected to a \u2018magic gear item\u2019 so you\u2019d have to ask, \u2018HOW silky does this sound need to be, in my mix?\u2019 because there was no one right answer.\n\nThat\u2019s what Airwindows is like. For High Impact, read \u2018raspy\u2019 or \u2018mean\u2019 or \u2018grindy\u2019, whatever describes the sound for you. Now you\u2019ve got an extra parameter: instead of just bass, treble, loud, soft (or even fat and thin) you\u2019ve got \u2018aggro\u2019 on a knob. That can relate to any bit of audio you\u2019re working with\u2026 and your \u2018secret sauce\u2019 is not the plugin, but your sense of taste (or tastelessness) in using and abusing it. So, don\u2019t keep Airwindows plugins a secret weapon. I hate that. Tell people what you\u2019re using, so I can get more supporters and keep doing all this, on a bigger and bigger scale.\n\nSpeaking of which, I have a Patreon milestone! As of a couple days ago, I hit $600 a month, and I\u2019ve recently changed that to be the point where I start releasing the Kagi catalog! Now, people sometimes bail as the first of the month rolls around (and also I don\u2019t get paid quite the full amount shown). So, it\u2019s possible this milestone will go poof as we reach May, in which case we\u2019re still waiting. BUT, if the dust settles and it\u2019s still over $600 going into May, I will put out Iron Oxide 4 (the second most popular plugin I have EVER made) as free AU/VST!\n\n(oh my God, I look so young in that video o_O )\n\nIf I\u2019m still over $600 when May begins, you get THAT plugin free. My hope is that, as I reach this stage, people get more of an idea of what\u2019s possible out of my Patreon project. All this time, I\u2019ve been putting out more than 47 plugins entirely from the \u2018freebie pile\u2019, and not touching the ones that kept me in business a decade. Now, we start to get into the serious ones, the ones worth $50 to a lot of people. I\u2019ve even drawn up a timeline on the Patreon, showing when each plugin will come out if I stay above $600. (if I clear $1000 they go twice as fast and I\u2019ll revise the timeline accordingly!)\n\nHere\u2019s where things REALLY get interesting. Hang on to your DAWs, because we\u2019re about to go full warp drive :)",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "HighGlossDither",
    "description": "a hybrid between shiny dither and truncation! Unnatural science experiment",
    "tags": [],
    "slug": "highglossdither",
    "short_description": "a hybrid between shiny dither and truncation! Unnatural science experiment",
    "full_description": "Here\u2019s an Airwindows science experiment!\n\nThe idea here was to identify things about truncation that some people (maybe crazy people, but people nonetheless) like, and build them into a dedicated dither. This video includes extensive exploration of truncation, TPDF and flat dithers besides HighGlossDither, so there\u2019s an educational value as well. As for audio value, the important thing to remember is that this one is designed to act like truncation in important ways\u2026 so it\u2019s \u2018broken\u2019 and you shouldn\u2019t use it for naturalistic things, and you probably shouldn\u2019t use it unless you\u2019ve ever chosen truncation instead of dither, on purpose, because you wanted the edgier, crunchier, different-textured sound of truncation for what you were doing.\n\nIf that\u2019s ever you, this is an alternate way to get your sounds.\n\nThe deal with truncation is that it turns the fine details of your mix into a roaring, grunging mess of unnatural noise. The secret of it is, that stuff can act like some horrible sort of parallel compression. It\u2019ll hang onto the tails of notes way longer than it should, and it\u2019ll add intense bit-crusher-like effects to quiet sounds.\n\nHighGlossDither uses a special, more uniform-sounding quadratic residue sequence instead of real randomness to sorta \u2018diffract\u2019 sounds into crunchier versions of themselves, and applies it at a quieter level than true dither. The result is a hybrid between dither and truncation: rather than dropping quietly into a sea of noise, quiet sounds get hyped and distorted, but they still behave a lot more normally than truncated sounds do. You get the crazy tonal hype, but a better approximation of the proper relative volume levels of the sounds. And you get a sort of noise but it\u2019s quieter than TPDF is, and also serves a purpose of interacting with the sounds.\n\nMost people shouldn\u2019t like this. I\u2019m introducing it first to get it out of the way\u2026 but who knows? Maybe you\u2019re looking to bring out the next generation of Finnish forest psy trance, and the last thing you want is for the molecular structure of your music to sound natural. Well, HighGlossDither might be right up your alley! You don\u2019t have to resort to truncation to have the finest details of your audio sounding weird and unreal. Take it up another level, with my blessing.\n\nOr maybe you\u2019d prefer your audio sounding, you know, good. If so, stay tuned :)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Highpass",
    "description": "a time warp, for retro midrangey sounds",
    "tags": [],
    "slug": "highpass",
    "short_description": "a time warp, for retro midrangey sounds",
    "full_description": "These (Lowpass and Highpass) are mixing EQs, not mastering ones (though I\u2019m not the boss of you). They\u2019re complementary: the one is the inverse of the other. However, because of their peculiarities that makes them behave quite differently. What they have in common is they\u2019re interleaved IIR filters, something people don\u2019t normally do. The experiment here has to do with my discovery that digital audio only exists in sets of samples (never just as the isolated sample: the waveform isn\u2019t there, the sample value is only a signpost that the audio is to weave its way around)\n\nThey\u2019ve also got a very unusual parameter, soft/hard or loose/tight, which controls how the IIR filters are fed audio. When you offset it, you get a situation where the cutoff is higher at louder volumes, or at quieter volumes. This is on a sample-by-sample basis so it\u2019s a tone-character modification, subtle but interesting. Loose/tight is just the best way I could describe what\u2019s happening there.\n\nLowpass gives you a treble rolloff (some have joked that I make dozens of treble rolloffs! Yes, but they all sound different) and what\u2019s immediately obvious is, the stuff right up by Nyquist on the threshold of hearing is not rolled off with the rest of the treble. Also, if you only want to cut extreme treble, you can do it with just adjusting the soft/hard control away from the center position. At deeper cut settings, the soft/hard control gives you two different textures (both of which keep a hint of \u2018air\u2019 right up top). The dry/wet control allows you to blend your result. Lowpass gives you big sounds with various colorations and a sparkly gloss that comes from your underlying sound: it\u2019s a big-ifying filter that might suit huge synth pads or orchestral tracks.\n\nHighpass, the inverse of this, gives totally different impressions. The same filter-offset behavior turns into \u2018loose/tight\u2019 and the extreme treble gets stepped on, rather than retained. This makes Highpass take on \u2018classic\u2019 tonalities, particularly with the offset on \u2018loose\u2019, which gives a tubey and softened texture. If you run it full-wet, you\u2019ll get a radical \u2018analogification\u2019, wiping out all extreme lows and the highest highs, and sounding like some small vintage radio at high filter settings. It\u2019s a small-ifying filter that\u2019s also a time warp (with offset on \u2018tight\u2019, you have a transistor radio instead, still retro-sounding!) and all you have to do is dial in your boost area and then balance it with dry/wet to get intense texture shaping that normal EQs can\u2019t come close to delivering.\n\nAgain, these are not mastering EQs unless you face really unusual mastering requirements. They\u2019re mixing tools, and they really do act like different animals so they\u2019re each contained in their own plug. They\u2019ve been around for ages but the revision to VST form has brought them a new level of tonal sophistication plus the very useful dry/wet controls that take them out of \u2018experiment-land\u2019 (they have always been building blocks for plugins such as Guitar Conditioner) and makes them stand alone as useful mix tools.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Highpass2",
    "description": "an unusual-sounding variable-slope highpass filter",
    "tags": [
      "Latest"
    ],
    "slug": "highpass2",
    "short_description": "an unusual-sounding variable-slope highpass filter",
    "full_description": "So, the way the interleaved IIR filters act in Highpass is like this: the harder you filter, the more the filter rolls off the very highest frequencies. That\u2019s because it\u2019s like the inverse of Lowpass2. It\u2019s got the same four poles, the same type of tone doctoring (in this case, loose and tight for what bass remains) but the way to use it might be distinct.\n\nI think it works well for getting a subsonic roll-off (perhaps with the four poles of filtering, like a mini ToVinyl highpass) and then using the Loose option to let the bass move a little more. I found it more difficult to distinguish what the funny-named slider was doing, but it\u2019s still intense on high settings. And it\u2019s great for trapping in high percussion because of the clarity of the passband and the way it rolls off over 20K (or higher, if you\u2019re at higher sample rates).\n\nAnd of course, like Lowpass2, this is here to fix the limitations of the original Highpass on those very same sample rates, going from no filtering to total filtering.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Holt",
    "description": "a synth-like resonant lowpass filter focussed on bass frequencies",
    "tags": [],
    "slug": "holt",
    "short_description": "a synth-like resonant lowpass filter focussed on bass frequencies",
    "full_description": "Holt is a plugin suggested by one of my Q&A livestream regulars, that treads the waters of professional accountancy. The plugin, that is, not the regular. As far as I know.\n\nHow is this? Simple: Holt is a method you can use in Excel for predicting sales figures based on trends. It basically uses two variables each of which chase each other to try and cut through the noise of realworld data and produce useful predictive results. My friend from the livestream thought it might make a lowpass that was more fuzzy in tonality. It did not do that thing.\n\nInstead, I got something like a low-frequency version of Aura: a resonant lowpass like a synth filter with huge control over the extreme lows. I had to do weird things to get it to track fairly consistently over different resonance settings, because the Holt method doesn\u2019t really have anything like that at all: turning it into a synth filter is strictly my deal. So is the multipole arrangement: this thing morphs seamlessly from no poles (dry) to four poles (24 dB per octave) with intense resonance or no resonance at all, based on how you set it.\n\nIt\u2019s got an instance of Spiral built in to save you when you make it squawk, because otherwise it\u2019ll blow up your bassbins and just laugh at you. This sucker is MEAN from the midrange on down. The interesting thing is, if you crank the frequency up it tames itself and reverts immediately to dry again. It ONLY does its madness on the lows, and high frequencies are completely tame and nice. You can use it as a sophisticated and well-behaved lowpass on the upper mids and highs, and it\u2019s totally polite. It\u2019s just when you drop the cutoff frequency down that it explodes in juicy bass.\n\nThere are even several ways to go between that and clean, untouched audio. You can raise the cutoff, or you can use the dry/wet control, OR you can use the poles control (at any resonance setting) to morph it from bassy madness to perfect clarity\u2026 because the poles control is four different dry/wet controls bundled into one. This also means that if you\u2019re using less than one pole of filter, you\u2019re not even running through the other stages: less processing, unless you want it.\n\nIt can act like a DJ \u2018isolator\u2019, it can act like a synth bass lowpass, it can damn near self-resonate, and all from just a couple variables (per pole) that interact strangely. It\u2019s a neat example of extreme simplicity (like the Purest series) producing a striking result. Have fun and I hope you like it.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Holt2",
    "description": "a bass-cab-like resonant lowpass filter",
    "tags": [
      "Latest"
    ],
    "slug": "holt2",
    "short_description": "a bass-cab-like resonant lowpass filter",
    "full_description": "Holt2 extends what I did with Holt, to produce an astonishing effect like Aura for bass.\n\nHow is this? Simple: Holt is a method you can use in Excel for predicting sales figures based on trends. It basically uses two variables each of which chase each other to try and cut through the noise of realworld data and produce useful predictive results. My friend from the livestream thought it might make a lowpass that was more fuzzy in tonality. It did not do that thing.\n\nInstead, I got something like a low-frequency version of Aura: a resonant lowpass like a synth filter with huge control over the extreme lows. I had to do weird things to get it to track fairly consistently over different resonance settings, because the Holt method doesn\u2019t really have anything like that at all: turning it into a synth filter is strictly my deal. So is the multipole arrangement: this thing morphs seamlessly from no poles (dry) to eight poles (48 dB per octave) with intense resonance or no resonance at all, based on how you set it.\n\nThe changes from the original Holt are, it's got more poles of filtering, and no longer has the Spiral soft-clip built in. So, if you're incautious with this it might blow stuff up real good. It won't quite self-resonate but it sure throws out a lot of resonance, which is sometimes just the ticket for making amplike tones out of beefy sounds.\n\nI'm going to be using this as a go-to bass sound, which makes use of DI bass immediately less studio-y. It'll also handle automation nicely (except the Poles control doesn't like to be automated) opening up modern electronic music effects on what might seem like a set-and-forget bass amp. But since there's the dry/wet control, you might also find Holt2 just the ticket for taking guitar sounds (either real or plugin) and throwing thunderous cab weight behind them. Dial in the desired huge rumbling low-end, and then go all dry, crank the output level and sneak in just enough of the super-lows to expand your guitar tone. It might also find other uses: let me know if anything really clicks for you!",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Hombre",
    "description": "atmosphere and texture (through very short delays)",
    "tags": [
      "Latest"
    ],
    "slug": "hombre",
    "short_description": "atmosphere and texture (through very short delays)",
    "full_description": "Once upon a time there was the blues.\n\nNo, let\u2019s be more specific. Once upon a time (and even now!) there was ZZ Top. Brainchild of the Reverend Billy Gibbons, swathed in funk and mystery, serving up juicy grooves from the heart of Texas.\n\nThing is, Rev. Billy tells some tall tales and their engineer of the day, Terry Manning, he don\u2019t talk ATALL.\n\nSo what is a person to do when they hear these albums and the guitars slide off that vinyl like grease off a hot griddle, and you know you can\u2019t just put up a mic on anything amp-shaped and get near that magic? You know those are dirt guitars, but the whole texture\u2019s different. Skulduggery is afoot. And the boys ain\u2019t tellin\u2019.\n\nWell, here\u2019s what I did. It seemed to me that some of the mojo sounded like echoes and delays, but not just any old ones. You can take something as small as a dentist\u2019s mirror, put it near the mic, and aim it until you\u2019re reflecting another copy of your sound into the mic again: the delay is tiny but real, and the tone? Well, that\u2019s based on how big the panel (or dentist\u2019s mirror) is. If it\u2019s tiny, you get only highs. If it\u2019s a big ol\u2019 panel, or a floor or wall, you get down into maybe the lowest bass. Any panel will do this. Billy and Terry might have been constructing lil\u2019 forts around the amps, making a purely acoustic home for the blues. You can literally pick what range of sound you reflect, how long a delay it is (still so tiny it\u2019s not heard as one!) and you don\u2019t have to make it full-range: a softer reflector ignores highs, smaller panels ignore lows. If you want to juice up what your mic hears, this is one way to do it.\n\nIf you\u2019re playing with super-short echoes, you\u2019re reinforcing the lows. Unless it\u2019s out of phase, flipped upside down in the DAW, in which case you\u2019re cancelling them! And then, supposing you have one delay that\u2019s in phase and one that\u2019s out, and you calibrate them just right, and then you\u2019re neither reinforcing or cancelling the lows, instead you\u2019re just thickening the texture of whatever you\u2019ve got\u2026 all the little detail doubled, tripled, dripping down the mix, but the body of the thing basically the same and no sustain, just a couple of delay taps in real close\u2026\n\nI\u2019m not Billy and Terry. Since I\u2019m Chris, I\u2019ll fess up: that\u2019s exactly what I did, and you can have it in Hombre. It\u2019s two calibrated delay taps, which you can tweak a little, and if you bring them in you\u2019ll thicken and diffuse your tones without altering where the lows sit, or adding much in the way of extra sustain. It\u2019ll be punchy and get out of the way like reverb won\u2019t, but it\u2019ll be fatter and juicier than the dry signal. This is my interpretation of the ZZ Top secret sauce, or at least one of \u2019em, implemented in software rather than acoustics.\n\nI\u2019ll never know how close I came, because them Texas boys don\u2019t tell tales out of school. But Hombre is my humble offering for a simple plugin that brings a little mojo to what would otherwise be a dry voice or guitar\u2026 and it won\u2019t muddy things up, just grease \u2019em a little.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Huge",
    "description": "a dirty, dirty loudenator",
    "tags": [
      "Latest"
    ],
    "slug": "huge",
    "short_description": "a dirty, dirty loudenator",
    "full_description": "So the idea here was to explore a trick people are doing with Pafnuty: adding just a few odd harmonics, to get really smooth and mellow saturation. You can keep going, and the more harmonics you add the closer you get to a square wave (or just really intense saturation), but when you intentionally pick just a couple it means all your lower frequencies are totally free of aliasing, since you're not really saturating: just doing a transform that gives you only the added harmonics. If those are below the Nyquist frequency, you automatically have zero aliasing.\n\nBut what do you get if you do this, and then magically omit all the frequencies that are so high that they'd be aliasing?\n\nProbably wonderful ultimate loudenation. And Huge is not that.\n\nInstead, it's tracking the slew rates of all the outputs and just watches to see if those high frequencies are wiggling too fast\u2026 and cuts them off if they are. So in theory it's doing the wonderful clean ultimate high saturation with never an aliasing frequency.\n\nAnd in practice it's just STUPID LOUD with extra bassiness and a level of dirt and grunge you wouldn't believe, from all those harmonics switching on and off. Clearly there are still some bugs in the system. This is not the lovely pure pristine loudenator, it's a kind of monster, unlike anything I've heard.\n\nThere is one control apart from the boost control (that's roughly unity gain at about 0.2: it's simply an input trim, that's all it does). The other control is Nasty. You could also call it Placebo, as damn if I can work out whether it's doing much: I find it, too, seems good at around 0.2 but I could be wrong. It's controlling how aggressively the plugin cuts off harmonics, so when you increase Nasty, it should allow the harmonics to go closer to aliasing. That said, if you send test tones through this, you'll get a confusing mess, and if you send clean sounds through it, you'll get a rude shock.\n\nIf you send loud aggressive sounds through it you will level buildings. Choose wisely, and enjoy :)",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Hull",
    "description": "an alternate form of highpass/lowpass filter",
    "tags": [],
    "slug": "hull",
    "short_description": "an alternate form of highpass/lowpass filter",
    "full_description": "This is the second time I\u2019ve done a filter based on stuff the stock market folks have got up to, and both of \u2019em start with H. First there was Holt, and now this is Hull. It\u2019s set up to work as either a lowpass or highpass filter: the Bright control is really a dry/wet. Bright hard left gives you darkening and the normal output of the filter, Bright hard right subtracts the output giving you a highpass.\n\nThis is another audio chainsaw/proof of concept. I feel it\u2019ll be useful as part of other plugins, in a controlled setting, but you can play with it however you like. Be careful, as setting the Freq control very high (increasing the averaging the plugin runs on, and lowering the cutoff frequency) can produce LOTS of CPU munching. I\u2019ve left it that way in case people find a need for it and can handle the CPU demands, but especially at high sample rates it\u2019s a beast at super-high averaging windows.\n\nHull is a form of playing averaging filters against each other to produce an \u2018accurate\u2019 picture of underlying movement beneath noise. This is of course not true: it only appears to be giving optimal information, but it\u2019s effectively synthesizing fake info to make the chart look more specific in its trajectories. It does a really good job of looking like it\u2019s magically clearing away the randomness, but I don\u2019t believe it really is, and you can hear it in the audio performance: it\u2019s dirty, produces obvious artifacts and accentuates weird stuff.\n\nBut for a sound effects filter, this is great! So, you can use Hull for various purposes, knowing it has \u2018its own sound\u2019 and will really bring a tone to your filtering. It sounds like a grungy old school analog filter that\u2019s maybe distorting and being overloaded by the power of the audio going through it. The lowpass and highpass forms have very distinct tones: lowpassing sounds resonant and sonorous, and reminds me of the oldest Emu samplers (I\u2019m working on getting a Eurorack filter that uses the same chip, to further explore this since I don\u2019t yet have an SP1200). Highpassing does the opposite: it sounds like high frequency boosts done using Hull have a particular airiness and lightness to them.\n\nTaking it way down to the bass and demolishing your CPU in the process, a couple interesting things happen. Lowpassing gives you kicks with a LOT of punch, which let through a bunch of midrange in a way that accentuates impact. (There may be a way to implement this with much lower CPU if it\u2019s a fixed frequency filter: the buffer size isn\u2019t a problem, but allowing the adjustment means implementing it naively and doing things the hard way). Highpassing way down in the bass gives an equally distinctive sound which would translate over smaller speakers very effectively.\n\nThis was a good day at work! I feel like modified versions of this principle will lead to some very cool-sounding EQs, even to stuff on the \u2019emulation\u2019 side of things: this is because I like the sonority and intensity of these filters. They CAN also be CPU-efficient, though this implementation is not (except at high frequencies, where it is fine).",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Hull2",
    "description": "a very clear three-band EQ",
    "tags": [
      "Latest"
    ],
    "slug": "hull2",
    "short_description": "a very clear three-band EQ",
    "full_description": "We ended up using the Hull algorithm in something! It's what makes the high band of ConsoleLA work. Hull2 is taking the guts of that code and giving it to you as a pristine, no-saturation, no analog mojo, pure EQ.\n\nNote that I didn't say 'normal' ;)\n\nThe idea here is that it's very, very simple algorithms that combine to produce complicated results. When I describe what happens here, keep that in mind: the code that produces it is incredibly pure and simple, and the tone of these odd and complicated effects is very transparent and hangs onto expressiveness instead of degrading the tone.\n\nYou've got a treble, mid, and bass control. If you move them all together, you get a simple gain control that's roughly as good as PurestGain. It's very close to PurestGain, if you've moved all three controls exactly together, and that's how transparent Hull2 can be.\n\nIf you boost treble relative to mid (at any position), you get the 10k-centered boost from ConsoleLA, but without any harmonics or other alterations. It's an even clearer effect. It centers on 10k and falls off slightly above that (remembering that, flat, it's a perfect bypass).\n\nIf you cut treble relative to mid, you get at first a soft notch, then increasingly steep. And then, the notch gets shallower again, and then it becomes a very steep roll-off slightly higher than that.\n\nIf you boost lows relative to mid (at any position) you begin to lift the lows, while subtly cutting around 700 hz causing the sensation that the bass region is shifting lower while boosting.\n\nIf you cut lows relative to mid, it'll subtly lift those same lower-mids, so again it's like shifting the voicing of the track rather than just 'adding and removing exact frequencies'. It's very broad-stroke EQ, like two tilt-EQs with a hinge in the middle, if that makes any sense.\n\nAll this is designed in, but it's not done by banks of EQs doing elaborate (and unaccountable) things. It comes out of how very simple algorithms interact with each other, so the behaviors are somewhat designable but it's kind of unavoidable. It's the cost of using these crossovers at these steepnesses, and the trick is to design it so the weirdnesses do musically useful things. And then, the other trick is to construct the three-band EQ by deconstructing the input in such a way that you can just add it together again and get the input back.\n\nYou could have the craziest, wildest crossover behavior, with all sorts of pre-ring or whatever (Hull2 doesn't, but you could have this) and subtract it from the highs to get a mid band. If you do that, both the bands will have exactly matching pre-ripple, if there's pre-ring (same with phase issues, etc).\n\nAnd then if you put 'em back together you have the original back: no more ripple, phase or anything.\n\nAnd of course if you apply only a tiny amount, you get only a tiny amount of whatever character is part of the crossover. And that's the principle in ConsoleLA, and in ConsoleMC (and MD), and now it's in Hull2, where ConsoleLA's treble crossover was developed.\n\nHope you find some use for it :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Hypersoft",
    "description": "a more extreme form of soft-clipper",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "hypersoft",
    "short_description": "a more extreme form of soft-clipper",
    "full_description": "A funny thing happened on the way to posting the video for this\u2026\n\nHypersoft is a new softclipper. Its purpose was to answer the question 'what if a softclipper, that develops a sharper and sharper corner as you overdrive it, placed that corner NOT up at the maximum volume, but somewhere else?'\n\nI feel like this isn't investigated because it's 'wasting' the distortion, assigning it to quieter parts of the sound, and that it's been such an assumption that everything be LOUD, that nobody would even try such a weird experiment. But I've been working on Airwindows Meter, and looking at how hit records in my collection produce these 'clouds' of peak energy and slew energy that always take up more space than modern mixes allow. And so, I wondered: what even do you get, if you used soft-clipping and techniques like wavefolding to produce a 'curve' where the 'flat-topping' instead became a circle or something, and it tries to get progressively sharper somewhere in the middle?\n\nSo I started working with test tones, sine waves, and hashed it out for a while on livestreams and made a thing that produced this curve, plus the wavefolding caused the 'flat top' that you eventually hit, to stick around longer than it normally would, and then curve down into a strange point. When you send a ramping-up louder and louder sine into this, the harmonics it produces go from very soft and mellow, to more sharp and high-frequency, based on how loud the sine was. (compare to a hardclip, where you get highs immediately and then they mostly don't change.)\n\nOn music, it's a wildly grungey dirt-factory that's almost as colorful as class AB distortion, for some of the same reasons. The place that the 'curve' changes most sharply is no longer at the top. But it's still a softclip, so quiet sounds don't grind as they would in class AB distortion. It goes from subtly punchy and textural, all the way to aggressively gnarly.\n\nAnd then I made a video and used a simple room-miced drum beat, a basic boom-bap played as well as I could, just two mics placed in front of the kit, and cranked up Hypersoft until I thought it sounded pretty amazing, thought I'd be able to use something like that.\n\nAnd ContentID flagged it as Rammstein, 'Das Alte Leid' and refused to let me monetize it. (ads that run are out of my hands now, and go to Rammstein.) With no other processing at all, my simple drum playing has apparently become Rammstein enough to fool YouTube. The raw mic feed wouldn't do that at all: Rammstein is a highly processed modern-metal sound. But there it was.\n\nWhat's happening is this: drum impacts are being allowed to persist (like in the highly sculpted sound) but the body of the sound is brought up and reshaped interestingly, producing a 'big' effect that acts kind of like the sound is experienced in real life. Pushed hard enough the dynamics will invert, but it'll take a lot to do that. It's a new form of softclip which I think lends itself to drums, but will probably also suit basses.\n\nYou get Input, Depth, Bright and Output. 0.5 is as neutral as it gets though the effect will add a little boost just by reshaping. Depth specifies how many additional wavefoldings to apply (each runs its own sin() function so high settings will cost a bit more CPU) and more Depth intensifies the effect, making it more focused and colorful. Adding Bright means all the wavefoldings will be used even if they're going to alias: less Bright means the wavefoldings start to bail out when they risk aliasing. Note that this WILL NOT fix aliasing! It changes the tone in such a way that you can dial in the amount of treble hype you get out of Hypersoft, or leave it as a darker effect.\n\nThis will not be as effective a loudenator as just clipping the crud out of something, before you ask. This adds harmonics and intensity while retaining dynamics. In fact it tries to heighten dynamics by throwing more overtones when the overload is greater. I think it's going to be really, really useful but not for simple loudenating: if you're after intensification and impact, Hypersoft might come in handy. I hope you find it helpful :)",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Hypersonic",
    "description": "Ultrasonic, but steeper and higher cutoff",
    "tags": [
      "Latest"
    ],
    "slug": "hypersonic",
    "short_description": "Ultrasonic, but steeper and higher cutoff",
    "full_description": "Hypersonic is the same as Ultrasonic, except it\u2019s running seven stages of filtering instead of five, and it cuts off a little higher: for these reasons, it\u2019s the Airwindows ultrasonic filter that ought to not soften the super-highs even for golden ears and sparkling youths :) I don\u2019t think the original Ultrasonic sounds bad and I use its type of filtering in my work a lot, but I also like depth in sound and the presentation of a soundstage that\u2019s not too upfront and close. It makes sense that the slight softening of super-bright frequencies that original Ultrasonic gives you, wouldn\u2019t work for everybody: not everyone wants \u2018glue\u2019 or \u2018analog\u2019 or \u2018recording console\u2019, sometimes you just want the purest digital you can get.\n\nI think there\u2019s a fair chance this filter will work out for folks whose aesthetic leans toward the superultramegahyperbright, even if that ain\u2019t me. It combines enough filter stages to act like a 14th-order Butterworth, and it cuts off just high enough beyond 20K that you should get everything up to insect-repellent audio, unsoftened.\n\nI\u2019m also working on something else that may give rise to big changes (I know, it\u2019s like 2022 is all the promised big changes, but this one might be extra interesting). Compare Ultrasonic to Hypersonic\u2026 CPU-wise. I am pretty sure that I\u2019ve got Hypersonic outperforming Ultrasonic on every possible platform, even though it has two more filter stages than Ultrasonic. The question is, am I making a choice that is hurting the sound?\n\nA bit of background. There are a lot of devs who like using 32-bit floats for audio math. They\u2019re fast, can be calculated in parallel\u2026 but everything you do with them, you erode away louder samples by constantly truncating your internal variables to roughly 25 bits. You\u2019ll never hear that doing it once\u2026 but for every little calculation, which could be thousands or tens of thousands? I think that\u2019s a hidden difference between digital audio and analog audio, and I think it matters.\n\nSo much so, that I run an internal buss in my plugins that is 1,099,511,627,776 times more high-resolution than that. It\u2019s served me well, and I like the sound I get. But I\u2019ve also run across folks who use a slightly different arrangement: they\u2019re not dithering floating point like I am, but they ARE using a high-res buss. How high res? 536,870,912 times better than the more efficient floats, that\u2019s how high res. Now, what I\u2019ve been doing is one trillion ninety-nine billion five hundred eleven million six hundred twenty-seven thousand seven hundred seventy-six times more high-res than your average float. But who\u2019s to say that we can\u2019t get by with only five hundred million times better than your average float? :D\n\nAnd so, we have Hypersonic. It\u2019s using more filters than Ultrasonic, but running faster, and it\u2019s still five hundred million times more accurate than your average float-based audio software, and it still dithers to a 32-bit buss such as CoreAudio on the Mac. But hey, if you\u2019re running Reaper or something else with a double precision buss, it doesn\u2019t have to dither at all as it\u2019s working natively at that resolution! So my challenge is this: does anybody, myself included, hear ANYTHING more truncate-ey or degraded about Hypersonic when compared to Ultrasonic, even though it\u2019s running more stages of filtering? I challenge you, tell me if you think you can hear a drop in quality here. I\u2019m all about the overkill, but I suspect I can get there on the native Reaper 64-bit buss: and of course everything AU or otherwise that does run a 32-bit buss gets dithered to that buss whether it\u2019s Mac or PC or Linux, and I\u2019m thinking I can start to bring some really serious performance gains to everything. I will of course keep an archive of all the Airwindows plugins as they existed before re-hacking them in this new way, so you will be able to have access to the previous plugins (of all kinds) that ran the ultra-super-hyper-overkill audio buss. Might be desirable for mastering folks, or those who are incredibly fussy about analog-style sounds. I\u2019ve been doing a fine job of keeping the audio busses cranked wide open to ultimate resolution for years, and the whole Airwindows library is like that.\n\nBut if my suspicions are correct, we can have that as backup and then also have the whole Airwindows library running WAY faster.\n\nAnd then when we move on to the new format CLAP, and begin to bring out select plugins with GUI and interfaces and metering, they can also run their audio stuff at that nice happy medium between high efficiency and no-compromise audio buss.\n\n(followup: I did in fact end up re-hacking the entire Airwindows plugins collection on all platforms as double precision rather than long double. Though on some processors like the Mac M1 it weirdly turned out that the long doubles were fine and didn't cost me extra CPU, hence I didn't gain anything much from the change on my own systems)",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "HypersonX",
    "description": "like UltrasonX but with seven stages instead of five",
    "tags": [
      "Latest"
    ],
    "slug": "hypersonx",
    "short_description": "like UltrasonX but with seven stages instead of five",
    "full_description": "This one\u2019s pretty straightforward. If you know UltrasonX, this is the same thing but for Hypersonic. These are ultrasonic filters for use at high sample rates such as 96k: for less processing than it would take to oversample a bunch of stuff you can run the whole mix at an elevated sample rate and put filtering between nonlinear stages: it works better to do a little filtering in many places, and it helps the mix from seeming overprocessed.\n\nHypersonX is steeper, because it\u2019s seven stages instead of only five. It cuts off a little higher, so it should go right past 20k without hinting at rolling off or softening anything. But since it (like Hypersonic itself) is seven stages, that means you\u2019ve got to find seven spots in your mix to stick the respective stages of the filter.\n\nLike UltrasonX (and like future Console versions I do that will use this technology), you have to have one each of every stage of HypersonX, from input to final 2-buss. That means you don\u2019t have to repeat \u2019em across all channels: for instance, if you\u2019re running stage A and B on the channels, and C, D and E on submixes, and F and G on the 2-buss, that\u2019s way less filters than you\u2019d have if you placed just one Hypersonic on the start of every single channel, AND it will work better because it\u2019ll keep every little nonlinear stage in check. Otherwise, they can seize on small bits of aliasing and alias them further until they combine and become obvious. Single filtering at the input won\u2019t protect you from this. Distributed filtering will.\n\nThis might not be for everybody. The thing is, if you\u2019re running at high sample rates and you want to resist aliasing and have a warm, analog tone that still retains clarity, this might be for you\u2026 and similarly to other Airwindows inventions, the cumbersome nature of HypersonX could become your secret weapon. Who wants to carefully arrange to have one each of seven types of inaudible filtering across your signal path, from channel start to end of 2-buss? Possibly you, if the resulting tone speaks to your musical tastes. The barrier to entry is a setup that\u2019s a pain in the butt and fussy rules for how it works (you can combine it with the original PurestConsole if you\u2019d like to also have the cleanest possible Airwindows Console mix, that\u2019s a whole other set of fussy rules!) but you might find the results a little spectacular.\n\nI hope so! The next thing for me is building this into the next version(s) of Console, and I believe it will help things a whole lot. But with HypersonX, you don\u2019t have to wait. Use it on its own or combine it with any earlier version of Console (not Console7 or PurestConsole2, which have their own filtering, but Console 5 or 6 or PurestConsole or Atmosphere or PDConsole which didn\u2019t have ultrasonic filtering built in) and begin constructing your own in-house mixing board, and get your personal sound.\n\n(followup: this became the ultrasonic filter tech for Console8)",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Infinity",
    "description": "a MatrixVerb specifically designed to sustain and layer sounds forever",
    "tags": [],
    "slug": "infinity",
    "short_description": "a MatrixVerb specifically designed to sustain and layer sounds forever",
    "full_description": "Here\u2019s a follow-up to what I\u2019ve been doing with Householder reverbs, and my recent plugins MatrixVerb (for flexibility) and Reverb (optimized for size variation only). The algorithm I\u2019m using has one more specialty: infinity! The way it works, if you do nothing else except feed it back on itself, it will sustain infinitely: that\u2019s its basic, natural state.\n\nAnd so I did. :)\n\nOf course that\u2019s too simple: there\u2019s a filter (not in the feedback path) that will let you sweep its frequencies in and out, from deep space to bright and unnatural textures. There\u2019s a size control that will let you resize the space from gong-like tones to the depths of galaxies\u2026 and a damping control that does NOT make the reverberations die away. Instead, it just applies a subtle darkening, useful if you\u2019re looking for darker spaces.\n\nMore importantly, Infinity is tailored to handle anything from subtle noises to the full blast of a mix: if you saturate it and keep adding sound, what\u2019ll happen is that it\u2019ll begin to squeeze out earlier infinity to make room for what\u2019s coming in. That way, the maximum level will stay under control, but it\u2019ll also tend to emphasize the most recent thing you did (as long as it\u2019s loud). If you\u2019re not adding loud things, you\u2019ll continue to build up the texture as you go.\n\nIt\u2019s also a dual mono effect. What that means is, you\u2019re adding things to infinitely sustain at distinct places in the stereo image. What\u2019s on the left stays on the left, likewise with the right, centered stuff will stay centered. This is different from both MatrixVerb and Reverb, both of which will \u2018spread\u2019 centered information as the reverb continues. Infinity doesn\u2019t have the stereo pitch shifting that would cause that to happen, because it\u2019s entirely dedicated to providing pads and spaces that can literally sustain forever without change. So, it can also sustain a sound-space across the stereo field that doesn\u2019t change the stereo mix, either. You can keep things mostly panned to the center, or put in super-wide stuff that\u2019s fully L or R, or both.\n\nMy hope is that this is an inspiring tool for those who like making ambient spaces. You can combine it with MatrixVerb to have a distinct, unvarying source of infinite sound which is then broadened and made richer by the added options of MatrixVerb in a way you couldn\u2019t do from MatrixVerb alone. Or, you can just use it as its own little instrument. Hope you like it!",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Inflamer",
    "description": "an Airwindowsized take on the waveshapers in Oxford Inflator",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "inflamer",
    "short_description": "an Airwindowsized take on the waveshapers in Oxford Inflator",
    "full_description": "How do you take a famous, beloved plugin and make it better?\n\nIn a recent livestream, I saw a video make the very convincing argument that the famous Oxford Inflator is the combination of two very simple waveshapers. Like, spectacularly simple. One's a bit more complicated than the other, and one is essentially just second harmonic, nothing more. The person making the video set up the two simple waveshapers and demonstrated that for all manner of settings on the real Inflator, they could make a Melda waveshaper produce identical outputs.\n\nOf course, you didn't get the UI. You didn't get the band splitter. There's a clip meter of some sort: also not included. However this meter, these controls work: nope. But\u2026 now there are algorithms that are public, some of 'em so simple as to defy property (hard to argue that you can own one line of code that makes things second harmonic, it'd be like me claiming to own sin() )\n\nWhat could you do, to make this better in any way?\n\nWell, that's where my recent experiments come in. Meet Airwindows Inflamer (NOT Inflator). It doesn't do the same things, quite. There's no band splitter. There's a curve control, but it doesn't go -50 to +50, it goes from 0 to 1. And while it blends the two waveshapers\u2026 it does so in a more cumbersome and possibly more pure way.\n\nInflamer is different because it's using my BitShiftGain style gain trimming, internally, as if it was a dry/wet, but with the two waveshapers instead of a dry and a wet. The Drive control is also bit shifts (very accurate divisions by powers of 2). The Effect control, as with the real Inflator, is normal and is in fact a dry/wet, and there you can have subtle adjustments to what is, I hope, a sonically optimized version of the effect.\n\nBut you cannot have the band splitting, or fine gradations of Curve. In fact many settings of Curve will end up being a slight volume drop when used at unity gain (Drive in the middle). It is possible a bunch of people will shoot this out against the real, iLoked, for pay, bestseller plugin, and will decide mine is crap because it is often quieter than the real one.\n\nGOOD. I'm not trying to rain on anyone's parade. You have to know what you're doing to evaluate this. It's much like how, when I start doing takes on Bricasti, they'll be in my own style. I am not cloning things, even when the underlying algorithms are trivially simple. Inflamer is different and the range of adjustments are in 6 dB steps on Curve and Drive and often you might find the result comes into the mix 3 or more dB quieter than it would from the Sony plugin, and that's as it should be.\n\nAnd if I'm correct that leaning on these insights into digital math gives their own kind of benefits, I've managed to make an Inflamer which is more mastering-grade, more transparent and sonorous, and better sounding (IF you can live with the only settings I allow you to pick) than the real one. That's why I'm restricting it the way I am.\n\nThere you have it. Inflamer is obviously not Oxford Inflator, has less options and restricted choices, and if you shoot them out head to head without matching levels carefully, it will probably always come out quieter than Oxford Inflator. And it is only some waveshapers, simplified and restricted even more than the original.\n\nAnd for some, it'll be just better, in critical listening. Sometimes it takes radical methods to beat an already stellar plugin. I hope you like Inflamer, and that it doesn't inflame you too much, unless you like that sort of thing.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Infrasonic",
    "description": "a very steep subsonic filter, built like Ultrasonic",
    "tags": [],
    "slug": "infrasonic",
    "short_description": "a very steep subsonic filter, built like Ultrasonic",
    "full_description": "If you saw my recent post about Ultrasonic\u2026 this is the same, but at the opposite frequency extreme! It will nuke DC offsets and reshape thunderous rumblings into specifically \u2018audible\u2019 subsonic rumblings. That doesn\u2019t mean it will always make the amplitude of subsonic bass go down: there may be times when it alters the waveform so it peaks higher. But it\u2019s the same thing as Ultrasonic: tenth-order Butterworth highpass filter, executed as cleanly as possible (NOT with an internal Console system expanding the tone) using very high resolution math.\n\nNormal audio recordists and people working with analog sources will probably find this does nothing for them. But if you get frisky with DAWs and do weird things in the digital mix, you may just end up producing low frequencies that aren\u2019t properly sonic anymore. Normally, you\u2019ll be using various highpasses to tune your deep bass for the purposes of your mix, and this isn\u2019t for that: it\u2019s a more abstract concept of a filter.\n\nIf you\u2019d like to neatly excise everything below 20hz and retain EVERYTHING remotely considered an audio frequency, especially if you\u2019ve got DC offsets coming out of your other digital processing (I\u2019ve tried to fix a lot of my plugins that do this, but there are other plugins out there which can produce it), then this might be handy. It\u2019s also one of the Airwindows featureless add-and-forget plugins, and I\u2019ve always liked making those: speeds your workflow. No window to open, just put it in the relevant place and you\u2019re good to go.\n\nI will also note that this is very likely not what you want for a mastering highpass, because the steepness of the filter means a lot of crazy phase shift. I see it more as a special effects filter, something that can take a rumbly noise and give you a very tailored, impactful result with minimal content actually below 20hz. Sound design is where I'd use Infrasonic, and I'd check to see if I still liked it better than a normal subsonic highpass.",
    "categories": [
      "Bass"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Interstage",
    "description": "a subtle and sophisticated analogifier",
    "tags": [
      "Basic",
      "Latest"
    ],
    "slug": "interstage",
    "short_description": "a subtle and sophisticated analogifier",
    "full_description": "Interstage is one half of an experiment. I pitted my ability to use my weird techniques (interleaved IIR, slew limiting, etc) against my new biquad filtering techniques, in the battle of the bandpasses. The biquads could give me total DC rejection and total rejection near Nyquist. My more distinctly Airwindows tricks could give me new sorts of nonlinearity and tone. Which would win?\n\nThis isn\u2019t called \u2018Biquadstage\u2019, so that might be a bit of a giveaway.\n\nInterstage isn\u2019t a loudenator. It doesn\u2019t really clip (though it does go dark as you push the highs harder, in a way I\u2019ve never done before). It doesn\u2019t even preserve the output peaks of heavily limited material: it\u2019ll reshape lows in such a way that the peaks might go up slightly as the deepest lows get rearranged, and it doesn\u2019t really eliminate DC offset either. So what does it actually do?\n\n*deep breath*\n\nTwo level total of three pole IIR highpass which subtracts a pre-averaged sample and slew limits (all right, clips) against not the direct signal but the initial stage IIR lowpassed reference point used as part of the highpass. Oh, also the average it uses isn\u2019t the previous input sample, but the slew limited highpassed output.\n\n*crickets*\n\nNo, I am NOT making that up. That\u2019s literally what it does, you can see the code.\n\nWhat does it sound like? It sounds like running through an optimal analog stage. The lows are reshaped in a characteristic way for a capacitor-coupled circuit that still allows extended lows: this doesn\u2019t suppress much if any extreme bass. It just massages it a bit. The highs run into active component electronic limits, but unlike other approaches (Channel for a bit of grit, Acceleration for ultra-clear) this is restricting treble slews based on the general amount of energy in the circuit. So it goes darker in a peculiarly analog-like way I\u2019ve not done before, sounding still clear and trebly for most audio, but confining the craziest most digital-sounding treble swings into a zone that sounds like hardware. And this is without thousands of math operations of heavy processing: unlike overprocessed analog modeling, this one nails the \u2018energy coming out of analog circuitry\u2019 without blurring or thinning the audio at all. If you don\u2019t need what it\u2019s doing you\u2019ll hear no change at all. Only when \u2018excessively digital bass and treble\u2019 show up to interfere, does Interstage kick in.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": true
  },
  {
    "name": "IronOxide5",
    "description": "the old school, heavily colored Airwindows tape emulation",
    "tags": [],
    "slug": "ironoxide5",
    "short_description": "the old school, heavily colored Airwindows tape emulation",
    "full_description": "The legacy of this plugin goes way back. Many years ago, I was coding some of my first AU plugins, and some friends of mine were having bad experiences with a company that sold the big tape emulation plugin of the day. Outraged, I charged into the fray: I would code a replacement for them, one that did the same things and sounded better and sold for $60 (later $50). And that was Iron Oxide. It had one \u2018ips\u2019 control, a Drive, and an output level.\n\nThen, I expanded on that with Iron Oxide 2. That one split the \u2018ips\u2019 top and bottom cutoffs, so you could vary the \u2018bandpassy\u2019 quality it had. It used the same unusual algorithm, but made it more flexible. It also incorporated an unusual sort of anti-aliasing in the form of a \u2018tape noise\u2019 factor that blurred slew.\n\nIron Oxide 3 added flutter. At this point, we stepped away from strictly zero latency: instead, the plugin declares zero latency but produces a fuzzy smear across one or two samples, the range the flutter covers. That persists with Iron Oxide 4 and 5, and is how the current free VST Iron Oxide works.\n\nIron Oxide 4 added something else that (come to find out) is also present in the Delta Labs Effectron: inv/dry/wet control. That persists with Iron Oxide 5. The way you use it is, set up an Iron Oxide tone that accentuates a frequency range (like mids). Drive it, or leave it clean\u2026 but begin setting the control to inv (the inverted position). You\u2019ll subtract it from dry, causing a dip rather than a boost, but if you\u2019re saturating the \u2018tape\u2019 then the dip will leave dynamic energy in the area being cancelled: it will cut out fat, leaving punch. Overdrive the \u2018tape\u2019 section harder (and turn down \u2018inv\u2019) to get more punch out, or leave it clean and use it just to cancel out the area. It\u2019s an unusual effect, but it works.\n\nIron Oxide 5 is all of this, plus lessons from the \u2018Purest\u2019 line of plugins (mostly still in line to be released later) to produce the same thing as Iron Oxide 4, but even more pure and resonant and intense. None of these are really \u2018mix buss\u2019 plugins (though I\u2019m not the boss of you): they\u2019re far too intensely colored and distorted. They\u2019re more about \u2018make that snare really bark\u2019 and so on. Though of course, since I\u2019m not the boss of you, I can\u2019t prevent you from trying to use it on the full mix. All I can do is say that ToTape is coming, and that\u2019s the MODERN tape emulation. This is the old school, rowdy, obvious tape emulation, full of grunge and bark :)",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "IronOxideClassic",
    "description": "the purer, simpler, early form of Iron Oxide before all the features",
    "tags": [],
    "slug": "ironoxideclassic",
    "short_description": "the purer, simpler, early form of Iron Oxide before all the features",
    "full_description": "As promised, here is the 2017-ized version of the pure, sweet, original Iron Oxide. No more grit or tape flutter or noise!\n\nIt\u2019s funny how this works. If you\u2019re a commercial developer, and you release a plugin that\u2019s real popular, one thing that happens is people begin asking for more. More features, more variations, this and that and the other. The flutter in Iron Oxide 5 came about that way: it migrated over from ToTape (which is also coming to free VST).\n\nEvery new thing added is something lost. But since I\u2019m no longer doing strictly commercial development (it\u2019s steadily all becoming free, backed by my Patreon which allows all this to happen) I can do things like confuse the \u2018market\u2019 and release both the feature-full Iron Oxide 5, and the stripped-down Iron Oxide Classic. This one is just like the original: input trim, ips control, and output trim. Better yet, it has the pure unsullied tone of the very first Iron Oxide, only brought up to date so it noise shapes to the 32 bit buss etc.\n\nEven if you liked the grunge factor of the very adjustable Iron Oxide 5 (more controls may be added but bear in mind I have a commitment to release plugins like BussColors, not just keep revising Iron Oxide!) you might want to check this out. And if later versions of Iron Oxide wandered away from what works for you, for instance if you\u2019re making electronic music and needed much cleaner handling of synthetic tones\u2026 this is your lucky day!\n\nHope you like Iron Oxide Classic. It is, truly, one of the Airwindows classics, now for free VST and brought up to date. :)",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "IronOxideClassic2",
    "description": "my bandpassy tape sim, updated for high sample rate and aliasing control",
    "tags": [
      "Latest"
    ],
    "slug": "ironoxideclassic2",
    "short_description": "my bandpassy tape sim, updated for high sample rate and aliasing control",
    "full_description": "Iron Oxide was one of my first successful plugins. It\u2019s an old school tape emulation, meaning that it\u2019s kind of bandpassy and is about saturating and slamming and aggressive tone coloring. It was made to compete with a pricey (well, back then it was) commercial plugin where the company had treated some of my friends poorly: I charged off and made a \u2018commercial tape emulation killer\u2019 plugin, with very unorthodox techniques. This is before my ToTape plugins, before head bumps: just a fat saturated tape-slam plugin.\n\nThis grew to have all sorts of things: separate ips controls for low and high cutoffs, flutter, just lots of stuff. But the original one was an input, a tape speed control, and an output\u2026 and Iron Oxide Classic is me returning to those roots. It\u2019s also handy, because as I bring in stuff like undersampling of delay buffer plugins, I can get the fundamentals right on a simpler build. That\u2019s what this is. It\u2019s Iron Oxide Classic, the simplest form, but brought up to the latest technical specs.\n\nThat means it\u2019s using the undersampling to deliver the same tone whether you\u2019re at 44.1k or 96k or 192k. Though it uses delay buffers and samples along a time window, in the new version that\u2019s consistent among sample rates. That also means it\u2019s substantially more CPU-friendly at high rates, so you might be able to run twice or four times as many of \u2019em. It\u2019s also using anti-aliasing filtering (that kicks in at high rates and isn\u2019t \u2018in circuit\u2019 at low rates) to clean up its behavior still further. The end result is that the new Iron Oxide Classic has a way more organic, natural tone than the previous one did. These things (and running projects at 2X or 4X) really help get the analog vibe out of ITB digital gear. Since Iron Oxide Classic 2 is able to adapt to this stuff gracefully, that also means it\u2019ll handle rendering at 2x or 4X sample rate should your workflow require working at 1X and then rendering out the final audio at a higher rate. Mind you, I design stuff so you\u2019ll be able to work directly at the higher rate, but this should have you covered whatever your workflow.",
    "categories": [
      "Tape"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Isolator",
    "description": "a steep highpass or lowpass filter, like you might find in a speaker crossover",
    "tags": [],
    "slug": "isolator",
    "short_description": "a steep highpass or lowpass filter, like you might find in a speaker crossover",
    "full_description": "Isolator is like some of my Biquad Filter plugins, except it\u2019s tuned to a particular purpose. In DJing, one technique is to use a filter on the full mix for effect, and Isolator is geared towards two specific tricks in that vein: sweeping the filter down until the music is just a throb and then bringing it back, or sweeping the filter up to leave only highs and then dropping the bass back in.\n\nThis is done using a speaker-crossover style filter: Isolator is a fifth order Butterworth filter made out of three series biquad filters run inside an instance of Airwindows Console. It rolls off at 30 dB/octave (I think I had this as 36db/octave in the video, but that would be a sixth-order filter) and probably slightly steeper than that, because I\u2019m up to my usual tricks and chose the fifth order Butterworth because it\u2019s made out of Q factors that are a close approximation of the golden ratio. So, I\u2019ve used that, making the filter JUST a bit steeper than normal :D also, the way the frequency control is mapped, means it gives you accurate control over the full Nyquist range of the filter AND still puts the midrange in the middle of the control, through changing the logarithm of the filter frequency. That means it always is able to go full-range no matter what sample rate you\u2019re at: maxed out, is always \u2018max sample rate\u2019, it just sweeps farther up when run at higher sample rates once you\u2019re at the far right of the control.\n\nThat\u2019s the tech rundown. In practice, this is a lowpass/highpass filter. You can sweep it around, though it\u2019s possible to freak it out if you throw a lot of filter-sweep activity at it in a zone where it\u2019s handling a lot of energy. It wouldn\u2019t be good to try and FM this control: biquads sound wonderfully smooth and rich but they won\u2019t handle that treatment, especially run inside their own version of Console. You can use the treble and bass controls as a form of shelf, or output gain: note that I\u2019ve set them up for instant response so you CAN FM them or do really aggressive, choppy things with them without upsetting the filter. That said, if you have a heavily bassy sound coming through them, you can get clicks since they will respond instantly: it\u2019s that or have them chase the value, and you can\u2019t do aggressive glitchy stuff if you chase the value, so I\u2019ve got them responding directly. That does mean you can do stuff like have the lows coming through and then \u2018flicker\u2019 in the highs setting for a glitchy effect, at whatever speed you can automate the slider.\n\nI expect mostly this will be useful for the classic \u2018now it\u2019s all bass\u2026 and now the full mix gradually swells up\u2019 effect, but there are many possible uses. You can use it to neatly lop off highs or lows with the steepest cutoff possible that isn\u2019t QUITE resonant. You can cut the bass on tracks with great accuracy, and you can use it as a shelf of great accuracy: the bands are made by subtracting from the lowpassed version, so having both treble and bass full up means you have literally unaltered digital audio, apart from some \u2018zero dB\u2019 multiplications. That means very subtle cuts in highs OR lows might be using a sharp near-resonant filter sound, but the less cut you have the cleaner the output will be. It\u2019s a mastering-grade surgical high/low shelf, much like professional DJ isolators must be constructed to carry the full mix with ideal sound quality.\n\nExcept I can beat those in one very Airwindows detail: if you are using it as a lowpass, and you\u2019ve got high on zero and low on 1 and you open up the filter completely sweeping it up\u2026 no matter what sample rate you\u2019re at, once you reach 1 (full crank) on the frequency control, it seamlessly bypasses itself while still calculating the filtered signal. So, unlike analog isolators, when you run THIS isolator on the full mix, at times you\u2019re not using it, it is literally not in the signal path anymore. :D",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Isolator2",
    "description": "Isolator, but with control smoothing and a new resonance booster",
    "tags": [],
    "slug": "isolator2",
    "short_description": "Isolator, but with control smoothing and a new resonance booster",
    "full_description": "Isolator2 is Isolator, my very steep lowpass or highpass or shelf filter, but now it\u2019s got smoothed coefficients so you can automate it and make it move better. Also, it\u2019s even steeper. Also, it now has the power to give you added resonance! So you can put an edge on your filter/isolator sweeps, for a really narrow high-resonance sound that\u2019s very striking as a \u2018synth filter\u2019 tone.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Isolator3",
    "description": "Isolator2, but on one slider, with a band-narrower control",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "isolator3",
    "short_description": "Isolator2, but on one slider, with a band-narrower control",
    "full_description": "Isolator3 is basically a request. I got asked for an isolator filter 'on one knob', which I've seen around but I've not used myself. Basically it means middle is full-range, to the left you're lowpassing and to the right you're highpassing.\n\nTurns out you need to run it as two filters because it's impossible to 'switch' the biquads inside it, from one role to the other. So you constantly run two filters one of which you can't hear the effect of.\n\nExcept then there's the Q control, which does not actually control the Q of the filters. They're still steep, stacked-up filters without special resonances of their own. But when you turn up the Q slider, the cutoffs approach each other, turn into something like a bandpass on the fly. Full up, it should act a little like a resonance. To go back to full range, turn Q back down to zero and Iso to 0.5 (the middle).\n\nLastly, this is lots and lots of filter stages all of which are smoothed for better modulation\u2026 but it's made of biquad filters, which don't like being modulated, and then it's two types of filter run into each other. I've put in safety clipping because it turns out that if you yank the control around real crazy, it's easy to get Isolator to glitch out. The glitches aren't always useful sounding but now and then it emits really weird synthetic burps and frills and so I've just made sure it can't blow up the output too bad, and then left it to its own devices. So, use Isolator3 with smooth intentional motions for traditional effects, yank it around madly if you want it to spit digits and sparks at you, have fun is the most important instruction.\n\nHope it works as I got COVID returning from my vacation and it is heavily still with me so I've lost a bunch of steps. Not ideas, it's just that this is a good time for me to work through the backlog a bit. May or may not livestream in the upcoming week and if I do I won't be talking for eight hours at a stretch: probably won't need to go to the hospital but will check with a doctor. I'm in my space, Chris's 'hunting for ideas mountaintop' and it's no biggie for me to hole up for a few weeks. See ya again next week with something else from the backlog! :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "kAlienSpaceship",
    "description": "an unreal realistic reverb",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kalienspaceship",
    "short_description": "an unreal realistic reverb",
    "full_description": "Though I've got a lot of other irons in the fire, my work on reverbs is ramping up something fierce. I'm going through millions of possibilities with a genetic algorithm, then turning around and rendering out dozens (hundreds!) of possibilities, mostly in the area of small spaces like kStation because they seem to lend themselves to what I'm doing.\n\nAnd then there's kAlienSpaceship. If I can top this one, I will, but the work's going in the other direction at the moment, so it's time to put out the mothership.\n\nThis one works like recent reverbs do: it's got the same controls such as a DeRez and a Filter control that are both Bezier undersampling, and both two-way controls with 'brightest or highest sample rate' at the center, left for stepped and 'good sounding' tones, and right for an edgier, stranger take. Moving DeRez to the right can produce a 'pitch dive' effect while the effect is still running: move it to the left to cleanly shift the entire reverb down in pitch and make it even more massive in size.\n\nThe intention here is to make an 'unreal realistic' reverb. Not a giant real-world room or hall, but more like an imaginary space\u2026 indeed, a spaceship. It's so vast it doesn't come off like a real room, but neither does it have the abstractness of something like Galactic. Instead it suggests strange geometries, unusual shapes. It was designed back when I was still debugging Bezier Undersampling, and had an odd alien quality, but it's up to speed with my current work so there's a realism factor too. It's synthetic and realistic, pristine but quirky. Not as much as the earlier reverb that acted like there was a slapback integrated into the reverb, but enough to produce a real character.\n\nUse kAlienSpaceship if you're looking for a very big hall or stadium, or if you're doing a synthetic thing and want to gloss it up with deep shimmery ambience, or if you need to expand something out into seemingly infinite space. You can set it to be many kinds of realistic, but it'll also go way beyond that into spaces that bear no relation to reality. I find it to have a fun imaginary quality that sits well with artifical sounds, but you needn't stop there. Hope you like the new spaceship to go play music in! :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "kBeyond",
    "description": "a recital hall",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kbeyond",
    "short_description": "a recital hall",
    "full_description": "Turns out there's a technology to beat all AI: the genetic algorithm. GA. And if you know how to steer it, you can do anything.\n\nkBeyond is a first real example of what that can do. It's two different reverb matrices in one plugin, the first generating early reflections and the second expanding them into an eerily believable acoustic space.\n\nI did it by telling the genetic algorithm to try millions upon millions of different matrices, and evaluate them in various ways. Like, constructing all the end-result echoes from the Householder matrix, and then seeing how many of those combinations were primes (people are used to putting primes in the individual delays of the matrix, but it does nothing! It's how many of the end results add up to a prime). Or measuring the gaps between echo returns, and seeing if they're similar or all different (this increases the depth and naturalness of the sound). Or working out what the intersample peaking of the reverb will be, and preferring lower treble energy out of it. Or wanting the first echoes to happen almost immediately, which means there has to be a path through the matrix that is very short.\n\nI put together a small hall out of this, without too much furniture or weird architecture (yes, I can specify that too) and it's yours now. It's using a 3x3 and a 6x6 Householder matrix inside, so before it even gets into regeneration it's producing 1.25 million echo returns (previous kVerbs before VerbSixes? 3125, for not much if any CPU savings). It's using Bezier undersampling to sound right at high sample rates with no penalty in CPU to speak of. It's got just enough controls to adapt to many needs, but is essentially simple to use: keep things near default, tune your RT60 and loudness of early reflections and the filtering on the deep reverb to tune the brightness of the hall. Use Derez if you want to scale it up while darkening it.\n\nThere will be more grandiose spaces (heck, you have VerbSixes for that). But in certain ways, there won't be more impressive spaces for a while, because whatever sound you put into kBeyond, it ought to sound like you've just gone on the road and into a hall and put up some mics. It's not even a texture, it's just there, invisibly, making things real.\n\nCompare this to, say, ClearCoat, and you can see why I didn't stop there.\n\nExpect more. All the reverbs kinda need an update now that I can do this\u2026",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "kCathedral",
    "description": "a giant reverby space",
    "tags": [],
    "slug": "kcathedral",
    "short_description": "a giant reverby space",
    "full_description": "Here's a neat little experiment! As always with the K reverbs, it's a dedicated sound space with its own unique algorithm\u2026 but there are some new twists making kCathedral a step along an interesting path. This is the first of the Bricasti-inspired reverbs!\n\nIt uses a 5x5 Householder matrix, and a built-in crossover (a SubTight filter, so it's not even a normal type of filter) to allow for extra delay on the lows. The internal reverb filtering is Pear filters rather than the biquads used on the kPlates. (the reverb is undersampled at high sample rates, so the SubTight crossover will work the same whether at 1x, 2x, or 4x.)\n\nAnd for all that trouble\u2026 kCathedral does NOT sound the same as the Bricasti Cathedral preset. You won't find a clone here.\n\nBut\u2026 it will produce largely the same depth and spatiality, with a different texture that is less 'rich and soft' and more 'stark and vibey'. It should be used similarly: for realism, hide it behind other sounds by keeping it quiet. There are no controls other than a dry/wet: for use on an aux, go full wet, and if you're using it inline you might end up adding just the tiniest amount (in the video, I'm using 0.03 of it on my voice, and you'll barely notice it until it switches to similarly faint ClearCoat 7, just for a sentence, after having mentioned ClearCoat.)\n\nMy hope for these is distinctness, and kCathedral might not be the one to reach for as an 'all-purpose' reverb, because it's just a first steo into a larger, more echoey new world. The thing I like about it is, while it has a distinct sound, the spatiality sits in the mix roughly the same way a real Bricasti might, even while the texture is different (will be interesting to see if I can get closer to that butter tone, in future).\n\nAll in all, a good day at work (okay, months) and I hope you enjoy kCathedral :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kCathedral2",
    "description": "a giant reverby space modeled after the Bricasti Cathedral",
    "tags": [],
    "slug": "kcathedral2",
    "short_description": "a giant reverby space modeled after the Bricasti Cathedral",
    "full_description": "Here we go: this should do nicely.\n\nThis is still a 5x5 Householder matrix like the last time, but that's about the only similarity, and it's not at all the same matrix as last time. I am keeping that as kCathedral because I know full well that people find uses for things, but you can hear pretty plainly in my video on kCathedral2 that this is in another league (as they will all be, going forward).\n\nHow was that done? A lot of it was time spent generating possible reverb matrices. There's a wide array of ways to evaluate how those become reverbs, none of which existed when I made the original kCathedral. I knew what I wanted but I had no way to measure it\u2026 and no way to generate thousands, millions, billions of possible options and automate the process of throwing out the metallic or lame ones. And that changed, over months of work on the tools.\n\nThere's also new things that didn't exist in the more purist, uncompromising kCathedral. The new one uses one of my reverb delays differently, by turning it into a single solitary allpass (well, two, one per channel) and also adding the very subtlest of modulation to just that one allpass (not inside it, as a separate effect). None of this was present in the original, but even though it's only the tiniest amount, it's felt.\n\nBut most of all, this time around it's using a completely different approach to early reflections. The real Bricasti Cathedral uses early reflections so strong I mistook them for dry signal being let in. Original kCathedral used a 3x3 matrix, very gingerly, trying not to be obvious because I thought I was hearing dry energy off the Bricasti, therefore the early reflections had to be much quieter, right? kCathedral2 uses a 4x4 matrix\u2026 which means it's able to literally use a patch from ClearCoat/CloudCoat, except without regeneration (the sound literally bounces away into the cathedral and doesn't even enter the deep reverb field). That's early reflections that can stand alone as their own reverb.\n\nIt's subtle, but it's also where I was able to step away from the Bricasti sound and try to establish my own. I think you'll find that the deep room tone is about the same, and the depth of space, but I want those early reflections to be a lot more diffuse (but NOT allpassy), so I've scaled them up and spread them out. It should sound more like detail in the actual room rather than an obvious back wall, which I think will be more useful for how I'll be using it. And I've got a lot closer to that textural butter-sound of the real Bricasti, while retaining some of my own goals for the project.\n\nWelcome to kCathedral2. Oops, I did it again (this time more like what I intended for the first time). Thanks to my Patreon patrons, who are literally the reason I can persist at goals like this, and without whom I might have to stop halfway and not get to stuff like this. Hope you like it!",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kCathedral3",
    "description": "a giant cathedral-like space using Bezier undersampling",
    "tags": [],
    "slug": "kcathedral3",
    "short_description": "a giant cathedral-like space using Bezier undersampling",
    "full_description": "From the mad scientist's lab, bigtime!\n\nThis is the third kCathedral, and probably the final one before I launch into lots of other types of reverbs. I've got three lined up already, but this is where I figure out what the kReverbs are about.\n\nThe first one was like this: one knob, dry/wet (a 'wetness' knob, in that the center is full volume for both) and a 5x5 Householder matrix. Put it out, people had fun but it was kind of metallic. Not really ready. So I kept working.\n\nThe second one was one knob, dry/wet as before, greatly improved sonics. I designed new ways to generate and test the reverb algorithms, churned through millions of possibilities, measured and tested and cooked up a new and unique Cathedral algorithm. Also, tried a different sort of early reflections. Still a one-knob, but sounded a lot better.\n\nThen\u2026 I did even more algorithm testing. And invented CrunchCoat. And then DeRez3. And then CreamCoat, a method for using that technique while keeping the downsample 'gears' from seeming unrealistic. And explored the usefulness of varying regeneration. And found that when varying downsampling it's useful to adjust regen. And discovered Discontinuity! And tried using it in the feedback loop of the reverb, to dial in realistic huge-space sustain at synthetic loudnesses.\n\nSo basically this ought to work for the genre going forward. If you thought CreamCoat sounded cool, that's the very primitive version compared with this, still a 5x5 Householder (already an unusual choice) but this time selected from more millions of options with new metrics for analyzing them. This time there's a predelay, a Discontinuity (says Top dB), a wide ranging Regen control (for realistic RT60s: this one happens to not go infinite). And that DeRez control you saw on CreamCoat, but this time it's on a BIG reverb.\n\nI feel this ought to work really well for many purposes: just listen to it. It's still trying to be an Airwindows-style reverb rather than 'front and center instrument for making all possible sounds', but within the context of cathedral-style deep verb, I think this obliterates the first two AND completely abandons the 'over-simplified' thing I tried valiantly to make work.\n\nHope you like it, let me know what you think.",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kCathedral4",
    "description": "the Cathedral sound expressed as distant space",
    "tags": [],
    "slug": "kcathedral4",
    "short_description": "the Cathedral sound expressed as distant space",
    "full_description": "Flagship reverb takes whatever the newest technology is, and expresses it in the flashiest possible way. kCathedral's always been that for me, but the technology's come a long way over the years. And it turns out even kBeyond was only a preview, and there's major upgrades in store. kBeyond was using a literal million echo returns out of 3x3 and 6x6 matrices, but as the 3x3 only produces 27 echoes for early reflections I hadn't bothered to implemented it as a full Householder matrix (involving multiplications for non-4x4 matrices, and some of the feedback being inverted, and the 3x3 doesn't actually use local feedback even)\n\nAnd then I tried it\u2026 the video shows the two files I made to see what would happen, and the one done like it is in kBeyond is sparkly and complex, and the one with the real Householder is a quantum leap in depth and realism.\n\nAnd that's what's in kCathedral4, along with the Pear2 algorithm for filtering the deep-field reverb feed. It can do deep verb even unfiltered and bright, but when you mute it down to Bricasti degrees of darkness, you get a spaciousness that's beyond anything I've had.\n\nThe algorithm is generated using the genetic algorithm: trying 'populations' of reverb constants and measuring how well they produce a result. I've learned things like how the total delay lengths of matrix paths added together are what need to add up to primes to sound right: it's been really complicated, but worth it. I'm going to have some amazing small rooms and loud halls too, chambers, you name it. We're just going back to the Cathedral, because it's a really cool sound. You could put choirs or pipe organs or Tangerine Dream in it, but you can also put whatever you like in there. Doesn't matter what you start with, you'll end up with sound you can bathe in.\n\nI'll keep working: remember, each reverb plugin is designed around a dedicated algorithm tuned using the Genetic Algorithm to optimize for whatever its vibe requires, so the character of each one will be different in ways beyond just adjustment of the parameters. You do get parameters though: regen, filter for the deep field, loudness of the early reflection section. I'm working on extending this and look forward to doing more with it, but kCathedral4 is for you to enjoy right now :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kChamberAR",
    "description": "a take on tape echo into chamber echo",
    "tags": [
      "Latest"
    ],
    "slug": "kchamberar",
    "short_description": "a take on tape echo into chamber echo",
    "full_description": "While I'm working on other stuff, here's a wild little toy!\n\nI've been struggling to get the sound of the Abbey Road chamber, on my Monday streams. Pretty sure what I'm doing works better with larger spaces (which I'm certainly going to do) and that I've got to dig into other approaches for studio-friendly, nice chambers (which I'm certainly going to do, especially since I might get to my goal June or July and get the Bricasti to study).\n\nSo I didn't get the Abbey Road chamber, not really. But what did I get?\n\nWelcome to kChamberAR! Instead of a nice, classy Abbey Road chamber, it's a tape echo into a chamber gone terribly wrong. Or maybe it won't seem so wrong\u2026 but it's dirty, aggressive, and wild. If you crank the regeneration up it distorts and goes into infinite echo. If you crank up the bass cut, it filters way harder than the real Abbey Road STEED unit ('cos why not), and if you mess with the delay time, you get wild pitch modulations, all of which feed into the little, boxy, room.\n\nI honestly think this works better as an instrument and didn't work as a capital-C Chamber, much less the Abbey Road chamber. There's better to come, as far as serious chamber emulations go. When I do meet my goal and get the Bricasti to study, chambers will be first in my investigations, and I'll get to the bottom of the problem.\n\nOh\u2026 because the delay works like you're speeding up the tape more and more, if you crank it all the way to the left for minimum delay, it's probably eating more CPU. For predelay keep it in the middle and it should be fine for that. The reason it goes that much faster is, you can tune the delay to bass notes like a monstrous Karplus-Strong oscillator which then drives (overdrives) a small room. And this is such a horrifying, awesome sound that I had to let you have it.\n\nI'll have more legit stuff coming soon. For now, have fun with the new monstrosity. It won't behave, but nothing you have will make noises like it, and that's always part of what I do :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kCosmos",
    "description": "infinite space ambient, or titanic hall",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kcosmos",
    "short_description": "infinite space ambient, or titanic hall",
    "full_description": "It's not the first time I've tried to make a space ambient type reverb, but there are a number of firsts here nevertheless.\n\nkCosmos uses the 5x5 Householder matrix design I've used in recent reverbs like kGuitarHall, but rather than just finding a new arrangement of delays, it's riding a wave of new developments in reverb development. Rather than taking days to evaluate ten or a hundred thousand possible reverbs before critical listening, I revamped the program I was using, to hundreds of MILLIONS per night. Since the method is not unlike the genetic algorithm in that it's trying variations against fitness functions, this wildly improved tone quality.\n\nI went from evaluating recurring delay lengths based on where they were in the reverb tail, to mapping out spacings between echo returns, and evaluating the distribution of these spacings. This changed the whole texture of the reverbs from 'artifical' to more of a natural, invisible spaciousness that blends in better.\n\nAnd I went from running an extra 3x3 matrix just for early reflections, to running no early reflections at all, to running a whole other parallel unfiltered 5x5 matrix\u2026 JUST for early reflections. That's the EarlyRF slider, which can be used in conjuction with Dry/Wet, predelay, and the Filter control, to help transition from the raw sounds to the deep reverb space.\n\nI've added an FIR brickwall filter for the main regenerating section (though not inside the regeneration) and worked out my own sinc interpolation, and have a plugin coming along those lines, and used it for the regenerating filter section. I've included a simple averaging for non-full-crank settings of this filter, so kCosmos can switch on the fly between extended highs at infinite sustain, and a maximal-depth version that gradually loses highs in a way that sounds like distance.\n\nAnd I've refined the concept of 'gradually restraining the infinite sustain when new audio is coming in', so that in normal use as an infinite verb, you can layer stuff all day without the reverb running away with you. It's so effective that subtle noises can have a slight feedback bias: when you start with very quiet layers, they will creep up in volume to about -18 dB total, at which point they'll balance. So it's an infinite reverb specifically designed for live performace as an ambient musician doing deep space explorations, and it'll adapt to the way you play audio into it.\n\nAnd lastly it has both CreamCoat style undersampling, and CrunchCoat style, at the same time. Meaning, set to full crank it uses the CreamCoat method for applying Bezier undersampling without artifacts, and as soon as you go away from Derez of 1.0, it switches to the continuous adjustment range of CrunchCoat, sometimes described as 'cursed digital derezzing'. Except this time, the Derez control is control-smoothed, and use of the filter tends to mask the 'cursed' quality completely. It's just that the giant reverbing space can be cleanly pitched up and down as you go, or dropped to an eerie rumble and murmur.\n\nThere will be further experiments, but kCosmos stakes out a position as the most epic (and playable) Airwindows reverb. I hope you like it :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "kPlate140",
    "description": "a next-generation Airwindows plate reverb",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kplate140",
    "short_description": "a next-generation Airwindows plate reverb",
    "full_description": "Time for the big plate!\n\nkPlate140 is a lot like the smaller version, kPlate240, to the point that you might ask, what's up with that? Can't you simply make the 240 version sustain a little longer, maybe dial in some EQ, and not need to have a whole separate plugin?\n\nMuch like kPlate240, kPlate140 is a 5x5 Householder matrix with a plate-style delay density, Pear filters, and the use of SubTight. Where a lot of reverbs out there will be different EQ settings etc. on one basic algorithm (or a small number of them), it's true that it's got the same sliders doing the same things and if you can use one you can use the other\u2026 but the way these are designed involves generating thousands or hundreds of thousands of possible Householder matrices and testing them to try and work out what would give the best sound. That means they've got better during the time I've developed the technique\u2026 but it also means each new 'best algorithm' is unique. Sometimes there's a lucky break, like the original Galactic one (a 4x4) that was used again for Galactic3, sometimes not so much like the original kCathedral that people felt was metallic.\n\nAnd then when you're trying to do a literal plate which very much has its own sound qualities\u2026 and some years ago I did build a DIY real-world physical plate reverb, so I'm familiar with the sound though I couldn't get it up to EMT140 quality and didn't keep it\u2026 well, dialing in the sound involves getting all that stuff tuned up uniquely to the plugin in question.\n\nkPlate140 isn't meant to duplicate kPlate240. My take on the gold foil reverb is that it's cloudier, more understated: from reports of people who use both sorts, it's got a thing of its own but it's the big 375 pound monster (600 pounds packed for shipping) that really gets people's attention. And so, kPlate140 takes a different angle, with all of its parts tuned for that flashier, deeper, more fiery sound that's not part of the more subdued 240.\n\n140 plates come in all sounds and varieties: much like with the earlier attempt at plate reverbs, kPlateA through D, each one will sound different. kPlate140's the one that is yours, much like kPlate240 is. I'm hoping this will come in handy in situations where you're looking for a plate reverb plugin, but are going for that BIG sound. You get to have both! Have fun bathing in reverb :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "kPlate240",
    "description": "for the texture of smaller, gold foil reverb",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kplate240",
    "short_description": "for the texture of smaller, gold foil reverb",
    "full_description": "kPlate240 is the result of combining many recent Airwindows developments, with other stuff often too strange to work directly as plugins. Mind you, you can still have plugins like SubTight, the Pear filter and so on, but if I was able to track who was using what, you'd see a million instances of plugins like kPlateA and nobody doing anything with SubTight, and most of the uses of Pear would be inside other plugins like ConsoleMC.\n\nBut sometimes, there's a purpose to achieve, and some odd plugin turns out to be able to get the sound, and in this case the purpose was simple. Both the gold-foil 240 plate, and the big 140, do not do damping in the sense a digital reverb does damping (by turning down the regeneration, without which any digital reverb gets very short indeed). Instead, they have a big physical panel that's brought near the vibrating plate, and it couples acoustically with the plate to damp it. But this is far from linear! And it'll be distorting low frequencies preferentially, nonlinearly, and the whole thing will produce a sound that's instantly recognized, but is really a bit of a mess. And it seems to me the gold foil version is all the more messy, even though it's portable. It's this lush cloudy thing, darker, oddly murky, and how would you go about making that sound?\n\nIn this case, it's with a custom 5x5 Householder matrix (already an unusual Airwindows technique, and a set of delay times that haven't been used before, with a plate-style delay density), those Pear filters, and SubTight. The development was twitchy, making controls like Regen restricted to a narrower range of adjustment so things wouldn't blow up. And eventually kPlate240 took shape.\n\nThis is not the big awesome famous plate reverb, it's a different sound like the gold-foil little brother. The idea is that kPlate240 can be tucked into mix spaces and won't dominate, but will cause a sonic bloom that can be helpful. It's a plate sound that's meant to be used with as much damping as you like: on top of that, as a more modern Airwindows reverb, you can use the DeRez control to both restrict the treble of the reverb, and scale the verb size up (lowering DeRez does both these things). Because DeRez is in play, it will work in consistent ways at any sample rate, even silly high rates: the higher your native DAW sample rate, the more 'steps' you'll get in the DeRez as it reconstructs the waveform using Bezier curves (which I find is an interesting-sounding texture for reverbs).\n\nPredelay gives you plenty of range for 'slapback, only it's a damped plate reverb' sounds. Wetness lets you go from dry, to both at full volume, to all-wet. It sounds surprisingly coherent at full wet, but that's because the damping plate cleans it up a lot. Would a 240 be your only reverb? Perhaps not, but when you can have the option from the click of a mouse, why not? Might not be the gold standard for big reverb, but this should find uses :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "kPlateA",
    "description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "tags": [
      "Latest"
    ],
    "slug": "kplatea",
    "short_description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "full_description": "So I just happened to turn my efforts to plate reverbs last week, since the internet exploded over some plugin drama and some of the plugins in question just happened to be models of some specific plate reverbs in a famous place: atop Abbey Road Studios. There were four of them, and I'm sure I can't make a plugin to model those exact ones, as the rights to the name are probably all tied up. And I wouldn't suggest that I tried to make reverb plugins MORE realistic than those made by this company with rights to the name. That would be rude! :D\n\nBut I bet nothing is stopping me from making plugins and using the LETTER. And indeed nothing is stopping me from finding examples of dry sound and then the sound of these other plugins, and using that as a reference to the lettered EMT plate reverb on top of Abbey Road, or indeed figuring out that this other company rather overprocessed its stuff and finding ways to get a similar effect that's cleaner, deeper and more intense.\n\nIt's actually a really interesting puzzle to do this sort of thing\u2026 especially when you don't really have good reference yet, as it's all happening so fast. But now you have kPlateA. And in it, you might just have a new best plate reverb. It's using multiple fancy Householder feedforward matrices, all sorts of filtering, undersampling to make it useable at 96k and 192k, and seeing as it was developed on my antique Macbook Pro running Snow Leopard, I daresay it both sounds better and runs better than its competition.\n\nOh, one more thing: you get to own it. And by that I mean, not only do you get it maintained and supported for free (thanks to a thriving Patreon and those who help me), but it is also MIT-licensed open source code. So you get to own it, in the sense of you can take the code and skin it with a big GUI with pictures of plate reverbs with funny waves drawn on them, if you feel that is really necessary. You just have to credit Airwindows.\n\nOr, you may find that the way this can sit in the mix, means the GUI with pictures of plate reverbs with funny waves drawn on them, isn't really as necessary as you thought it was :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kPlateB",
    "description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "tags": [
      "Latest"
    ],
    "slug": "kplateb",
    "short_description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "full_description": "In the continuing saga of 'Chris makes plugins in a competitive marketplace', kPlateB is one heck of a statement!\n\nThis is the follow-up to the plugin kPlateA, which I've talked about recently. It sought to get the sound of a famous EMT plate reverb on top of a famous recording studio, through study of internet examples of that sound. Turned out to be a little more complicated than that, but who's counting? As a result, you've got kPlateA, and it's a big deep plate reverby sound.\n\nPlate B from that studio is said to be shorter and brighter, and indeed the examples you can find of that sound in plugin form draw the plate in a different color (I believe in the real world they're all big steel objects and none of them are painted nor are any of them the gold foil EMTs, but artistic license) and in other plugins the algorithm's EQed a bit different and the controls give you shorter reverb times.\n\nAirwindows is different.\n\nIn kPlateB, as with ALL different reverbs that will ever exist in the 'k' section of Airwindows-land, the fundamental algorithm is different, even the topology and basic code of the verb is different, and notably both of these use the following technique: my studio computer grinds away for hours or days to generate a 3x3 Householder matrix for allpasses that can be used two ways, horizontally and vertically. Same allpass values, but L and R see them in completely different combinations. And then, even more hours and days of grind for a 5x5 Householder matrix that does the delays of the actual reverb, the same way: L and R see completely different combinations in the same matrix which then has the sides crossfeed into each other in a way that's custom for each set of matrices. So the guts of the thing are totally different each time, and will continue to be (technically this means I could make a celebrity a bespoke space for just them to use, but they'd have to make it worth my while to NOT share that data with the open source world ;) )\n\nSo, you've got kPlateA, and it sounds big and platey and deep and metallic and not unlike a big ol' plate reverb.\n\nkPlateB sounds not unlike MAGIC.\n\nIt really freaked me out in the nicest way, how good this one sounds. Audio put through it just blooms, coming alive and sitting in a wonderful space. It's gonna be a hard act to follow\u2026 except that there will be a place for each of these, and a place for more traditional acoustic spaces I come up with later. It just so happens that kPlateB really does the 'envelop sound in a lush, vivid atmosphere' thing really well. I think kPlateA sits back a lot deeper and sounds more old and retro. kPlateD will have to sound even more retro as it models a tube EMT-140, not custom hybrid ones. kPlateC will need to be even shorter and brighter to properly emulate the famous real ones out there. All will have to have custom algorithms and matrices.\n\nI'm doing this as fast as I can, and I think it's coming along quite well. Sky's the limit, really. Hope you enjoy the sound of your new reverb plate as much as I enjoy it, having made it :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kPlateC",
    "description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "tags": [
      "Latest"
    ],
    "slug": "kplatec",
    "short_description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "full_description": "Onward with the plate reverbs! kPlateC is an interesting contrast to kPlateB, and an example of how Airwindows k-series reverbs work. Since there's no GUI you can't be fooled by different visual depiction of the two plates, so they're exposed as just sound. These are meant to resemble real things, and the real Plate C is said to be even shorter and brighter than the real Plate B. This is on top of them all having an array of controls (I've been asked to flip Damping over so higher numbers equal more damping, but that would apparently be contrary to how the real ones are laid out, not that you're likely to go to London and see\u2026 nor I, for that matter, though it would be fun)\n\nSince kPlateB came out very nicely, how is kPlateC different?\n\nObviously it's voiced a bit differently to match the real one, but unlike other plugin approaches, the Airwindows plates each run completely different reverb matrix algorithms. I'm not talking about things like saturations etc (though kPlateD, being a tube reverb, has to have completely different software for that than A, B and C which are  hybrid circuitry). What I mean is, all the little delays inside are different (normally so tricky that you come up with one great algo and then adapt that to each flavor of plate).\n\nAnd so, kPlateC is like kPlateB and yet completely different. The room, the space it makes is shallower, wider, a different shape. There will be things where it works way better than kPlateB, and vice versa, because they're just plain different flavors. If a note resonates on one plate, its brother is going to act completely different and won't highlight that note at all.\n\nThis will be the case for the whole k-series of reverbs as they expand. Hope you like it. Back to work :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kPlateD",
    "description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "tags": [
      "Latest"
    ],
    "slug": "kplated",
    "short_description": "a plate reverb, not unlike its namesake atop Abbey Road",
    "full_description": "We're not done, but we're done with the lettered plate reverbs not unlike certain ones in a famous studio! And we're ending with a banger. This is kPlateD. This is the one that wasn't modified to run with hybrid circuitry, though it's still got the circuitry removed from the box to lower noise (ok, easier to do that with a plugin: I'm literally not putting fake mains hum or anything, in). This is the all-tube one.\n\nJust listen, and compare it with the others, notably kPlateA which is also more of a 'long deep' plate.\n\nYou're not going to get the sheer scale of the difference off competing plugins, and these are free open source and if fixes are ever needed everyone will get fixes or updates for free, forever, with source code so you could maintain it yourself: how much is that worth to you? Probably not as much as being extorted for software, because people will always pay more money if they're backed into a corner and forced to. But you know, I don't need ALL of the money from all of the people. Just enough to live, and buy a Neve console to put in my home :) (just kidding)\n\nSo even though it's purely software, the tube circuitry is plainly obvious as a contrast to the other three with their hybrid sound. How is this done? Partly through tuning everything (and selecting the actual reverb matrices) to suit the target sound. And partly through literally coding each of them a little differently, with kPlateD being by far the most distinct, its internal saturation algorithms being a whole different type.\n\nSo if I can do this, why didn't I do it with kPlateA, B and C? For the same reason the Beatles album Abbey Road and the Pink Floyd album Dark Side of the Moon wouldn't automatically be better if they were cut on the old REDD consoles. Each sound serves a purpose. They convey distinct atmospheres, which your ear can learn and remember, so rather than struggling to adapt all manner of strange controls you can do 'this should have kPlateB' and then concentrate on what music's meant to go into it. Hope you enjoy the atmosphere of the classic kPlateD :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "kStation",
    "description": "a realistic small room modeled after David Bowie's vocal reverb",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "kstation",
    "short_description": "a realistic small room modeled after David Bowie's vocal reverb",
    "full_description": "Turns out I'm getting asked for smaller reverbs for a reason.\n\nComparatively small spaces can merge with a sound in an interesting way. Rather than adding a sustain, the reverb can turn into part of the tone, thickening and glamorizing it to the point that, if you listened to just the dry signal, it'd be a bit shocking\u2026 especially if it was recorded in a dead place like a studio or under a tent of blankets or what have you.\n\nThis is kStation, another extension of Airwindows reverbs in the direction I'm going. It takes everything you had in kGuitarHall2, the unusual midrange depth that comes across even on a cellphone, the ability to position your source in the virtual room, and it brings it to a tiny space that acts like a room, but isn't inspired by one.\n\nBecause it's inspired by David Bowie's vocal sound on Station To Station, and that's probably one of the very first digital reverbs.\n\nNo effort is being made to emulate vintage digital reverb things. None. There's a kind of darkness out of those old discrete converter circuits: that's handled instead by Bezier undersampling and filtering. You can get funny overtones by setting kStation's filter over 0.5 (like the undersampling, the Bezier filter goes two ways) but they aren't vintage-digital overtones, they're something else, something new. You get depth but it's not from modeling an antique reverb, it's from where Airwindows algorithm development is going.\n\nIt's a unique algorithm, generated to do just this, and it's there to merge with your vocal (or whatever else you wish) and sound like a hit record. Specifically, it wants to give you the richness and sumptuousness of Bowie circa Station To Station. You'll have to sing or it won't work, but this and perhaps some Silken (also a nice trick for that stuff) and you can get a giant head start.\n\nThere'll be more, but this one is gonna come in real handy. I hope you like it :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "LeadAmp",
    "description": "an amp sim with a clear, penetrating, vocal tone",
    "tags": [
      "Latest"
    ],
    "slug": "leadamp",
    "short_description": "an amp sim with a clear, penetrating, vocal tone",
    "full_description": "LeadAmp acts like one of the \u2018normal\u2019 ampsims, but leaning more towards the vocal, fluid, Vox-y side of things. It\u2019s a distinctive voice and even though they\u2019re all pretty simple and direct, it\u2019s really obvious how LeadAmp isn\u2019t the same flavor as FireAmp or GrindAmp: distinctly different vibe even though they are all cut from the Airwindows super-direct amp sim cloth.\n\nThe Airwindows amp sims are all fairly simple designs: highpass, cascading gain stages with ultrasonic filtering between them (often tuneable so you can suppress aliasing even at low sample rates, but they're meant for 96k use) and a cab simulator on the end that's dynamically convolved but also a truncated, brief section of tone color.",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "LilAmp",
    "description": "a tiny amp sim, like a little bitty practice amp without that much gain",
    "tags": [
      "Latest"
    ],
    "slug": "lilamp",
    "short_description": "a tiny amp sim, like a little bitty practice amp without that much gain",
    "full_description": "Here\u2019s a cute little monster for you! LilAmp is an alternate take on my amp sims (resurrected from way back when, and brought up to speed to some extent). Unlike something like FireAmp or GrindAmp, this one\u2019s much lower gain and acts like little practice amps, but the kind with a lot of loudness and sonority.\n\nYou use this when you want more of a clean, articulate effect, or when you\u2019re trying to highlight the treble and midrange (for instance, for leads, or to turn a snare into a loud, confined whack). You can make it be more mellow, too, but it will always be \u2018LilAmp\u2019 and speak up in a certain way. Something I found it useful for, is rhythm guitar that\u2019s kind of Stonesy and not all that saturated: you can get the right kind of midrange bark out of it.\n\nAll these amp sims (there are more coming, too!) incorporate the cab sim stuff I\u2019d also done back in the day, and they all have a rather special dry/wet control where backing off the full-wet sound gives you two stages of dry/wet, one for the cab sim and one for the amp sim. So things clean up in a distinctive way that\u2019s not like any other plugin, or anything you could get out of a real amp, for that matter. Treat LilAmp as a flexible way to get this type of sound, because it\u2019s way more interested in doing that, than in trying to mimic any particular literal amp. Rather than taking a real amp and EQing and shaping it to your mix, you take LilAmp and morph it directly until it does what\u2019s needed (this applies to the other Airwindows amp sim plugins, too).",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Logical4",
    "description": "a classic 2-buss compressor",
    "tags": [
      "Latest"
    ],
    "slug": "logical4",
    "short_description": "a classic 2-buss compressor",
    "full_description": "Logical\u2019s a compressor. It was designed from the start to work on the 2-buss in the most demanding conditions: people are really picky about their 2-buss compressors, and you can\u2019t mess around. The tone has to be spot-on and it\u2019s got to be transparent and able to let the music through. Additionally, when we\u2019re talking about \u2018tone\u2019 and something called \u2018Logical\u2019 you can see that it\u2019s going to be in the SSL style: there\u2019s a sparkliness which requires some extra coding attention.\n\nYou can approach compression duties from several directions with Logical. It has three distinct stages, and will entirely bypass stages it\u2019s not using. It\u2019ll go from 1/1 compression, up to 2/1 using just a single stage (for the utmost transparency): keep it below 2/1 ratio and use the threshold control to bring in the compression. This is a traditional 2-buss natural-sounding compression. From 2/1 to 4/1 ratio, you can get various behaviors and the two stages in use still sound very clean: the speed control will give you different kinds of \u2018swing\u2019 and spring-back out of the compression.\n\nThen as you pass 4/1 ratio and go off to a max of 16/1 (approximate, but that\u2019s the basic idea) there\u2019s a tone change, and as you get into crazy high ratios, Logical goes a little bonkers. This was NOT available in previous Logicals. The issue was, if you rely heavily on that final compression stage, things can get messy. You can push Logical until it\u2019s nasty and so full of energy it\u2019s forcing you to use the makeup gain to PAD the output, just to handle all the madness.\n\nThis time, and in honor of Logical going free VST format, it\u2019s not set up for only good behavior. This time, it\u2019s your responsibility to not blow up your outputs by thoughtlessly cranking the ratio. Consider it an audio chainsaw made of silk and glorious victories. Not every top-selling plugin got this much better when I revisited it. I\u2019m very pleased with how Logical4 came out, and I hope to see it talked about a whole bunch. This one\u2019s worth a lot of \u2018did you hear?\u2019.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Loud",
    "description": "distortion and demolition of air molecules, modeled",
    "tags": [
      "Latest"
    ],
    "slug": "loud",
    "short_description": "distortion and demolition of air molecules, modeled",
    "full_description": "Here\u2019s something rather special. What if you could distort like air molecules distort?\n\nI studied recordings of competitive tractor pulls, of Space Shuttle launches, various recordings that represented the way air can be mangled and break apart. The result is Loud\u2026 a step into a much louder world. It\u2019s a distortion that can be slammed to unthinkable \u2018heart of a supernova\u2019 dB levels, but can also be subtly introduced to give the sonic coloration of a big LOUD noise in open air. Makes for a very interesting \u2018glue\u2019 at zero boost!\n\nHere\u2019s how it\u2019s done: rather than apply a consistent transfer function like a normal distortion, Loud knows whether you\u2019re compressing the air, or letting it rebound. And if it\u2019s snapping back, it can do it with the speed of lightning, but if it\u2019s compressing, the air can be squished to practically solid, increasing heat. This extreme nonlinearity is why Loud sounds the way it does. It can sit on a whole mix to give it scope and authority, or it can be pushed harder on individual tracks like guitars and drums to amp up the ferocity.\n\nRemember, if you\u2019ve got it totally fuzzing out, you are probably already beyond any sound level achievable by human means. The completely fried sound of cranked-up Loud is not meant to seem like acoustic phenomena as we know it. It turns up that loud because I grew up reading Douglas Adams\u2019 \u201cHitchhiker\u2019s Guide to the Galaxy\u201d, and because in no other way can you accurately emulate a Disaster Area concert. :)",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Lowpass2",
    "description": "an unusual-sounding variable-slope lowpass filter",
    "tags": [
      "Latest"
    ],
    "slug": "lowpass2",
    "short_description": "an unusual-sounding variable-slope lowpass filter",
    "full_description": "This new version of Lowpass exists to fix a bug, but then I added stuff to it that makes it entirely a new animal!\n\nThe existing Lowpass tries to produce the same cutoff no matter what sample rate you use, but doing that meant high sample rates can never use a fully opened filter. Instead, you got roll-off no matter what. Lowpass2 no longer does that: the filter control goes from complete silence to wide open no matter what sample rate you\u2019re at.\n\nBut there\u2019s more: Lowpass2 still uses the interleaved IIR filters the original Lowpass pioneered (you\u2019ll notice subtle bleed-through of information near the Nyquist frequency, beyond human hearing, but also the open and involving sound) but now it can use from zero to four poles of filter: so you get a stronger effect, and a sharper roll-off!\n\nAnd that\u2019s important because with four poles of filter you REALLY hear what the Soft/Hard slider does. This interacts with the filter control (don\u2019t expect the cutoff frequency to stay the same) but what it does is vary the cutoff based on what sample value the input is. So you can either roll off harder for the peaks of the sound\u2026 or let \u2019em through more. Since it\u2019s an IIR filter the effect is gradual, but at four poles it\u2019s really noticeable.\n\nThat gives you two distinct tone colors for your lowpassing, plus special effects: in the video I demonstrate how cranking the control to Hard on pink noise can make it sound like wind noise where you\u2019re going incredibly fast. Lowpass2 is ideal for experimental tone shaping, and for sound design.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "LRFlipTimer",
    "description": "a utility that swaps Left with Right every few (1-10) minutes",
    "tags": [
      "Latest"
    ],
    "slug": "lrfliptimer",
    "short_description": "a utility that swaps Left with Right every few (1-10) minutes",
    "full_description": "I don\u2019t know how useful this\u2019ll be for you: a person asked me for it, and I was able to do it. This just does one thing.\n\nEvery few minutes (as in, one minute to ten minutes) it swaps the L and R channels. It sweeps them across in about a tenth of a second, to prevent any sort of pop or anything. When it\u2019s in LR or RL mode, it is 100% direct pass-through of the audio data word, so this is as clean as stuff like LeftToMono: it\u2019s one of those ones that just copies the data over, not even touching it. That said, this doesn\u2019t belong in your mix: the idea is that if you\u2019re mixing and you do stuff asymmetrically, it\u2019s like visual arts: you might need to flip the canvas left-to-right to see if things are off balance. That\u2019s all this plugin does. You set how many minutes will elapse before it flips or re-flips.",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Luxor",
    "description": "a re-release of another old Character plugin",
    "tags": [
      "Latest"
    ],
    "slug": "luxor",
    "short_description": "a re-release of another old Character plugin",
    "full_description": "Luxor is the Character plugin that\u2019s based off Manley impulses. It does NOT sound like a Manley anything. Instead, it does a weird and maybe cool thing: you might treat it like an amp sim or something, see what you can get out of it. Cranking syn drums through it ought to be good. It is what it is, namely \u2018a weird plugin not like anything else\u2019 and I hope you like it.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MackEQ",
    "description": "the Mackie distortion but with treble and bass controls added",
    "tags": [
      "Latest"
    ],
    "slug": "mackeq",
    "short_description": "the Mackie distortion but with treble and bass controls added",
    "full_description": "Folks who wanted Mackity, were looking to do some crazy things with it. We\u2019re taking an old Mackie 1202, pre-VLZ (I have one and know how to abuse it for effect) and we\u2019re mangling sounds with it. People wanted to take a kick drum, run it through one channel turned all the way up, patch that to another channel with crazy EQ and also turned up until ready to explode, and so on. Mackity was my best shot at just the input section of the 1202, with all the gain on tap but set up to work as close to \u2018clean\u2019 as these desks ever got: more so, in fact, as it doesn\u2019t add hiss and chip noise. Mackity was really good at sounding exactly like that, for those who like patching out of the insert points and getting a reasonably hi-fi sound out of their old 90s mixer.\n\nThere are plenty of people who know without the shadow of a doubt, that the very idea is ridiculous: that, compared to your Neves and APIs etc, these tiny budget mixers are garbage.\n\nThey will HATE this plugin. This is the same thing only with the garbage EQs in the 1202, the original two-band version, in which you can also overdrive the op-amps inside the EQs for good measure. Nothing about this sounds nice. You might want to pad down the output if you try: it\u2019s pretty horrifying.\n\nSome folks will go and immediately do that\u2026 and some of those, are very used to their original Mackie analog mixers, and know the exact tone they should get. And I can\u2019t tell you whether those folks will be happy with MackEQ, because I have the real one (not an 8-buss, but a 1202) to compare with, and I did not get a perfect exact clone. I got something else. I think it might be useful: certainly it can get the correct TYPE of tone, but I don\u2019t believe I have the true 100% 90s drum and bass madness exactly down. There\u2019s a texture in there, especially when you start aggressively distorting highs, that just defies being captured in a plugin, much like you don\u2019t really get a Marshall Plexi in the box.\n\nBut I captured SOMETHING in a plugin, and it\u2019s in the ballpark. If you can accept a slight re-voicing of the thing, or if your use of it doesn\u2019t involve torturing hi-hats and such in the first place, you might find MackEQ is useful to you. That\u2019s my hope. I daresay I\u2019ll find uses for it myself\u2026 including, use after certain secret projects I\u2019m still working on. Seems I\u2019ve devoted myself to the DnB flame. If only I could play the music, I\u2019d really be on to something :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MatrixVerb",
    "description": "a wildly adjustable, strangely colorful reverb for deep and flexible spaces",
    "tags": [
      "Latest"
    ],
    "slug": "matrixverb",
    "short_description": "a wildly adjustable, strangely colorful reverb for deep and flexible spaces",
    "full_description": "First, the Swiss Army Knife reverb! (a more cooperative one is to follow)\n\nThis is the result of some deep diving into Householder reverb algorithms (a way of taking four delay lines and turning them into infinite reverb). It\u2019s different from anything I\u2019ve done before, reverb-wise: extremely flexible, and incorporating some neat new tricks (for instance, the highs fall away at the same rate they would in a giant concrete cavern, allowing for REALLY huge-sounding spaces as well as convincing smaller spaces). It\u2019s actually two parallel Householder reverbs in the place of one.\n\nBut what would happen if you had them feed back into each other, not just into themselves?\n\nTurns out two different things can happen. One is a twisting and distorting of the sonic space into a distinctly\u2026 SPRING-like tonality. If you push the flavor knob towards 1.0, you increasingly get that clangy spring reverb thing, either subtly or overbearingly.\n\nThe other is this: apparently the opposite of a spring is a plate. Because when the Householder tanks feed back into each other inverted, they cancel out those same things and produce a whonging booming dense solidness that I remember, very well, from building a REAL plate reverb out of a big sheet of steel hanging from springs. I should say that real one I built was not a GOOD plate reverb\u2026 but I remember what it was like, and I can bring back the feel of it with this strange beast and its inverted broken feedback thing. This is one of those Airwindows plugins that lets you cut off your own foot with giddy abandon: all the bad settings are totally available. But if you know how to tune it, you might get something quite magical.\n\nYou get damping (from \u2018almost\u2019 infinite reverb down to very very damped), an overall tone control to handle whether the verb is bright or not, the \u2018flavor\u2019 control that leans either platey or springy or neutral, a room size that will go unreasonably huge even at 96k, and dry/wet. Stay tuned for stuff that\u2019s more \u2018preset\u2019 and always gives you useful/good settings: that\u2019s coming too. But this one is the reverb of doom: the most wild range of settings and tonalities and spaces, and the neat thing is apart from the global tone control at top, it\u2019s all about manipulating the heart of the algorithm in significant ways. None of the adjustments are arbitrary: for the range of useful tonality, this reverb is very simple to operate.",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Melt",
    "description": "a wobbly chorusy weird diffuse effect",
    "tags": [
      "Latest"
    ],
    "slug": "melt",
    "short_description": "a wobbly chorusy weird diffuse effect",
    "full_description": "As useful as utility plugins are, sometimes you just have to do something wobbly and weird. Here\u2019s Melt!\n\nTo explain what it\u2019s doing will be a little tricky. You can just download it and play with it, but if you want to know what\u2019s under the hood, here goes.\n\nSuppose you have a delay buffer. You can read \u2018echoes\u2019 out of the delay buffer. If you like, you can move them around, which changes their pitch.\n\nWhat if you started reading at one point, and stopped at another? You\u2019d get a delayed \u2018moving average\u2019, a series of samples combined. It would be duller, rolled-off.\n\nIf you took that section and moved IT, then you\u2019d have a rolled-off, darker delay tap that changed pitch.\n\nNow, what if you took all the start points and all the end points, and made them all wobble and sway around independently, so that the shifting delay taps also changed in tone color and volume even while they pitch-shifted around?\n\nWell, that\u2019s Melt. It\u2019s pretty freaky, when cranked way up. You can run a long extended delay, causing it to resemble a strange retro ambience effect, or you can tighten it right up so that you have more of a chorusy thing. It probably should always have a bunch of pitch shift depth, otherwise it\u2019s a mite boring. You can include dry, or just crank up the wobbly weirdness: should be nice on pads and things, or anything that has to be more dark and diffuse and unpredictable.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MidAmp",
    "description": "a clean amp sim meant to work like a loud Twin or something of that nature",
    "tags": [
      "Latest"
    ],
    "slug": "midamp",
    "short_description": "a clean amp sim meant to work like a loud Twin or something of that nature",
    "full_description": "MidAmp is another amp sim, this one going for a high-powered clean combo sound. You know, a Twin kind of sound. It\u2019s got a wide range of EQ and can be rolled off real far, and it can be extra bright and spiky if you want that. I demonstrate it in the video on a Tele part, then unexpectedly to dirty up a thumping bass (which it does really well) and lastly on some very aggressive drums to make them even crazier.",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MidSide",
    "description": "the other side of the EdIsDim mid/side conversion utility plugin",
    "tags": [
      "Latest"
    ],
    "slug": "midside",
    "short_description": "mid/side conversion utility plugins",
    "full_description": "It\u2019s always nice to expand one\u2019s horizons! You don\u2019t have to run the latest Logic to be able to use any plugin in mid/side mode\u2026 though you might need to do a little fiddling with settings.\n\nEdIsDim comes in two plugs: first use MidSide to convert your stereo track into mid/side (on left and right channels). Then apply your processing (there\u2019s a control with which you can balance the mid/side balance, which also means you can gain stage the M/S content into your plugin), then, go into EdIsDim (read it backwards) to convert back to stereo. The same control is present, and can reverse the gain staging you applied.\n\nSome good techniques include using it with Density to saturate the center and leave the stereo width lively, or getting a fresh take on a stereo reverb that\u2019s much wider than usual. But the real purpose is opening up funky routing techniques in your DAW: send the L and R to separate busses, do all manner of things with plugins that don\u2019t even have to be the same, or to line up (sample delay on just mid or side, anyone?) and merge them back to a stereo buss with EdIsDim on it. Or design weird synth patches that are heavy on the left with a lot of odd stereo behaviors, just to run into EdIsDim as an intentional part of the synth sound. Sky\u2019s the limit :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Mojo",
    "description": "a biggenator that also works as a loudenator",
    "tags": [
      "Latest"
    ],
    "slug": "mojo",
    "short_description": "a biggenator that also works as a loudenator",
    "full_description": "Happy accidents! What I was trying to do was add a blend control to Spiral, so I could make a Channel that let you go between the original, \u2018fatter\u2019 sound and the cleaner, more transparent but less fat Spiral sound.\n\nInstead, I got this (and another, complementary plugin to be revealed later). I coded up a refinement to the algorithm, where the \u2018curve factor\u2019 of Spiral got modified by powers of itself, or powers of powers of itself\u2026 up to the fourth power, which turned out to sort of have MAGICAL powers, or at least that\u2019s how it seemed when I worked out what was happening to my test sine waves.\n\nMojo\u2019s the result. It\u2019s a neat little algorithm that doesn\u2019t sound anything like Density, or Spiral. Instead, it sounds like concentrated HUGE. Even at no added boost, it makes the sound a lot fatter (much like what was asked: a more refined algorithm that still gets the fatness of Density). But then there\u2019s more\u2026 when you start slamming it.\n\nTurns out this simple little algorithm, one single transfer function without extra parts or switches or added tricks, soaks up input gain like nothing I\u2019ve seen.\n\nUnderstand, it\u2019s not \u2018clean\u2019. It thickens and fattens the sound without any real EQ change, by where it puts the energy and how it rounds off peaks. It\u2019s got a weirdly effective way of being able to round stuff off and then turn it into a mostly flat-topped output, like full-on digital clipping style loudness, but with neatly sculpted little curves going in and out of the flat stuff. It\u2019s also such a nonintuitive algorithm that I wasn\u2019t able to find an ideal spot to just straight clip it\u2026 so, like original Spiral, if you push beyond its limits it\u2019ll start wavefolding on you (which can be an indication of too much slam). But the sweet spot is unusually wide and forgiving, and it sounds really loud while you explore that maximum limit.\n\nMojo is an accident, but it\u2019s also an obvious \u2018popular\u2019 plugin. Check to see if you\u2019re okay with the extreme fattening effect it has, since it does really have a sound and isn\u2019t what you\u2019d call clean, even in the absence of extra boost. But if you were already looking for some \u2018mojo\u2019 to be added, this Mojo might be just the type\u2026 and, like the original Density algorithm, this one is likely to show up in other plugins as an added saturation element, because it\u2019s got a distinct flavor that will help certain plugins do their thing.",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Monitoring2",
    "description": "Monitoring, but with Dark as the wordlength reducer",
    "tags": [],
    "slug": "monitoring2",
    "short_description": "Monitoring, but with Dark as the wordlength reducer",
    "full_description": "Here\u2019s a little update for users of Monitoring! Monitoring is the end-of-2-buss plugin that allows you to check your mix in lots of different ways. You can get 24 or 16 bit output out of it (as in, direct to CD format for saving as 16 bit), lots of reference sounds like SubsOnly, SlewOnly, PeaksOnly that will let you hear your mix in a very different way (if it\u2019s way out of balance when you can only hear the deepest subs, or the brightest highs, you can re-adjust things.) PeaksOnly shows you a fake and unnatural sound that will enhance the inaudible peak energy and highlight anything that might be too loud because it\u2019s heavy on peak energy. You\u2019ve got four variations on Cans for headphone mixing (which gives you crossfeed in the form of allpassed, blurred audio a bit like what PeaksOnly does), you\u2019ve got mono and side checks, narrowed-bandwidth checks like Aurat (including one-side mono versions to more closely resemble use of a real mono mix-check speaker) and even utilities like VoiceTrick, which gives you mono with one speaker out of phase: position a mic exactly between the speakers and you can lay vocal tracks without headphones if you need to (not perfect, but it should work).\n\nIn short, Monitoring, but with one little change. Everything is the same, but now Monitoring2 uses Airwindows Dark for the wordlength reducer. This is different from the original Not Just Another Dither, in that it will give you deeper blacks in your silences and darker, warmer tones than the original NJAD would do. Dark is not really a dither: it makes its choices (for wordlength reducing) based only on what will create less hiss, noise and highs in the final output. This won\u2019t be right for everybody, and is subtle no matter who you are, but it might be just the thing if you have a retro aesthetic, are into the whole cassette-release scene, or just want to produce music that sounds as unlike the modern DAW scene as you can get.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Monitoring3",
    "description": "Monitoring, but with Ten Nines into Dark as the wordlength reducer",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "monitoring3",
    "short_description": "Monitoring, but with Ten Nines into Dark as the wordlength reducer",
    "full_description": "Here\u2019s a little update for users of Monitoring! Monitoring is the end-of-2-buss plugin that allows you to check your mix in lots of different ways. You can get 24 or 16 bit output out of it (as in, direct to CD format for saving as 16 bit), lots of reference sounds like SubsOnly, SlewOnly, PeaksOnly that will let you hear your mix in a very different way (if it\u2019s way out of balance when you can only hear the deepest subs, or the brightest highs, you can re-adjust things.) PeaksOnly shows you a fake and unnatural sound that will enhance the inaudible peak energy and highlight anything that might be too loud because it\u2019s heavy on peak energy. You\u2019ve got four variations on Cans for headphone mixing (which gives you crossfeed in the form of allpassed, blurred audio a bit like what PeaksOnly does), you\u2019ve got mono and side checks, narrowed-bandwidth checks like Aurat (including one-side mono versions to more closely resemble use of a real mono mix-check speaker) and even utilities like VoiceTrick, which gives you mono with one speaker out of phase: position a mic exactly between the speakers and you can lay vocal tracks without headphones if you need to (not perfect, but it should work).\n\nIn short, Monitoring, but with one little change. Everything is the same, but now Monitoring3 uses Airwindows Ten Nines into Dark for the wordlength reducer. This was originally built into Console8: I've decided that was silly, especially since I make use of Monitoring a lot and had overlooked its usefulness. So if you've never heard of these, they're final dithers (especially to 24 bit) with lots of interesting monitoring-check options, and 1, 2, and 3 all offer different wordlength reduction, being otherwise identical. Console8 is also being updated in place, the only change being that it no longer dithers to 24 bit. Instead, you're to use the dither in Monitoring, or whatever else you wish.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "MSFlipTimer",
    "description": "a utility that swaps stereo with mono every few (1-10) minutes",
    "tags": [
      "Latest"
    ],
    "slug": "msfliptimer",
    "short_description": "a utility that swaps stereo with mono every few (1-10) minutes",
    "full_description": "Here's a request I got, a variation on one that's in the utility category. While I ramp up to more interesting stuff I can do some of the background work while putting out the thing that someone asked me to make :)\n\nEvery few minutes (as in, one minute to ten minutes) MSFlipTimer switches from stereo to mono. It does this in about a tenth of a second, to prevent any sort of pop or anything. When it\u2019s in stereo it is 100% direct pass-through of the audio data word, so this is as clean as stuff like LeftToMono: it\u2019s one of those ones that just copies the data over, not even touching it. That said, this doesn\u2019t belong in your mix: the idea is that if you\u2019re mixing and you tend to screw up the mono mix by doing too much crazy stuff with stereo, this'll repeatedly force you to grapple with it in its mono form.",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MV",
    "description": "a dual-mono reverb based on BitShiftGain and the old Midiverbs",
    "tags": [],
    "slug": "mv",
    "short_description": "a dual-mono reverb based on BitShiftGain and the old Midiverbs",
    "full_description": "Back in the days of really old school digital reverbs, there were a couple weird and obscure ones that had a special mojo. I\u2019ve got one: the original Alesis Midiverb. It\u2019s quite low-fi and only has RCA jacks, but there\u2019s a certain something about its sound.\n\nTurns out one of its secrets isn\u2019t so secret: the first two versions of the Midiverb don\u2019t have a multiply unit. That means you can\u2019t do certain reverb things correctly. Reverbs use a kind of delay effect called an allpass filter, which involves multiplying by 0.618 (I\u2019ve sometimes generalized this to \u2018the golden ratio to N decimal places\u2019, where N equals \u2018a lot\u2019). But the old Midiverb couldn\u2019t do that\u2026 so it made an \u2018allpass filter\u2019 by multiplying its stuff by 0.5. A bit shift.\n\nAirwindows fans will know that there\u2019s something special about a bit shift: especially in floating point, you can change volumes by 6dB pretty much losslessly. No, make that \u2018totally losslessly\u2019 since in floating point you\u2019re only changing the exponent and could change it right back and lose absolutely nothing: the mantissa is never touched.\n\nWhat would happen if you took this old school way of doing allpasses, and made a modern reverb out of it, using full-quality floating point to do it? What if you followed up by making the regeneration also strictly \u2018bit shift\u2019, increments of 6dB or infinite regeneration, losslessly? What if you added a way to roll off highs by averaging output samples of the allpasses, and did THAT entirely using bit shifts as well? And allowed for a big number of allpasses (26, all different increasing prime lengths), and gave varying treble rolloff by independently controlling which of the allpasses got the average treatment?\n\nWelcome to the infinite land of MV. This is nothing like a normal reverb, but it\u2019s got some great superpowers, not least of which is the ability to just sustain a \u2018bloom\u2019 forever. You can automate it by kicking the regeneration up to 1.0 any time you like.\n\nYou can dial in different degrees of highs roll-off using the bright control, or leave it at 100% shiny. Combining this with more restrained regenerations like 0.51 or 0.26 at medium-to-high sizes will give you very decent \u2018impossibly huge reverbs\u2019 of various characters. MV doesn\u2019t do early reflections or plausible spaces, just the infinite wash, but that\u2019s somewhat configurable.\n\nIt runs dual-mono, so you can dial down the size a bit (not too much or it\u2019ll get nasty, you\u2019re removing allpasses from the chain) and use it as an ambiance generator, and it\u2019ll put all reverb tails \u2018behind\u2019 the sounds that make them: centered stuff stays centered, wide or stereo stuff goes super-wide. For this reason it\u2019s very suited to use on auxes and submixes: you can add \u2018space\u2019 that\u2019s very pure-sounding\n\nIt can do full, 1/2, 1/4, 1/8 and I think 1/16 level regenerations: set the feedback and it will use the bit shift amount nearest below the setting, so no matter what you do it will always retain its audio character. And the whole thing runs inside a PurestConsole instance except for the regeneration, which is extra\u2026 which means that if you build up a wall of infinite reverb, it can\u2019t go into reverb runaway because distorted samples will wrap around and get quieter: you\u2019ll have to trim down the output, but this makes infinite regeneration super-usable without applying any kind of compressor or limiter inside the loop. Since you can also do zero regeneration and it\u2019s just a pile of allpasses, you can also do a \u2018gated reverb\u2019 effect if you like, which is good at airing up the mix but then getting out of the way.",
    "categories": [
      "Ambience"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "MV2",
    "description": "a dual-mono reverb based on BitShiftGain and the old Midiverbs, adapted to high sample rates",
    "tags": [
      "Latest"
    ],
    "slug": "mv2",
    "short_description": "a dual-mono reverb based on BitShiftGain and the old Midiverbs, adapted to high sample rates",
    "full_description": "Back in the days of really old school digital reverbs, there were a couple weird and obscure ones that had a special mojo. I\u2019ve got one: the original Alesis Midiverb. It\u2019s quite low-fi and only has RCA jacks, but there\u2019s a certain something about its sound.\n\nTurns out one of its secrets isn\u2019t so secret: the first two versions of the Midiverb don\u2019t have a multiply unit. That means you can\u2019t do certain reverb things correctly. Reverbs use a kind of delay effect called an allpass filter, which involves multiplying by 0.618 (I\u2019ve sometimes generalized this to \u2018the golden ratio to N decimal places\u2019, where N equals \u2018a lot\u2019). But the old Midiverb couldn\u2019t do that\u2026 so it made an \u2018allpass filter\u2019 by multiplying its stuff by 0.5. A bit shift.\n\nAirwindows fans will know that there\u2019s something special about a bit shift: especially in floating point, you can change volumes by 6dB pretty much losslessly. No, make that \u2018totally losslessly\u2019 since in floating point you\u2019re only changing the exponent and could change it right back and lose absolutely nothing: the mantissa is never touched.\n\nWhat would happen if you took this old school way of doing allpasses, and made a modern reverb out of it, using full-quality floating point to do it? What if you followed up by making the regeneration also strictly \u2018bit shift\u2019, increments of 6dB or infinite regeneration, losslessly? What if you added a way to roll off highs by averaging output samples of the allpasses, and did THAT entirely using bit shifts as well? And allowed for a big number of allpasses (26, all different increasing prime lengths), and gave varying treble rolloff by independently controlling which of the allpasses got the average treatment?\n\nHere's the new MV: all this, but adapted to high sample rates. The previous one's still there! But if you try to use it at 96k or 192k, the whole tone and delay time will be shifted to higher pitches, shorter reverb blooms (bloom being the type of SFX this is). MV2 uses undersampling so it can run at high sample rates and sound the same\u2026 and so it can use less CPU at the elevated sample rate.\n\nYou can dial in different degrees of highs roll-off using the bright control, or leave it at 100% shiny. Combining this with more restrained regenerations like 0.51 or 0.26 at medium-to-high sizes will give you very decent \u2018impossibly huge reverbs\u2019 of various characters. MV doesn\u2019t do early reflections or plausible spaces, just the infinite wash, but that\u2019s somewhat configurable. It's also a really primitive algorithm compared to some of my others: this is a case of me updating older stuff so it maintains usefulness in the modern day, it's not about me making a new greatest reverb. Though, you know, if you like it that's perfectly fine :)\n\nIt runs dual-mono, so you can dial down the size a bit (not too much or it\u2019ll get nasty, you\u2019re removing allpasses from the chain) and use it as an ambiance generator, and it\u2019ll put all reverb tails \u2018behind\u2019 the sounds that make them: centered stuff stays centered, wide or stereo stuff goes super-wide. For this reason it\u2019s very suited to use on auxes and submixes: you can add \u2018space\u2019 that\u2019s very pure-sounding\n\nIt can do full, 1/2, 1/4, 1/8 and I think 1/16 level regenerations: set the feedback and it will use the bit shift amount nearest below the setting, so no matter what you do it will always retain its audio character. And the whole thing runs inside a PurestConsole instance except for the regeneration, which is extra\u2026 which means that if you build up a wall of infinite reverb, it can\u2019t go into reverb runaway because distorted samples will wrap around and get quieter: you\u2019ll have to trim down the output, but this makes infinite regeneration super-usable without applying any kind of compressor or limiter inside the loop. Since you can also do zero regeneration and it\u2019s just a pile of allpasses, you can also do a \u2018gated reverb\u2019 effect if you like, which is good at airing up the mix but then getting out of the way.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "NaturalizeDither",
    "description": "deterministic dither that uses Benford Realness calculations for each sample",
    "tags": [],
    "slug": "naturalizedither",
    "short_description": "deterministic dither that uses Benford Realness calculations for each sample",
    "full_description": "Last and definitely not least in the dither-fest: Naturalize! This dither is often considered best by listeners. It works on every genre, at every sample rate. It adds no tonal color to the audio, and the noise it produces is quiet\u2026 but more than quiet, the noise of Naturalize has a fugitive quality where it seems to \u2018hide\u2019 behind the reverb tails, and once you start listening to the music it\u2019s difficult to hear there\u2019s any noise present. The sense of reality produced by the music is compelling enough that it doesn\u2019t draw attention to the noise floor at all.\n\nHow can this be? I kept the secret for eight years but now that Airwindows is supported by a Patreon, I\u2019m free to communicate how I did it, because my compensation is basically \u2018the number of people out there who think I ought to keep working in this field\u2019, and the more of those the better. I don\u2019t have to keep Naturalize just to myself anymore, because it helps the Patreon when I\u2019m generous. So, go ahead and download and use it for free (it\u2019s running at 24 bit, use BitShiftGain to get 16 bit out of it) and here\u2019s how Naturalize works.\n\nBenford\u2019s Law is a statistical technique: basically, it says that in lists of natural data, if you get rid of all the leading zeroes, the first digit other than zero is most likely to be \u2018one\u2019. That\u2019s no matter what scale the number is at: no matter how many zeroes you have to take away to get to the first number, it\u2019s more likely to be \u2018one\u2019 than, say, \u2018nine\u2019.\n\nIn fact, it\u2019s \u2018one\u2019 thirty percent of the time, and the other leading digits are progressively rarer. How much rarer? I\u2019ll give you a piece of the Naturalize code and the numbers I\u2019m using.\n\nbyn[0] = 1000;\nbyn[1] = 301;\nbyn[2] = 176;\nbyn[3] = 125;\nbyn[4] = 97;\nbyn[5] = 79;\nbyn[6] = 67;\nbyn[7] = 58;\nbyn[8] = 51;\nbyn[9] = 46;\n\nThis works on sample data that varies in logarithmic scale: fortunately, audio is already that way. Something like a reverb tail is perfect for Benford realness calculations! As the sound dies away, it SHOULD fall into just this sort of pattern: millions of sample numbers, scaling down to tiny near-zero values. It ought to be the perfect picture of Benford\u2019s law.\n\nHere\u2019s what Naturalize is. Every sample can be truncated in two directions: up or down, to the nearest value. So we do both, and then we run the Benford\u2019s Law calculation on each, and we see which choice will get us closer to that perfect \u2018realness\u2019 distribution.\n\nThen we just choose that direction :) that\u2019s it! Each sample, we always choose the direction that will bring us closer to Benford\u2019s Law.\n\nThis works on a statistical basis, to produce a collection of sample values that hold to what you\u2019d get if you directly sampled \u2018reality\u2019. It erodes unnatural qualities in the digital audio, and it\u2019s pleasing to listen to. There\u2019s no excess energy to worry about: it\u2019s always within one least significant bit of the target audio. And I might be able to improve upon it (I initially remembered it as having no noise sources at all, but it\u2019s using some noise to shake up the values a bit for better distributing) but as 2017 begins, doing this gives you the best sounding dither in the world. I\u2019d be happy to see if I can make it even better: support my Patreon, after all I came up with this thing in the first place, stands to reason I can develop it even further. Maybe I\u2019ll make it entirely deterministic, with no noise at all. I\u2019m sure I tried that already, but sometimes persistence pays off.\n\n(followup: Naturalize is the first example of what then became NJAD and went through a couple of revisions: the most current and best version of NJAD/Naturalize is the NJAD that is in the plugin Monitoring.",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Neverland",
    "description": "a re-release of my old Neve-style color adder, exacly as it was",
    "tags": [],
    "slug": "neverland",
    "short_description": "a re-release of my old Neve-style color adder, exacly as it was",
    "full_description": "Neverland is my old Neve emulation from 2007. It\u2019s out of the Character collection, and I\u2019m re-releasing these in 64 bit and VST because there are people asking me to do that. If I make it exactly like how it was, you can open old mixes and retain the settings you had, so the Character plugins are kept exactly the same (though they do get denormalization fixes, and the dithering to 32 bit floating point where applicible).",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Nikola",
    "description": "an Audio Tesla Coil plugin! Note: audio tesla coils don't sound nice",
    "tags": [
      "Latest"
    ],
    "slug": "nikola",
    "short_description": "an Audio Tesla Coil plugin! Note: audio tesla coils don't sound nice",
    "full_description": "Sorry/not sorry!\n\nNikola was, I think, an April Fool\u2019s plugin back in the day. In porting it to VST and making it available for the first time on Windows and Linux, I thought up some improvements, so its Voltage control now combines two different effects: at low Voltage it\u2019s brighter and airier with little roar and sustaining industrial scrunch. At high voltage it goes more midrangey and turns into a complete disaster area.\n\nAn audio Tesla Coil fires bolts of lightning at audio rate. This is based off real recordings of such a coil, but the thing is it\u2019s like trying to record fireworks: if you use good mics you just get a \u2018pop\u2019 because mics don\u2019t react the way our ears do. So, for the full effect, turn Voltage way up and run it into a lot of distortion and reverb.\n\nOr, you can use it to mangle individual tracks in a really industrial way: it\u2019s a bit unpredictable what you\u2019ll get, but the concept is of firing off impulse responses. But firing off lots of impulses gives you a convolution reverb: this is different, it retriggers the \u2018zap\u2019 at every zero crossing causing a different effect.\n\nIt\u2019s a legacy plugin based on old experiments, so it doesn\u2019t adapt to sample rates: in the video I\u2019m running it at 96K which makes it sound different. If you\u2019re at 192k it might be too pitch-shifted to be useful (though it\u2019ll track the notes in the underlying track without issue). It\u2019s useless to oversample this plugin, for this reason. If you can somehow undersample it that might be neat? Definitely one for the sound designers.",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "NodeDither",
    "description": "adjusta-TPDF-dither, like a dither flanger. Can do Paul and Tape settings",
    "tags": [],
    "slug": "nodedither",
    "short_description": "adjusta-TPDF-dither, like a dither flanger. Can do Paul and Tape settings",
    "full_description": "And just one more dither plugin before the eagerly anticipated Naturalize\u2026 (because who will care about these then?) \u2026NodeDither, the testbed upon which PaulDither and TapeDither were developed!\n\nI still think it\u2019s good to have those as separate plugins (for simplicity and purity of concept) but since the concept is \u2018TPDF made up of a sample of noise, and then a delayed version either normal or inverted\u2019, how can I not give out the tool I used to find things like TapeDither? This was coded to do something that wasn\u2019t possible: put a big delay in so there\u2019s a \u2018cancellation node\u2019 at around 1.5K, making the noise quieter there.\n\nTrouble was, all you get is comb filtering and no nice clear \u2018quieter\u2019 zone. That\u2019s why I experimented and found that four samples delay (inverted) gives you TapeDither, a nice softer noise. One sample inverted gives you PaulDither (in other words, a very bright one-pole highpass). Two samples gives you a neat silky texture which is still very bright. Eight samples gives you a thing kinda like TapeDither but even darker and beginning to sound flangey\u2026 you might call it CassetteDither, or maybe \u2018TapeDither for 96K\u2019.\n\nCall it what you like, because NodeDither lets you use all those and anything else, up to really extreme delays that give heavy, heavy comb filtering (flangeyness). You can reinforce lows rather than cancelling them through out-of-phase, and dial in dark moody dither noises that fit better with your project. You can tune the flangey note of the dither to your track. All manner of silly things can be yours with NodeDither :)\n\nAnd yes, you can make your noisefloor a flanger. I\u2019ve demonstrated in the video how to do this with automation. If people really REALLY need a flange dither, I can make one later, but Naturalize will not be delayed any longer and is due to come out this Wednesday. But hopefully the possibilities of NodeDither are worth having! Or, put it this way: if NodeDither is for you, you know who you are and you\u2019ve probably already downloaded it and are playing with the controls and thinking of how it would affect your creations.\n\nBecause, bottom line: this is still technically correct TPDF dither. It\u2019s just also an instrument, now. Have fun playing it :)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Noise",
    "description": "the Airwindows deep noise oscillator, as a sound reinforcer",
    "tags": [
      "Latest"
    ],
    "slug": "noise",
    "short_description": "the Airwindows deep noise oscillator, as a sound reinforcer",
    "full_description": "Noise started out as a plugin called Voice Of The Starship. It\u2019s an algorithm that generates brownian-motion noise which won\u2019t \u2018wander\u2019 into excessive DC offset, but without a highpass filter needed! The original Voice Of The Starship can be made to do any sort of deep rumble, including purely subsonic rumble that still works as an audio stream.\n\nNoise is like Voice Of The Spaceship, except it also triggers on input sounds. It can pretty closely track rhythms coming in, and you can combine it with underlying stuff with Dry/Wet, and the Distance control applies to both Dry AND Wet, to blend and darken them together.",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "NonlinearSpace",
    "description": "a flexible reverb plugin",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "nonlinearspace",
    "short_description": "a flexible reverb plugin",
    "full_description": "Nonlinear Space is special because it\u2019s got filter controls and acoustic space simulation in the loops: the usual allpasses and comb filters are just a little different here, designed to produce a deeper sound that\u2019ll blend into the mix better. It\u2019s the peak (so far) of all my efforts with reverb, it has its own sound, and it\u2019s free Mac/Windows/Linux AU/VST!\n\nIt\u2019s also got a nonlinearity control, which besides the easter egg polymorph duties can do two things: one, it can make louder sounds sustain longer. This is a bit tricky to set up and you\u2019ll want to feed it with consistent loudness, but you can get that \u2018sort of 80s gated\u2019 sound if you set it just right, especially if you\u2019re driving it from just a snare track or something sparse like that. Two, it can make louder sounds sustain less, which is the opposite. Using it that way lets you set it up as a reverb bed which doesn\u2019t die away, but you can replace the stuff in it by overlaying more sounds. It\u2019s the opposite of the first nonlinearity but it might come in handy for ambient purposes.\n\nThe sample rate thing really just tells it what buffer lengths to use: shorter buffers make tighter spaces. It should give a roughly consistent sound if you use the buffer corresponding to your sample rate, but then you can also be at 44.1K and set it to 96K just to have a huge stadium soundscape. Half the fun here is using it inappropriately, so I wouldn\u2019t dream of telling you how to use Nonlinear Space: I hope it\u2019s easy to get normal sounds with, and for everything else, just have fun.",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "NotJustAnotherCD",
    "description": "a next-gen wordlength reducers for 16 bit with DeRez",
    "tags": [],
    "slug": "notjustanothercd",
    "short_description": "a next-gen wordlength reducers for 16 bit with DeRez",
    "full_description": "",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "NotJustAnotherDither",
    "description": "a next-gen wordlength reducers for 24 bit with DeRez",
    "tags": [],
    "slug": "notjustanotherdither",
    "short_description": "a next-gen wordlength reducer at 24 bit, with DeRez",
    "full_description": "The votes are in, and the Internet has spoken. We\u2019ve got a name for the new noise shaping variant on Naturalize, after a January of wild suggestions. Seems most people simply wanted to emphasize that this was not your ordinary dither, not your daddy\u2019s TPDF.\n\nThis is the plugin (two, in fact) that beats all the other ones, including the original Naturalize. In normal use, this \u2018dither\u2019 (in fact it\u2019s not a dither at all: it\u2019s the Benford realness stuff from Naturalize, run with a noise shaper, and all the added random noise taken OUT) will make any fixed-point output sound like infinite resolution. It\u2019s AU, Mac and PC VST. It has a switch for 16/24 bit operation (defaults to 24) and a \u2018DeRez\u2019 control where you can get low-bit NJAD audio if you like, or if you want to audition its noise floor behavior.\n\nThe output levels are low, without a bunch of extra energy coming from the noise shaper: it\u2019s pretty well behaved, though like any hyper-performance \u2018dither\u2019 this is really meant for output formats. I don\u2019t think any harm can come from repeatedly using this in processing, but you can always use a normal TPDF if you want no change in tonal balance (plain TPDF dither only adds broadband noise: more opaque, but if it builds up it won\u2019t accentuate anything: dithers with a lot of high frequency energy can end up exaggerating that.)\n\n(followup: I added a 16/24 bit switch, and DeRez. Also, the most current version of this is in Monitoring.)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "OneCornerClip",
    "description": "an ultimate full-bandwidth clipper",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "onecornerclip",
    "short_description": "an ultimate full-bandwidth clipper",
    "full_description": "OneCornerClip works like this: it\u2019s like ADClip, except it spreads out the onset to clipping over possibly many samples. They converge upon the maximum possible output, which means the front edge of a clip takes on a continuous curve, moving its energy down into lower frequencies where the clippage is less bright and gritty, and more brutal and ballsy.\n\nThen, on departing the clip, the waveform just snaps instantly to the next unclipped value, with no attempt to soften: so your waveshaping ends up getting one corner (on departing the clip) and one rounded onset (entering the clip).\n\nWhat this means is, you can smash this with bass and it\u2019ll remain bassy. Smash it with midrange and it\u2019ll be middy. It shapes itself to the needs of your track, the distortion taking on the character of what you\u2019re putting in. And that means, you can slam stuff absurdly hard through this while retaining character\u2026 and you can retain size and scale and depth.\n\nI didn\u2019t really design it for 2-buss mastering duties though I\u2019m sure it\u2019ll find some use there. It\u2019s more a technical experiment that came to life and ate Tokyo. I think it\u2019ll do great for nasty industrial noise, for obliterating drum room tracks, just a whole bunch of uses: because this isn\u2019t a special purpose effect. It\u2019s a big fat dirty distortion, and that makes it more flexible than bright gritty distortions, in that it can wear your frequency balance like a mask. It IS still distortion, so you won\u2019t be using it for clean things. But it\u2019s also very good at soaking up brief clips without revealing itself, so it\u2019s not an insane choice for subtler use. I keep it at 0.618 for general use: that gets a good range of tones.",
    "categories": [
      "Clipping"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "OrbitKick",
    "description": "a bass generator and kick drum reinforcer",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "orbitkick",
    "short_description": "a bass generator and kick drum reinforcer",
    "full_description": "If you've seen modern recording, you've probably seen a little drumlike object in front of bass drums. This device is a 'SubKick'. It's basically an NS10 woofer hung in front of the kick, so it can be knocked around by subsonic bass waves, and transfer that to electricity for recording. It might or might not be in an actual drum shell, needs to be recorded with an actual preamp (these can have very high output though!) and acts as just another mic, but one that captures the very deepest bass in conjunction with your full drumkit and all your other mics.\n\nBut what if you could do that\u2026 without the pre? And also without the little drum shell, and without the NS10 speaker, and for that matter without the drumkit. Just 'deep bass subs' like a kick drum. On anything.\n\nEnter OrbitKick. This is basically a little physical simulation, like a planet orbiting a sun. When your input sound hits, it kicks this thing into orbit and it just spins, gradually slowing down as its orbit gets bigger and bigger. It's a little like a second-order sine wave, in that it's one of those Airwindows things that can get out of hand, which is what the controls are for.\n\nDrop is how fast the note will drop, from 'not at all' to real quick. Shape is the same, but makes it drop quicker to start off, so it's your taper: it gives you punchier attacks, rather than 'modular guy beeeoooo' kicks that have no impact. Start controls how high up your attack goes, in conjunction with Thresh, which is the threshold at which the note is kicked off\u2026 and Finish is where the note cuts off (set super low, you can get clicky releases).\n\nThat's all. If you want shorter kicks, make it drop faster, start lower, or finish higher. These controls do it all. That includes weird nasty effects where the note is triggered in a scruffy, inconsistent way. OrbitKick does NOT sound like a sample. It's like a living bass thing, able to put the lowest of bottom octaves on whatever percussive thing you like, or add a thump or 'pewww!' laser sound to any other thing so long as it has a distinct attack. And without a distinct attack it will still work but it'll make an unpleasant noise. And if you can only listen on a laptop or cellphone you may never hear what it does at all\u2026\n\nThis one goes out to DnB friends of mine in London :) rarely do I get a plugin that will wreak so much mayhem on really, really big sound systems. Be careful out there, or don't :)",
    "categories": [
      "Bass"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Pafnuty",
    "description": "a Chebyshev filter, that adds harmonics",
    "tags": [],
    "slug": "pafnuty",
    "short_description": "a Chebyshev filter, that adds harmonics",
    "full_description": "Pafnuty is a Chebyshev filter. What are those? Well, it\u2019s not much like your usual filter: you don\u2019t use this to roll off highs or lows (though under some conditions you might be able to do any of those things). A Chebyshev filter is like a mathematical formula. It works like this: if you feed it a sine wave (at exactly 0dB, or barely-clipping) it can generate entirely new sine waves to add to your sine wave. Which ones? Harmonically related ones. You can have twice, three, four times the frequency, all the way up to thirteenth harmonic.\n\nPafnuty\u2019s been rearranged in such a way that when you move the sliders to the right, the harmonics add. (The old version used simpler math but gave a slightly weirder arrangement: you\u2019d have to do 1.0 third harmonic, -1.0 fifth, 1.0 seventh and so on for them to add up in phase.) There\u2019s also an attenuverter (which is what you get with a dry-wet control when it also allows for inverse-dry-wet: something out of Eurorack-land, which also existed on the Delta Labs Effectron. Side note about the funky old Effectron: it\u2019s a delta-sigma converter like SACDs but cruder, and I\u2019d been wanting someone to make a DIY-able delay like that. It exists! The Princeton PT2399 chip, which is in lots of current synths and pedals such as the Dreadbox Erebus)\n\nBack to Pafnuty. What do you get when you run music into this sine-multiplying filter? If your audio has no frequencies that, multiplied, go higher than the sampling rate, you get perfect aliasing-free harmonic enhancement. The way the filter works, it absolutely doesn\u2019t generate anything higher than the multipliers it works with. It\u2019s a sort of color-adding harmonic enhancement where you can pick what kind of coloration you add (or subtract, since all the controls go both ways). If the frequencies do go higher than the sampling rate then they do alias, but the way Pafnuty resists adding extra harmonics helps it to resist aliasing and if you don\u2019t add lots of higher harmonics you can go very high in frequency, cleanly.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pafnuty2",
    "description": "a Chebyshev filter, that adds harmonics, and fits in the VCV Rack port",
    "tags": [
      "Latest"
    ],
    "slug": "pafnuty2",
    "short_description": "a Chebyshev filter, that adds harmonics, and fits in the VCV Rack port",
    "full_description": "Pafnuty is a Chebyshev filter. What are those? Well, it\u2019s not much like your usual filter: you don\u2019t use this to roll off highs or lows (though under some conditions you might be able to do any of those things). A Chebyshev filter is like a mathematical formula. It works like this: if you feed it a sine wave (at exactly 0dB, or barely-clipping) it can generate entirely new sine waves to add to your sine wave. Which ones? Harmonically related ones. You can have twice, three, four times the frequency, all the way up to thirteenth harmonic.\n\nWhat do you get when you run music into this sine-multiplying filter? If your audio has no frequencies that, multiplied, go higher than the sampling rate, you get perfect aliasing-free harmonic enhancement. The way the filter works, it absolutely doesn\u2019t generate anything higher than the multipliers it works with. It\u2019s a sort of color-adding harmonic enhancement where you can pick what kind of coloration you add (or subtract, since all the controls go both ways). If the frequencies do go higher than the sampling rate then they do alias, but the way Pafnuty resists adding extra harmonics helps it to resist aliasing and if you don\u2019t add lots of higher harmonics you can go very high in frequency, cleanly.\n\nNow that it fits into the VCV Rack port, you can run a sine LFO into it, and then all sorts of other LFOs into all the parameters, to produce a bizarre modular hyper-LFO, and that's why I knew this one needed updating :)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Parametric",
    "description": "three bands of ConsoleX EQ in advance",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "parametric",
    "short_description": "three bands of ConsoleX EQ in advance",
    "full_description": "Parametric is basically 3/4 of the EQ section of ConsoleX, except that it's half of the EQ section because ConsoleX has a dedicated highpass and lowpass per channel (and a special one for the buss). Except that it's one third of the EQ section, because ConsoleX also has Stonefire per channel (and on the buss), but you actually already have Stonefire! So you can run that into this and begin to get a handle on what ConsoleX will allow.\n\nExcept you actually won't, because in ConsoleX proper, Stonefire is also a multiband compressor/gate (an extension of what you get in big SSL consoles) in which Parametric (like this, but with a dedicated bass filter) runs parallel around the Stonefire and dynamics. So in that, everything in Parametric will be used as ways of bringing energy and power AROUND the dynamics so the sound opens up way more than you'd get in a real SSL, and then you apply Discontinuity (which you also already have now) to set the overall loudness cues.\n\nI promise I will explain all this when it's done. It seems I've been working real hard on all this and a lot happens and I'm sure it's a lot to keep up with. Them's the risks when you're trying to not imitate, but outdo the classics. For the time being, Parametric is roughly SSL-style EQ for very detailed tone shaping, in three bands designed to be recognizable to SSL fans except the Low Mid extends into the bass (so I could make sure Parametric works in Airwindows Consolidated, and in the VCV Rack version). The sound is Airwindows-style and I hope it's useful, but the ranges and resonances of the filters are designed to act something like a big SSL console so if you know to grab for the High Mid control and tighten the bandwidth by turning it left, this acts the same way without 'emulating' someone else's property.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PeaksOnly",
    "description": "a transformative mix check tool",
    "tags": [],
    "slug": "peaksonly",
    "short_description": "a transformative mix check tool",
    "full_description": "PeaksOnly is a mix check, like SubsOnly and SlewOnly before it, or Silhouette and other even stranger plugins. You pretty much need to not master through this one :D it totally wrecks the sound. BUT, it telegraphs information you might never have had, makes it more obvious than it\u2019s ever been before.\n\nHere\u2019s how it works. PeaksOnly runs a little pile of allpass filters, but rather than just make them nice-sounding, it expands and expands and expands them, each time phase-rotating things a little more. It turns transient attacks of any kind into a little colorful wash, a flag of energy that stays at roughly the same level, but gets smeared out across time in a way you\u2019d never normally hear.\n\nWhy does this matter? Because you wouldn\u2019t hear it. Especially if you\u2019re trying to work on headphones, brief sharp transients can become almost totally invisible, especially if they\u2019re being peak-limited or get blended in with other sounds. That stuff can make your mix come alive, but how do you balance it? And if you\u2019re on headphones, forget it: some peaks are just too brief, and unless you have a strangely powerful sense of energy levels that are normally invisible, there will be no managing the stuff that you simply can\u2019t hear, the spiky intense sparks of audio like you get from passionate performances or tricks like using compression to spike up attack transients.\n\nBut with PeaksOnly, everything stays at exactly the same frequency balance (a trick of allpasses, especially mine which are prime-number spaced) but the bursts of energy, no matter how brief, get transformed into recognizable signals. If you\u2019re short on transient impact, you\u2019ll notice it. If you\u2019re over-squashing attacks, you\u2019ll end up with audio porridge. But if you\u2019ve got a powerful, kicking, lively mix\u2026 every detail of it will be laid bare, turned into a sort of pantomime that exposes every transient at every frequency. Whether it\u2019s how loud to make that snare or hi-hat, or how much sub-kick you can get away with, it\u2019s all exposed. PeaksOnly is particularly fond of taking excess subsonic peaks and distorting \u2019em: you\u2019ll never pack too much into the subs again.\n\nIt also tries to keep you at a sane loudness level (suitable for sending to mastering, if you really think you need to loudenate). Strangely, if you feed \u2018mastered\u2019 loud stuff into PeaksOnly and tolerate the distortion, it still reveals everything: there\u2019s a difference between good \u2018too loud\u2019 and bad \u2018too loud\u2019, and PeaksOnly exposes that too. Anything out of balance, even in loudness land, will stick out.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pear",
    "description": "the testbed for a new filter, implemented as a highpass/lowpass shelf",
    "tags": [],
    "slug": "pear",
    "short_description": "the testbed for a new filter, implemented as a highpass/lowpass shelf",
    "full_description": "Welcome to the Airwindows skunkworks, where you can get your hands on really unusual experiments!\n\nPear is a new sort of filter I'm looking to use for my famous-console versions of Console. I've taken the concept of Holt and altered it along the lines I explored in Console Zero, and then I ran with the things I experimented in BitShiftPan a little more.\n\nSo, now you have a fixed frequency shelving EQ that can be either a lowpass or a highpass, and it uses an algorithm that is literally different than anything used before, with a behavior that's likewise not like anything else (the code certainly isn't going to be found elsewhere, and the slope steepens as it nears the edge of the passband: cascading it, which this plugin lets you do, makes that end point ever-steeper rather than adding a bump to a steepening overall slope like in any normal filter)\n\nWhat's it sound like? Hear for yourself, it's yours. My take on it is that it's exactly what I need for the future of Console: this is not a synth filter, it's a desk filter. I can make it be really clear, even when doing extreme things at really steep slopes. It's not a scientific filter for doing really accurate curves, it's for sounding musically good.\n\nI'm not sure what the frequencies are, partly because the transition point is an increasing slope even when it ends up quite steep, and partly because it's not calculated on the basis of frequencies. Those filter points come out of the use of bit-shifting in the algorithm: it will still work in designs that don't use that, and I'll be using more carefully placed crossover points in future Console versions, but for this one, treat it as a switchable EQ. One way to get an EQ point to shift slightly is to increase or decrease the number of nodes (also stepped): consider it the digital equivalent of an analog switched circuit. Use the inv/wet control to dial in how much highpassing or lowpassing you want: that becomes your shelving control on the filter.\n\nAnother part of the big-console sound is saturation, and this filter does not include that: expect what I do with this to be more intense as far as sounding like real big consoles. I'll need to configure that to suit the target console, as some are famously dirty: so often, people restoring these desks are told how to replace the dead capacitors and the original inductors, on the grounds that the original ones had no headroom (HMMMM\u2026) but for now, Pear is very pure in tone, and it doesn't distort on its own.\n\nIt's going to be a lot of work doing what I'm going to do with this tech, and that's not even counting the changes to my reverbs that will come about as I learn from the Bricasti: sure enough, I've identified stuff that I can probably do, and the result should be worth it. I'll try not to bog down and keep plugins coming out as I dig into all this! Stay tuned :)",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pear2",
    "description": "my Pear filter plus nonlinearity",
    "tags": [
      "Latest"
    ],
    "slug": "pear2",
    "short_description": "my Pear filter plus nonlinearity",
    "full_description": "Turns out I got more use out of Pear than anybody else\u2026\u00a0until now.\n\nPear (as a plugin) is real experimental. It's got fixed cutoff points based on bit shifting, to see what that was like and whether it would maximize tone purity. Maybe it did (you've got it already so you're free to check it out). It's got a Poles control, but it's not meant to be a sweepy synth filter, it was purely an experiment on things I could do with the Holt algorithm.\n\nTurns out you can have a lot more fun with it when you turn it loose.\n\nPear2 doesn't restrict the frequencies. In fact it smooths the control, specifically so you can sweep it. You can sweep everything except Poles: there's a switch on that, but you get to add WAY more poles than before.\n\nAnd then there's the Nonlin control\u2026 and now it's time to get gnarly.\n\nThis doesn't have a distortion circuit! As filthy as it can get, none of that is from distortion or saturation. It's purely from the same nonlinearity calculation present in Capacitor2, in BiquadNonlin, and so on. That is applied here to a completely different algorithm based on Holt, and the more poles you add to the gnarly brew, the weirder it gets. You can use this for a really vibey analog-style EQ (high or low shelf: I'll be using it as a crossover) or you can push it until it's making a sound that has not been heard before.\n\nSo if you liked weirdness like the Y series filters, this is your new toy. Back next week with\u2026\n\n\u2026more.\n\nYeah, let's just call it 'more' ;)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PearEQ",
    "description": "a six-band Pear-based graphic EQ",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "peareq",
    "short_description": "a six-band Pear-based graphic EQ",
    "full_description": "Turns out Pear wasn't done, even though it's been around for years. Pear, Pear2 for more nonlinearity, ConsoleMC and MD, ConsoleLA\u2026 all based on my filter derived from the Holt filter. I've done it by itself, I've stacked it up in the traditional way for making a steep multipole filter, I've taken those and made multi-band units nineteen Pear filters deep.\n\nAnd all of that was before I started fooling with AngleEQ, which is incapable of doing what Pear or a biquad filter can do. Angle screws up the phase so thoroughly that if you generate a rolled-off filtered crossover, and subtract the filtered part from dry, the result still has just as much bass as before.\n\nSo, the trick was reconstructing the original sound out of however many bands you have, EACH pole of the filter. Seemingly a pointless endeavor, but when you do that\u2026 suddenly the weird filter is able to filter both ways. So what happens if you do that to a biquad filter that was already able to do both things?\n\nYou get SmoothEQ2. That's what I did to make the hyper-flexible filter with tilty shelves. And that's great, and Pear was just sitting there, waiting for me to try it.\n\nPearEQ combines an intensely natural, analog-sounding character around the sharpness of the filter edges, with a steepness otherwise unavailable to that kind of sound. It's a completely different sound from any other way you'd get that Q factor. You can take any biquad filter (for instance, any DAW standard filter) and crank up the steepness, and you'll get that sharp of a crossover\u2026 with obvious resonance, and it'll sound totally different. You can construct an isolator filter out of biquads and it'll still act different: Pear produces an increasingly steep drop-off into the stopband, and biquads won't. It's just different, and PearEQ lets you use that differentness either for great subtlety and natural tone\u2026 or to rip and boost frequencies WAY more than you should.\n\nGo right ahead, and I'll keep working on more out of all this, as it comes together and shows its usefulness :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PhaseNudge",
    "description": "a phase rotator/allpass filter",
    "tags": [
      "Latest"
    ],
    "slug": "phasenudge",
    "short_description": "a phase rotator/allpass filter",
    "full_description": "Here\u2019s a simple little utility plugin, Airwindows-ized. Except, it seems like this isn\u2019t part of typical DAWs and plugin collections. Can\u2019t see why, it\u2019s a pretty basic tool.\n\nIn radio, there was the need for a phase rotator, to make waveforms more symmetrical for loudness maximizing. In reverbs, you get a thing called an allpass filter (a kind of feedback delay at a specific calibration) which diffuses the sound so it can be fed to delay banks and seem more spatial. Turns out these are the same basic thing! It\u2019s also in phase shifters (mixing the phase-shifted part against dry, or inverse dry).\n\nWhat happens? When you use an allpass filter, what you get is all the frequencies exactly as loud as they were before, but the phases of the frequencies are all different. Specifically, lows get delayed relative to the highs producing an effect where tones are \u2018smeared\u2019 across a time stretch, even though the spectral contents are exactly the same. The frequency information\u2019s unaltered (nothing\u2019s out of tune or darkened/brightened) but there\u2019s a blur, possibly a large blur. PhaseNudge is set up to produce delays from really short (normal for a phase rotator) to unusually long, in case you\u2019d like to treat it as a kind of slapback/echo effect.\n\nThe calibration of PhaseNudge is finer than you usually find in an allpass: 0.618 is the customary number but when I see that I think \u2018golden ratio\u2019, so that\u2019s what PhaseNudge is using, to very high accuracy. Also, PhaseNudge uses a variation on the operating principle of Console to expand and deepen the sound. Though typical allpasses use very short delays, I think PhaseNudge does its thing quite well across a broad range of delays. Anywhere you need a \u2018defocus\u2019 or \u2018blur\u2019 plugin, PhaseNudge should come in handy, whether it\u2019s diffuse pads, overly pointy percussive elements, or even the effects loop of a lead guitar sound (phase shifters have been used for decades, to make the textures of leads more fluid before they hit the actual amp. You\u2019ve heard this on \u2018Eruption\u2019 and may not have even known it, because it\u2019s very subtle there)\n\nThis is a real fundamental building-block tool in digital audio, and if DAW makers will not include it as part of standard equipment, I will. ;)",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PitchDelay",
    "description": "TapeDelay2 but with pitch shift instead of flutter",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "pitchdelay",
    "short_description": "TapeDelay2 but with pitch shift instead of flutter",
    "full_description": "So I was at a a synthesizer meet-up talking with some folks and someone asked me if I could do a particular thing. I\u2019d mentioned how my TapeDelay2, which I was about to post that very night, would let you wiggle around the speed control and you\u2019d get crazy wobble JUST like if you were doing it on a tape deck, because of the way I ran the delay buffers. And the request was to make a plugin where the time would wobble but the pitch would not, perhaps using some pitch shifter algorithm.\n\nAnd\u2026 I did not make that thing! :D but I made this instead, and here you go!\n\nAll this is, is TapeDelay2 but instead of the flutter control, it\u2019s got a fixed pitch shift. It\u2019s being done in a more normal way than Glitch Shifter, but for all that it still enables some silly and extreme noises. Everything not flutter/pitch knob related, is exactly the same: all my development time went towards making the pitch shift interesting.\n\nIf you shift up, you can go towards very shrill crazy up-shifts that are right to the edge of blowing up the plugin. If you shift down, you can drop pitch down to literally nothing\u2026 and then keep going until you\u2019re doing reverse buffer looping, which ends up (at a setting of 0) being the same pitch you started with, but backwards. Except it\u2019s not playing the actual audio backwards, it\u2019s cycling the algorithm backwards while the sound still plays \u2018forwards\u2019, so you get a \u2018voice disguise\u2019 effect. Sneak the setting just off the zero point, and it\u2019s backwards low-speed, good for alien monster voices. If you include the regeneration while doing this you get a glorious mess. Also, the regeneration can be set to WAY more than just feedback, but it subtly restrains itself a bit so that you can hover around total feedback in a usable way. This combined with pitch shifting settings and the filter that comes with TapeDelay2 can give you a whole pile of strange, sorta-analogy noises without even putting more sounds in (it does require some sort of noise beyond digital black to start with, but once it\u2019s going you\u2019ll be able to play it like a weird instrument)\n\nAdd this to your Tape Delay arsenal. It\u2019s not part of TapeDelay because it\u2019s weird enough to be its own purpose (dedicated plugins for purposes is more or less my thing). Hope you like it :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PitchNasty",
    "description": "a primitive pitch shifter that also has primitive time-stretch artifacts",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "pitchnasty",
    "short_description": "a primitive pitch shifter that also has primitive time-stretch artifacts",
    "full_description": "So this is a bit unusual. Though this is a sound mangler, there's no bit crushing here, and in fact most of the time it's delivering a very high-res immediate and punchy pitch shift, super clean and tight.\n\nIt's just that the rest of the time it's throwing a nasty, loud sample-glitch, at audio rates. No, beyond that. It's throwing digital trash at you so hard it becomes a musical note!\n\nAnd therein lies the secret of PitchNasty. This plugin brings you the heart of old school digital like your classic Akai stuff, back when they did not have the luxury of doing anything elegantly or nicely. Instead, you got things like time stretches that just plain looped a tight time cycle and overlapped it, producing a weird digital honk. Some folks really seem to crave that stuff, and there's a reason.\n\nTurns out if you do that, your results tend to be very punchy, direct and intense, except for the weird robotic overtone that's welded to the sound like it's a musical note. Things like drums love being timestretched or repitched in this way! It's a whole retro tone, which PitchNasty starts off with. The crossover is very slightly 'clever' in a way the retro stuff isn't, for the purpose of making it sound more retro and less DAW-like: it keeps the presence very high while slightly masking the high frequency edge of the 'note' you get.\n\nBut then PitchNasty goes way beyond, in that Airwindows way. You've got two pitch controls, one giving you note intervals in half-steps, and the other being a pure pitch bend. They stack, for really high or low bends. Then, there's a control that's the same as the classic Akai method of setting the sample buffer size\u2026 but for this one, you specify the buffer as a musical note (six octave range). Set it insanely high and you're basically not able to pitch shift anymore because the buffer's too small, set it insanely low and it barely registers as a note anymore. And then after that, how about a feedback? How about a feedback that can be cranked to more or less constant regeneration? This gives you horrible wonderful old Eventide noises of many descriptions, or you can use traces of it to make your existing sound more complicated and harmonic-dense.\n\nAnd then the whole thing's followed by a Dry/Wet, and you can see that PitchNasty sticks so tightly to the underlying sound that you can get it acting like a giant flanger or strange overtone generator. And that's the other secret of the crude old Akai-like time/pitch processing: when you don't have any RAM or CPU to work with, you can only do naive primitive things that happen to sound really immediate, direct, alive. It doesn't lose the impact of a drum track. If you set it up to thicken a snare by applying, Eventide-like, a 30% layer of pitch up (or down, with feedback), there is no flam or hesitation to the sound like more sophisticated algorithms would have to do.  Instead, it's just THERE in the sound, with a hefty dose of digital gnarliness, but woven right in to make a very 80s composite sound that's huge and fierce.\n\nIf you would like to use this as a time stretch, what you should do is open the source sound in an editor, change the sample rate without resampling until you have the new pitch you want and apply that, resample it back to what your working sample rate is (use a good resampling method, you don't need to use a bad one), THEN use PitchNasty to re-pitch it to what the target pitch is. That'll give you the time-stretch artifacts, because they are really just pitch-change artifacts used in a different light. Hope you like PitchNasty!",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PlatinumSlew",
    "description": "the best easy-to-use slew clipper",
    "tags": [],
    "slug": "platinumslew",
    "short_description": "the best easy-to-use slew clipper",
    "full_description": "This is something I've specialized in for a while: types of processing that aren't common. Slew clipping is like what you see out of certain op-amps, circuits that can't keep up with high frequencies and are given semi-magical qualities having to do with just the right IC and so on. And you can program that, and I have (for instance my Channel plugins, or Guitar Conditioner).\n\nAnd then I discovered, in GoldenSlew, that you could cascade slew clippings and it'd actually give you a unique sound, unlike just using one slew clipping.\n\nAnd then it went beyond, as I tried to incorporate another previous sample and bring in the rate of change of the direction of the slew, and ran into strange audio bugs that were the digital equivalent of my circuits blowing up or short-circuiting, unable to handle what I was asking of them\u2026\n\n\u2026and came out the other end with PlatinumSlew (and a plan for a more complicated, control-laden plugin where I can get really detailed control over everything that happens in the plugin).\n\nThe original Slew, and GoldenSlew after it, is a bit of an audio chainsaw. For instance, if you slam it to full crank it acts as a sample and hold, because that's literally what you get when you cut slew to 0.0: permanent holding of whatever voltage you had. Good for use in the VCV Rack port, not so good for subwoofers. So, don't use those for swooping the audio down to bass and then silence, especially not fast, or you'll trap energy.\n\nPlatinumSlew explores a new space in slew clipping where its algorithms don't hold energy in the same way. But what does it sound like? It sounds like a record. It sounds retro. What happens is, you can control the transients of the high-end, but then as you push further, as it gets darker, it also begins to alter the subsonics, the bass\u2026 which is something I've never been able to do, not like this. It's not a filter, this is a clipper. But it's not clipping the bass\u2026 it's hard to explain.\n\nCrank it way up and hear the odd things it does when you push it way too far\u2026 and know that you can bring in just tiny amounts of that very unusual, very retro, very vibey flavor. This tech is central to where I'm going with the new Console designs, as I come up with stuff that really truly sounds like classic desks. It immediately found its way into my music, taking my legit analog gear that last little distance it needed as post processing. It's mastering friendly if your tweeters and ears are good enough to hear its subtlest effects. And unlike the swiss army knife version I'm still developing, this one is one slider which can't be set wrong, and it's free and open source, and it's yours. Hope you like it :)",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pockey",
    "description": "12 bit (and under) lo-fi hiphop in a plugin",
    "tags": [],
    "slug": "pockey",
    "short_description": "12 bit (and under) lo-fi hiphop in a plugin",
    "full_description": "This plugin is designed to give you the most vibe possible out of a particular target: 12 bit uLaw-sampled lo-fi hiphop. It's based on earlier plugins like DeRez and BitGlitter, but is tailored to deliver just the right kind of warm fuzzy texture like an old sampler\u2026 or the Pocket Operator sampler that's a lot more accessible than retro 12-bit is.\n\nPockey uses uLaw encoding to stretch 12 bit sampling to where it sounds pretty nearly CD quality, except there's a whole vibe and texture you get through having the soft, delicate sounds slightly low-bit and the louder sounds even more crunchy than that. The lowest setting on the resolution slider is exactly 12 bit, and everything higher than that gives you progressively more lo-fi in an 'analog bitcrush' mode, meaning that it will gradually build as you turn it up, rather than jump from step to step. That way you can fade smoothly from 4-bit to 12, if you like.\n\nThe frequency crush effect is also special: it uses an edge-softening algorithm a little bit like PurestDrive, for the purpose of turning the harsh and grating frequency crush you'd normally get from a plugin, into something a little more resonant, more sonorous. It's still a sort of digital nasty, but steps way over in the direction of 'classic sampler digital nasty', again in a way that suits the more chill lo-fi genres. If you're looking to have it be as clean as possible, take your audio and explore in the very lowest settings of the frequency control for a spot that's minimally intrusive, or a digital-sampler overtone that works best with the sounds you're using. All the stuff near 0 ought to be well behaved. Then as you crank it up, you'll get rowdier digital artifacts, but always with that softening that helps lo-fi hiphop provide a soothing backdrop to life: which is partly due to the absence of super-extended frequencies grabbing your attention.\n\nIt's both an art and a science, and Pockey is there to help you find the art through me digging into the science of how these things are done :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pockey2",
    "description": "more efficient, more intense lo-fi hiphop in a plugin",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "pockey2",
    "short_description": "more efficient, more intense lo-fi hiphop in a plugin",
    "full_description": "So this is pretty rapid iteration. I'd been struggling with getting Pockey to willingly do 12 bit: the algorithm didn't seem to like it, even crashed when I tried to go for 16 bit. Turns out it was counting bit by bit in order to do the analog bitcrushing thing. And there was another way to do it\u2026 but then other things had to change\u2026 and then other ideas started to happen\u2026\n\nSuffice to say, it earned its new version number.\n\nPockey2 takes the basic concept of Pockey and brings in an entirely fresh character, while running way more efficiently. Instead of analog-style floating point bitcrushing, it's integer\u2026 but you'll find the difference between 5037 'stairsteps' and 5038 'stairsteps' will amount to about the same thing, just way more easy on the CPU. Still uLaw, still a big sampler-esque texture, now letting you go from 4 bit all the way to 16 bit at no CPU penalty. There's not a lot of point running 16 bit here as it's still uLaw, but in case you're looking for just the lightest possible 'sampler' touch on your 24 bit DAW track, you've got it.\n\nInstead of analog-style floating point frequency crushing, that's integer too\u2026 which means the adjustability of the super-bright frequency crushing will be 'steppy', not allowing fine adjustments especially if the DAW's at 44.1k. But if you're running 96k, you get a much broader range of adjustment! And you get to frequency crush down way lower than before\u2026 and the tone! Another reason Pockey2 is a new version number is that, while the tone of the frequency crush on Pockey was interesting and vibey, the stuff you can do with the different-sounding Pockey2 is beyond belief. Experiment with the DeFreq control and see what you get. There's a little bit of the 'sweep the digital sampler cutoff point' still there, especially at deeper frequency crushes, but Pockey2 shines when finding just the right spot to entirely transform a sound into pure lo-fi hip hop classic sampler madness. Even more than the original Pockey, this one can completely transform a sound into retro digital.\n\nYou can use both. If you like Pockey and find its CPU use too heavy, DeRez it more, it struggles to get to high bit depths. If you like Pockey2, it doesn't struggle with anything except sometimes with slowly sweeping a frequency crush way up high. I hope you like both Pockeys and find your best use for them :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Podcast",
    "description": "a simpler pile of curve-style compressors with hard clipping",
    "tags": [
      "Latest"
    ],
    "slug": "podcast",
    "short_description": "a simpler pile of curve-style compressors with hard clipping",
    "full_description": "Podcast is the same technique as PodcastDeluxe, multiple compressors that are the precursor to curve and Recurve, but simplified: without the phase rotators, without the full-on attempt to do \u2018radio broadcast\u2019 style tricks.\n\nThis also means Podcast can have a dry/wet control, because there aren\u2019t any phase rotations delaying things. In fact, Podcast runs no latency and can work very well as a \u2018glue\u2019 style buss compressor\u2026 so long as you don\u2019t want \u2018pumping and swelling\u2019 effects, or sidechainy whooshes of level. That\u2019s because Podcast is still in the curve school of compressors and quits changing levels if the input goes silent.\n\nIt also hard-clips the output, making it a kind of \u2018safety compressor\u2019: though it\u2019s not clean like a limiter, it\u2019ll strike a balance between dynamics processor and distortion device. You can use it on drums and things meant to be aggressively smashed, or turn it way down and use it as a clean buss comp.\n\nTreat this as another flavor of compressor from Airwindows, and see if it finds uses for you. The greater simplicity of Podcast (much like PodcastDeluxe, heavily updated from the original versions) makes it more adaptable to different purposes, while it remains simple and un-fiddly, delivering its effects with whatever intensity and blend you like. :)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PodcastDeluxe",
    "description": "a pile of compressors (curve style) and phase rotators",
    "tags": [
      "Latest"
    ],
    "slug": "podcastdeluxe",
    "short_description": "a pile of compressors (curve style) and phase rotators",
    "full_description": "PodcastDeluxe is the precursor to curve, along with its counterpart Podcast. Both of them have five curve-like compressors in series (slightly less refined), but PodcastDeluxe has five phase rotators and an ADClip-style output stage. The idea is that it would be radio station style processing. The reason it didn\u2019t show up sooner is that it didn\u2019t really work to my satisfaction. It\u2019s still not perfect, but it\u2019s different! I demonstrate it on house-type music, and on raw drums. It\u2019s not really clean, not really dirty, not really squish-capable thanks to the curve-style compression (even five stages doesn\u2019t give you \u2018compression pumping\u2019) but it\u2019ll give a perhaps interesting, definitely processed-sounding effect.\n\nMaybe you\u2019ll like it on a mix because you\u2019re not fussy about distorting, maybe you\u2019ll find some useful place for it elsewhere. I think it\u2019s got a knack for high-impact drum busses without distorting them too obviously. At any rate, there\u2019s nothing quite like it. Enjoy!",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Point",
    "description": "an explosive transient designer",
    "tags": [
      "Latest"
    ],
    "slug": "point",
    "short_description": "an explosive transient designer",
    "full_description": "Point was introduced in 2007, just ahead of an amazing series of spatializers, analog modelers, and stompbox-style FX that consumed months of work. The curious thing is, Point didn\u2019t. It\u2019s one of those odd plugins that only required an idea: \u2018what would happen if I did this?\u2019, and an afternoon of coding. And ever after, it\u2019s lived on as a mysterious and untameable plugin monster, secret weapon and mixer\u2019s friend, always just as an obscure Audio Unit\u2026\n\n\u2026until now.\n\nYou get three controls: an input trim, the Point control, and a reaction speed. Point goes from -1.0 to 1.0 and \u2018dry\u2019 is 0.0. Reaction speed goes from 0.0 to 1.0 and there\u2019s nothing to particularly suggest where anything should be set, so I\u2019ll tell you now, and I\u2019ll also tell you where NOT to set it if you know what\u2019s good for you.\n\nFor squishing off the fronts of snaredrums to make them huge, use Point -1.0 and a reaction speed around 0.166.\n\nTo spotlight cymbal attacks while rounding the drums, use Point -1.0 and a reaction speed around 0.14.\n\nTo hype up kick drum attacks and suppress the sustain in a gatey sort of way, use a reaction speed of around 0.3 and carefully add positive Point until you have the effect you want.\n\nTo blow up the DAW and kill your ears, do that and crank Point to 1.0, then stop the transport, and then start it up again with Point still at 1.0\u2026\n\nThat\u2019s your warning. Point is kind of like a ZVex Fuzz Factory or some such mad hardware device: the range of settings DOES include \u2018out of control\u2019, and it\u2019s such a simple \u2018circuit\u2019 that it does little to restrain things when you Go Too Far and operate it in a state that will explode. It won\u2019t just do it out of nowhere, but don\u2019t make it transition between \u2018off\u2019 and Point 1.0: even if you have the fader buried, it can still clobber you.\n\nThe reason I leave behaviors like that in there, in a plugin like Point, is that some people will want the full range of Point\u2019s output, and will be following it with something to manage Point\u2019s outbursts. If you\u2019ve got it surrounded with plugins to tame it, I want you to be able to use Point settings near or at 1.0, and if you set it near that, you\u2019ll immediately hear how intense it\u2019s being so it won\u2019t come as too much of a shock to discover it\u2019s become an unstable isotope of transient destruction.\n\n:)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PointyGuitar",
    "description": "a supremely adaptable instrument amp",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "pointyguitar",
    "short_description": "a supremely adaptable instrument amp",
    "full_description": "Sometimes the best way to get the performance of a very analog thing in a very digital format is to accentuate, not the spirit of the analog, but the capacities of the digital. What you get then is not fake gutless imitations of the artifacts of the analog thing, but the heart of why we go for that analog thing. Meet PointyGuitar, which is all amps. Just adjust\u2026 if, that is, you know what the analog sound is made of.\n\nHere's how it works. SmoothEQ was a sort of breakthrough: the ability to get very steep EQ crossovers while still zeroing out at perfect, unaltered fidelity. It sounds the way it does because it reconstitutes the original source between every stage, rather than doing independent EQ bands and trusting that they'll be 'just as good' because the gains and EQ slopes match up closely enough.\n\nThen there's AngleEQ, a sort of disaster: a very heavily colored EQ where the crossovers are so phasey that it's like running stuff through a speaker. The opposite: whether as a highpass or a lowpass, it produces a weird physicality and scrambles the sound pretty good.\n\nPointyGuitar is both, in series, with a basic distortion (as found in FireAmp) between every EQ stage. There can be lots of these EQ stages, so there can be lots of stages of this simple softclip, but it's always on the full sound, not a 'multiband'.\n\nWhat happens? Any given section might add small amounts of overdrive. It's not an electrical circuit and it's run at double precision so there is no thermal noise/Johnson noise: it's just a bit of overdrive if you're boosting a band. Otherwise, if it's flat it's extremely flat (interestingly, inside the flat EQ it's still using the AngleEQ math, but in such a way that it sums to perfectly flat. Using biquads would've got steeper crossovers, but requiring more stages turned out perfect here)\n\nAs it's passed on to the next stage, any distortion harmonic that doesn't fit into the following band just plain gets filtered out. This is most notable in the amount you can crank the 'High' band. It's around 3K for guitar chug, but it's resisting aliasing super hard considering the amount of gain you can add. Same applies for every band except Presnce. You get that, High, Mid, Low and Sub. For high gain '5150' type sounds, you boost High and cut Low.\n\nOnce you have your sound, be it super high gain or clean Fendery stuff (again, boosting High often helps things sound more amp-like) it's over to the highpass and lowpass. HSpeakr cuts off the bright, and LSpeakr limits the size of your virtual cabinet. They're pure AngleEQ and combine to produce a bandlimited sound without use of a cabinet impulse, harnessing the intensity of the EQ/saturation stages so that the tone sits right. Very delicate adjustments are what you want here, but both those controls have pretty much full range adjustability. 50 foot speaker, or clock radio, are available if you should need them.\n\nIn this way, first building a sound out of identifying which frequency bands need most saturation and which to back off, and then channeling that very saturated but very clean sound through extremely colorful bandpassing, you produce an amplike sound (guitar or bass, any amp of any kind, it just depends how you adjust it) which fits immediately into whatever space in the mix you need, with the right tone colorings\u2026\n\n\u2026at ZERO LATENCY.\n\nIt runs without oversampling, and all the EQs operate directly without pre-ring, as analog circuits do. So you can track directly with PointyGuitar, set any way you like, dial in the basic sound of any sort of amp no matter how clean or dirty, and have it respond so immediately that you'll notice if anything else in your recording chain is adding latency. It'll feed back like any real amp, it'll feel connected to your fingers, and you can dial it to do anything you want, pretty much. If there's a cabinet honk or something that you actually want to add (rather than just remove) you can run the whole thing into ConsoleX and dial that on the parametric, perhaps in conjunction with the Speakr controls.\n\nI may have just replaced my little tube amp and iso cab and new speaker DI box at a stroke. Didn't expect that, but both my ears and Airwindows Meter tell me PointyGuitar is in the zone, even for really difficult sought-after guitar tones. The range is pretty shocking: it ought to do bass amps, Plexis on Variacs, ratty little Peaveys, you name it.\n\nOh, and you get a gate (basically DigitalBlack) that triggers off the input before the distortion, but gates between the 'amp' and Speakr so that even if you've got it firing really staccato and quick, it'll merge with your string-damping and act like part of your playing, for guitar OR bass.\n\nEnjoy. This should work both for vintage tone guys AND Reznorian madmen. :)",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Pop",
    "description": "a crazy overcompressor with a very exaggerated sound",
    "tags": [],
    "slug": "pop",
    "short_description": "a crazy overcompressor with a very exaggerated sound",
    "full_description": "Why another compressor?\n\nYes, \u2018because they all act and sound a little different\u2019, but what\u2019s the deal with this one in particular?\n\nPop was designed to be overstressed to get an effect like the Allen & Heath mini-limiter used on some 80s Genesis and Phil Collins songs: that huge attack, the way that little subtleties jump boldly out of the mix, the sheer squish and gnarl of it all. It wasn\u2019t really about trying to model the specific gear so much as trying to get the effect, or more of the effect: I especially wanted the front end of sounds to burst through with enormous presence, but I also wanted to bring up little details out of the performance.\n\nPop\u2019s a huge success at this. On some audio, I can get weird little reverb elements from the background to seem to hover up front even while loud stuff is being smashed. It\u2019s designed to volume invert: the idea is if you\u2019re hitting it with superloud things it can overcompensate and push the volume down extra far, letting you further exaggerate the effect.\n\nAs such, there are some sounds this just can\u2019t do. If you try and get a huge thunderous smashed sound of it, it will just go super 80s and give you a loud attack and maybe even backwards decay, or some reinvention of the body of the sound. You have to set the level carefully to get the right sound happening, so it\u2019s not terribly flexible: Pop is picky and you have to work it almost like it\u2019s an instrument. It does run without latency, so in theory you could do like Phil did and track directly into it (or track into the DAW with it already present in the monitoring path) so you could modulate your singing intensity to work with it. That ought to work. Also remember a slapback echo, and to actually doubletrack!\n\nIf I can ever get the real preamp/compressor, I\u2019ll study the heck out of it and do Pop 2. I\u2019ll keep an eye out, as that would be really rewarding work and I could probably get closer to the real thing with that kind of reference :)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pop3",
    "description": "the dynamics from ConsoleX",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "pop3",
    "short_description": "the dynamics from ConsoleX",
    "full_description": "As I work on all the things that go into ConsoleX, now and then it becomes useful to give you a little preview. Pop3 is like that. It's the latest Airwindows compressor, but also gate, this time.\n\nI hope it's pretty simple to understand, because in ConsoleX you get two of them per channel/buss, one for the Fire band and one for the Stone band. (if needed, I'll put out a StoneFire compressor to help you practice that). In this case, it's a fullrange dynamics processor tailored to my needs with ConsoleX.\n\nFor the compression section, Threshold brings down the squish. It doesn't use makeup gain, so you use it to restrain the sound. Attack and Release work as you'd expect, though Pop3 runs a new sense circuit that's very transparent in action. The Ratio control is simply a dry/wet: if you have signals peaking really hot, over 0dB, you'll have to set Ratio to 0 to truly bypass the compression. Since this'll be available in multiple places on multiple bands it's designed to be more a 'glue' type, though you can run audio really hot into it in order to get an exaggerated result. In the final version you use the Stone and Fire controls to boost post-compression if you want.\n\nThe gate section had to be designed into Pop3, like it is in ConsoleX. It triggers off the uncompressed signal, so whatever you do with compression has no effect. It uses its own threshold (coming up from zero) with a release that goes from slow to brutally fast, and a handy Sustain control which stretches out the gating to control whether it's sputtery or crisp. This gate is good at tightening things up, especially with the sustain feature there as a primary control, and again: works totally independently of the compressor, so you can sculpt those dynamics (or put percussive bumps on things using the gate ratio to dial in the spike and then blend it with the regular signal) and then shape your primary audio to make it more squishy. I found that just kicking in the compressor slightly gives a huge change in texture compared to only using the gate.\n\nI wanted it to be extremely approachable because you deal with two of them in parallel in ConsoleX, and not even with a normal crossover, instead with multiple Kalman filters and a set of parametrics that bypass all the compression (but which are in fact gated, but the different parametrics and the Air band respond to different gates).\n\nThe glimpse of ConsoleX interface is only a rough draft: in particular, I gotta add user control over whether that 3D effect is on the knobs at top and bottom. Some people will prefer it flat, some will like the extra room provided by some of the knobs being seen edge-on. Also I have a lot of work to do on the dynamic positioning and reflowing of controls, perhaps with some divider lines to help highlight which knobs went where. Suffice to say, all my days and all my attention are focussed on this now, and I hope it comes out (right now it's not running properly in my DAW Reaper, so there's bugfixing too)\n\nTalk to ya later, and I hope you enjoy the chance to come to grips with Pop3.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PowerSag",
    "description": "for emulating power supply limitations in analog modeling",
    "tags": [],
    "slug": "powersag",
    "short_description": "for emulating power supply limitations in analog modeling",
    "full_description": "We\u2019re going to explore the early Desk plugins (as free VSTs), so here we\u2019ll start off with one of the underlying principles! PowerSag models the problem of analog power supplies that can\u2019t source enough current to drive the output of the circuit. The circuit doesn\u2019t directly distort, but the more output it\u2019s been making, the less is in reserve. This is part of the Desk line of plugins, but now it\u2019s a distinct component to play with.\n\nYou get a Depth and Speed control. Dial in the effect by exaggerating Depth and then exploring with Speed: it\u2019ll create a variety of compressey or distortey effects, but since they\u2019re sucking energy out of the body of the sound, it\u2019s a completely different type of distortion from saturation or clipping. Then, return Depth to zero and sneak small amounts of it back in, until the desired effect is reached. You\u2019ll get a more tubey effect with extremely slow Speed, a big-console transistory effect with very quick Speed.\n\nThe neat thing about PowerSag is that, if you like grunge and distortion, it\u2019s capable of adding some grind to the sound while pulling the channel back in the mix, where traditional distortion and saturation pushes sounds forward. When you balance that with normal overdrive, you can get a lot of energy and character happening without everything becoming too fatiguing and up-front. Balance is good, being able to trim the body of a sound is good: if you like sculpting mixes with distortion and saturation, this might be right up your alley :)",
    "categories": [
      "Effects"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Precious",
    "description": "a re-release of another old Character plugin",
    "tags": [],
    "slug": "precious",
    "short_description": "a re-release of another old Character plugin",
    "full_description": "So this is pretty straightforward: another Character re-issue, now free and open source and available in VST form. Woot!\n\nMight serve as a good color-adder, or fake guitar amp? Based on Precision 8 impulses, but it\u2019s turned into very much its own thing: I think this became Holo in the Busscolors plugins. In the original form, here, you can crank up the color intensity a lot, or distort the hell out of it.",
    "categories": [
      "Tone Color"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Preponderant",
    "description": "Airwindows Anti-Soothe, a strange tone intensifier and balancer",
    "tags": [
      "Latest"
    ],
    "slug": "preponderant",
    "short_description": "Airwindows Anti-Soothe, a strange tone intensifier and balancer",
    "full_description": "Sometimes, it\u2019s just\u2026 strange.\n\nPreponderant was created in an attempt to combine the old ResEQ concept with Soothe, in such a way that it\u2019d give you three tightly controlled bands of emphasis (one thing Airwindows is all about is maximizing resonant sonority and intensity, not blindly removing it) and then also balance them on the fly so that all the bands would tend to be constantly active. This would bring up the high band, for instance, giving that \u2018hyping of detail\u2019 effect. In theory, it\u2019d work.\n\nAnd maybe it does. But I don\u2019t blame you if this one just drives you crazy and makes you mad. I had to scramble to get rid of an extra 24 dB of gain on tap for each band because when I started making the video, the plugin went insane and started blowing up: I thought I could let it throw in extra energy but I was sorely mistaken. One hasty bugfix later, we have\u2026 something? We have Preponderant. There is thankfully nothing else like it anywhere :D\n\nTurn up Resonance and Wet to hear what it\u2019s focussing on. Use the Narrow, Medium and Wide controls to dial in frequency bands: each is twice as wide as the previous, so using Narrow will give you the tightest focus on a frequency range. Set \u2019em to areas in your sound (middle is the midrange). Preponderant is named because it can be tuned between areas of preponderant energy, and areas of power or areas of no energy, and it\u2019ll compensate to give about the same output for each band you select, no matter how much energy is \u2018supposed\u2019 to be there. It\u2019ll boost quietness, suppress intense resonant areas that are much louder than they should be, or you can simply tune to a different frequency range and avoid the resonant stuff.\n\nAlso, it\u2019s not a compressor. In no sense is it turning down louder stuff, or up quieter stuff. If you put it on drums you\u2019ll scream in horror (unless you know exactly what you\u2019re doing and have other drums to fill in a more continuous sonic flow). It\u2019s rapidly balancing the bands while keeping the dynamics just as they are. Might be good on spot mics, toms or kick or something. Horrible on room mics or overall mics. Good on heavy guitar stems as it\u2019ll retain dynamics there. It will be immediately obvious whether Preponderant is working on a track or stem.\n\nYou HAVE to pick real audio for every band, or it will just make some up. Subsonics on a skinny guitar? It\u2019ll turn down the other bands until it thinks they balance with whatever subsonics you selected. By the same token, ice-pick zone on the same guitar? It\u2019ll make it balance with the other bands you chose.\n\nThis will sound terrible. So, turn down the resonance until the sound is less insanely resonant. It\u2019ll still sound terrible. Turn the dry/wet right back to dry (which will probably sound real boxy and dull by comparison).\n\nThen, feed in a little of the Preponderant, just until you start to hear it accentuate the stuff that you chose.\n\nTHERE you go.\n\nPreponderant is one of those Airwindows audio chainsaws. The final version (without the 24 dB boosts) is intentionally made to just cut and restrict stuff, explicitly so if you don\u2019t know what you\u2019re doing you\u2019ll hate it and not use it. This is intentional as you could hurt your mix, your ears, and your sensibilities.\n\nOn the other hand, if you know how to dial in areas of power and focus and find three things about a sound that are useful in the fray of a mix, I\u2019m not sure I\u2019ve ever made a plugin that will so aggressively give you what you ask it for. (and if that\u2019s not enough, a few of you will want to use the original version. I\u2019m not going to encourage this, and you must choose: that or the real, volume-cutting version. They install with the same name and the same ID so you can\u2019t have both, and shouldn\u2019t have the boosty version, ever. But if you want to blow up your mix, then YES, you may. The rest of you, and me, please work with the one that doesn\u2019t boost?)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pressure4",
    "description": "a compressor adjustable between vari-mu and \u2018new york\u2019 peak-retaining behaviors",
    "tags": [],
    "slug": "pressure4",
    "short_description": "a compressor adjustable between vari-mu and \u2018new york\u2019 peak-retaining behaviors",
    "full_description": "What can I even say? This is the golden ear favorite. Version 4 brings new functionality that has never existed in Pressure before: the stereo version (default for VST, and the Audio Unit that doesn\u2019t specifically say \u2018Mono\u2019) uses a special linked mode based on diade bridges in hardware compressors. That\u2019s not to say that it is \u2018analog modeling\u2019 because it isn\u2019t. From the beginning, Pressure has been made out of a lucky algorithm with a particular organic, pleasing quality, and part of Pressure4 is knowing what to strip down, how to simplify that algorithm until it lets all the music through.\n\nBut then, when you explore the way Pressure4 squishes up depending on how hard you drive it, and then start listening to the textures of different speed control settings and what that does, and then begin exploring what the \u2018\u00b5-iness\u2019 control does\u2026 and it turns out that each one of those things gives specific and controllable shapings of the sound, but in ways very difficult to put into words, yet you can learn what it does and make the plugin do what you intend even if it\u2019s tough to articulate exactly what you\u2019re going for\u2026\n\nThis is why we turn to odd little tools like this. The whole character of Pressure4 can change with tiny adjustments of the controls. It can do about twelve wholly distinct things when set up right, but they\u2019re all inherent in that one curiously simple, but chaotically strange, algorithm. And now the linked stereo form of Pressure does all that with a naturalness and fluidity never before seen with this plugin.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestAir",
    "description": "a brightness experiment",
    "tags": [],
    "slug": "purestair",
    "short_description": "a brightness experiment",
    "full_description": "A while back, I got reminded of this plugin. Someone said, \u2018you haven\u2019t put this out, when are you going to?\u2019 and I said \u2018Oh, that\u2019s right, I haven\u2019t\u2019.\n\nSo here you go. It\u2019s a bit weird. Normally \u2018Purest\u2019 plugins are ultra-simple. This isn\u2019t quite like that and I don\u2019t remember why. It\u2019s sort of like Air or Energy, an air-band boost or cut, but it\u2019s also got a limiting factor where it\u2019ll refuse to boost past a certain intensity of treble. In that way, it\u2019s like Acceleration. Except it\u2019s not exactly Acceleration, not exactly a slew clipper\u2026 heck, it\u2019s not even like Air or Energy. It\u2019s a little like a de-esser in Bizarro World? Working oppositely?\n\nAnyway, it\u2019s yours if you want it. There are many odd ways to do EQ code. This is clearly one of them, and it seems to be not exactly like anything else I\u2019ve done, and it sure does crank up the extreme air band if you want that. And it\u2019s got that clamping factor to cap it (though similarly to Acceleration, it\u2019ll give you trouble trying to hear what\u2019s being done). I guess check it out, and if your ears are amazing WAY up in the ultra-treble, and you also like the sound of it, you\u2019ll probably be able to hear the action of the limiter just fine.\n\nMe, I\u2019m more interested in dark reverbs and deeper spaces and bass, so this was never my pet plugin: maybe it can be yours :)",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestConsoleBuss",
    "description": "the most free from coloration Console system",
    "tags": [
      "Recommended"
    ],
    "slug": "purestconsolebuss",
    "short_description": "the most free from coloration Console system",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PurestConsoleChannel",
    "description": "the most free from coloration Console system",
    "tags": [
      "Recommended"
    ],
    "slug": "purestconsolechannel",
    "short_description": "the most free from coloration Console system",
    "full_description": "This is also a historical reference of how I was posting on New Year's, 2018, after the death of my Mom, so I've left the post in its entirety. As follows:\n\nSo. I think things may improve around here, as far as me reviewing the Console5 launch, and making sense of what the heck went on there. If I can, I\u2019ll also give it the lushness of that original release while preventing the DC offset stuff\u2026 and there\u2019s something to do with the AU/VST identities that needs examining. After this, ToVinyl is up for January, and I\u2019ve got some useful variations on Console 5, and PurestDrive is February (I\u2019m entertaining notions of a C5Drive that steals the technique from PurestDrive instead of doing the original C5 slew thing. It would be just \u2018darker\u2019, not encode/decode)\n\nThe reason I think I can get into all this (after probably being sick for a while) is I\u2019ve got some closure. I\u2019ve just returned from visiting family and attending my Mom\u2019s funeral. It was very nice: I sat with my Dad, who built us the Heathkit television we played Atari 2600 on, and with the brother who helped me get the VST ports together, a year ago. I cooked my Dad a big hot curry, and I think he liked it. Got to be with my siblings, and there was some healing, and I\u2019m pretty sure after I rest up I\u2019ll be able to think again.\n\nGood thing some plugins are so simple you don\u2019t even have to think! :) (in other words, if THESE are broken just shoot me ;) )\n\nPurestConsole is like the dynamics encode/decode out of Console5, without the slew mojo that\u2019s so tricky to get right. It\u2019s a good candidate for the first plugin(s) to be open sourced when I hit the $800/mo. open source goal, along with templates I work from, and my process so people can reproduce my work. In fact I can reveal the guts of the PurestConsole source, without the Airwindows denormalization code and noise shaping to floating point. Here\u2019s the simplest purest form of Console.\n\nChannels: inputSample = sin(inputSample);\nBuss: inputSample = asin(inputSample);\n\nWithout all the mojo and tone changing, that is IT. Anyone building a DAW can include this (channels post fader! And do not allow the asin() to see values that\u2019ll break it, you can get NaN out of math functions if you break them!).\n\nPurestConsole has special properties, besides \u2018being in the Console5 family so you can swap them out freely with any Console5 variation and get correct results\u2019. Since the amplitude encode/decode is most important to the effect, stripping it down to THIS simple has an interesting property I demonstrate in the video.\n\nIf you have only one channel feeding the buss, you get EXACTLY that channel without the slightest alteration. PurestConsole cancels out completely and doesn\u2019t touch the sound AT ALL unless multiple channels are mixing. If any one source becomes the only feed to the buss, it goes to perfect bit-identical fidelity to the extent of what the math function can provide. No previous version of Console can say that because I was trying to use simpler math to save CPU, but PurestConsole (and all Console5) goes for the math functions which include the complementary sin() and asin() or \u2018arcsine\u2019. That\u2019s what arcsine is for. :)\n\nYou can use PurestConsole in its capacity for \u2018expanding\u2019 verbs, delays, and EQs. If there\u2019s no change, it\u2019ll cancel out to bit-identical. Then if you\u2019re doing stuff, it\u2019ll kick in. EQ changes are most easily heard in high-Q filters, and it\u2019ll make filters more effective at a given dB boost/cut. Note that you can easily clip PurestConsoleBuss with boosts and peaks, but that might sound OK to you so don\u2019t fear it.\n\nI hope this simpler one is good right out of the gate, because I AM going to be sick for a while, but it might be something else to chew on, and if it is in fact so simple as to be flawless, you can work with this one right away :)",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "PurestConsole2Buss",
    "description": "the distributed filter version of PurestConsole",
    "tags": [],
    "slug": "purestconsole2buss",
    "short_description": "the distributed filter version of PurestConsole",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestConsole2Channel",
    "description": "the distributed filter version of PurestConsole",
    "tags": [],
    "slug": "purestconsole2channel",
    "short_description": "the distributed filter version of PurestConsole",
    "full_description": "Meet PurestConsole2.\n\nThis serves a special purpose in modern Airwindows Console mixes. I\u2019ve got Console7, which gives you all the glue you could want, creates solidity and the sense of an analog mixing desk (all the more if you use Console7Cascade, which I\u2019m avoiding for this track and this video). But Console7 does its aliasing prevention by rolling off right at 20k, which helps the sense of glue but steps on some of the super-sparkly treble you sometimes get in modern mixes. It\u2019s set up to do it really gracefully, but some have noticed a diminishing of super-glittery highs.\n\nPurestConsole was always the \u2018colorless, transparent\u2019 take on any Console system, but with PurestConsole2 we\u2019re stepping just a bit away from that, to serve as a complement to Console7. PurestConsole2 does the same \u2018filter the super-highs to prevent aliasing\u2019 thing that Console7 does. BUT, not quite the same. It starts higher (run it at 44 or 48k and it won\u2019t even attempt to filter) to extend to 30k before filtering. But then it filters SHARPER\u2026 to roll off quicker. And in doing that, it gives you a presence peak beyond hearing. Not a huge one, but it\u2019s there: it\u2019s also on the end of the system, not (like Console7) going into the system. So PurestConsole2 gives you a sprinkling of treble glitter even while it rolls off the aliasing-prone frequencies more effectively.\n\nThe end result is the same kind of analog warmth\u2026 except it\u2019s a cool, airy clarity that resolves absolutely EVERYTHING. If you\u2019re shooting for super-clear this is the one you want. And since Console mixes can drive submixes which then use another Console system to sum the stems to the 2-buss\u2026 you can sneak it in on your harmony vocal beds, or orchestral stems, or you could use Console7 for everything and then sum only the stems to the 2-buss using PurestConsole2. Instead of mixing and matching within the summing busses, design your mix structure by figuring out where you want analog fatness and slam, and where you want clarity and resolution.",
    "categories": [
      "Consoles"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestConsole3Buss",
    "description": "an alternate algorithm for minimalist Console",
    "tags": [
      "Latest"
    ],
    "slug": "purestconsole3buss",
    "short_description": "an alternate algorithm for minimalist Console",
    "full_description": "",
    "categories": [
      "Consoles"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestConsole3Channel",
    "description": "an alternate algorithm for minimalist Console",
    "tags": [
      "Latest"
    ],
    "slug": "purestconsole3channel",
    "short_description": "an alternate algorithm for minimalist Console",
    "full_description": "Instead of immediately doing EveryConsole, how about the final Console version it'll contain?\n\nThis serves two purposes. First, it's an extension of the work I was doing in ConsoleZero: this is a custom sin()/asin() implementation along Airwindows lines, making it a little unusual. It uses a simple sin() approximation, but instead of being mathematically correct it applies all the multiplications and divides only in factors of two: bit shifts, in other words.\n\nThis is what ConsoleZero did, but more simply. This extends that to improve the sin()/asin() calculation, but then it's not doing that correctly, it's another approximation to make every calculation preserve the mantissas of the numbers as much as possible, every step of the way. Doesn't matter if it seems like a ridiculous thing to do, that's the experiment, and you already have this in mathematically perfect sin()/asin() form anyway: the original PurestConsole is just that.\n\nThe thing is, there are other gains. These new algorithms do so much with bit shifts that they're blazingly fast. Both this and ConsoleZero run fifteen tracks of mix on my M1 Macbook Pro at about 5% CPU, with a couple bonus plugins in there.\n\nAnd that means if you're running something like current Reaper, as I am\u2026 with chain and individual FX oversampling\u2026 you can do that. And so I've made a video where I'm demonstrating a 96k project mixed in PurestConsole3, with ALL the Console plugins oversampled to 768k. (unless, because it's starting at 96k, the 16x oversampling is actually giving me 1.536 megahertz oversampling?)\n\nAnd it went from 5% CPU, with presumably 16x oversampling on all Console tracks and the buss, at base 96k sampling rate, to 30% CPU. I could've doubled the project and it would still have run. (probably the original PurestConsole would not be able to do this)\n\nAnd it sounds\u2026 different! You'll hear it. You surely can do it. It's got its own sound. Not an Airwindows sound, I think. Sort of smoothed off and glossy. In the video I demonstrate this output, versus non-oversampled PurestConsole3, versus ConsoleZero. And, having heard all the original sounds off my instruments and modular, I think ConsoleZero is rawer and more accurate (that's sort of the idea). But now, if you have a great love for oversampled nonlinear plugins, PurestConsole3 is my little gift, an Airwindows Console version that's designed to work with, not against, what you like.\n\nHave fun, and I'll keep new stuff coming as well as I can!",
    "categories": [
      "Consoles"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestDrive",
    "description": "the magic saturation plugin of subtlety and French House tone",
    "tags": [
      "Latest"
    ],
    "slug": "purestdrive",
    "short_description": "the magic saturation plugin of subtlety and French House tone",
    "full_description": "The funny thing about PurestDrive is that I didn\u2019t expect much from it at all.\n\nThis plugin (now coming to VST and open source) was simply an experiment. I\u2019d been making complicated plugins with things like anti-aliasing, just a lot of calculation going on, and wasn\u2019t sure I was getting what I wanted. It didn\u2019t seem to be furthering the \u2018Airwindows sound\u2019. And I\u2019d hit on an interesting tactic, noise shaping for the floating point buss. It seemed to me that you might be able to get a good sound by the opposite to complication: simplifying things, running the math at the highest possible resolution (in this case, long double precision, which is 80 bits on Intel and possibly 106 bits on PPC, which Airwindows still supports)\n\nThe saturation algorithm was going to be sin(), which is the smoothest saturation curve you can have. Then I thought it\u2019d be good to get a little more sophisticated than that because I had quite a few plugins based on sin(), so I did this:\n\ninputSample = sin(inputSample);\napply = (fabs(previousSample + inputSample) / 2.0) * intensity;\ninputSample = (drySample * (1.0 \u2013 apply)) + (inputSample * apply);\n\nThat\u2019s it. That\u2019s what makes PurestDrive (apart from some code supporting it, which is up and documented on GitHub as part of making it open source).\n\nWhat it does is this: it keeps the previous dry sample around, and \u2018apply\u2019 will be the combination of that and the saturated one. This makes apply be large if we\u2019re on a low frequency wave, and if we\u2019re doing a really bright transient apply might be zero. Intensity is how we include the slider control (0 to 1) and can also make apply be lower. Then, we\u2019re adding the sin() effect, but ONLY relating to apply: we saturate the body of the sound, but as things get brighter or lower volume, we\u2019re dynamically doing a dry/wet control at audio frequencies, so PurestDrive only throws saturation on dense solid material: airy highs, subtleties, get through more easily. As a side-effect, if our input gets super hot we can end up subtracting a little dry from the saturated inputSample.\n\nWhat PurestDrive did\u2026 was take off and become hugely popular. I didn\u2019t expect that, it was simply an experiment in tone purity and I didn\u2019t think anyone would notice. I knew the little tweak with \u2018apply\u2019 sounded good, but I figured the whole thing was so subtle that it wasn\u2019t going to set the world on fire. Yet, PurestDrive developed incredibly dedicated fans, using it all over their mixes, swearing by its tone.\n\nAnd now, it\u2019s a free and open source plugin, AU and Mac and PC VST. Remember it\u2019s designed to not be a big obvious coat of paint over everything: because it\u2019s using the dry sample so intensely, it cleans up and stays out of the way. But because it\u2019s modulating between saturation and dry at audio frequencies based on both the current and previous sample, there\u2019s a lot of textural effect on the sound. I never got so much mileage out of so few lines of code. Hope you like it. :)",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestEcho",
    "description": "optimized Airwindows echo with exactly four evenly spaced taps on tap",
    "tags": [
      "Latest"
    ],
    "slug": "purestecho",
    "short_description": "optimized Airwindows echo with exactly four evenly spaced taps on tap",
    "full_description": "PurestEcho gives you four echoes, sample-averaged to deliver extremely precise timing, each with its own tap. That means you can use it as a delay line and set up discrete echoes which then stop completely: no feedback, only a series of trailing echoes which then get out of the way and don\u2019t mud up your mix. Or you can use it for just a single slapback (use the last, for the longest delay time). Or, you can set up odd effects like increasing volume slapbacks, or use of only certain taps.\n\nOr, you can get a tone that\u2019s part of the 90s: turn all the delay taps on full and then set the delay time really short. You\u2019ll find there\u2019s a tightly controlled pipe-like honk that emphasizes a musical tone\u2026 sort of a Dalek-like robot-like thing\u2026 and you can play this using the slider. Note: this slider is NOT smoothed, because it\u2019s smashing the buffer anyway, but more importantly if you\u2019re programming in a bassline using this effect you\u2019d need it to abruptly switch frequencies. So think of it as something you\u2019d play via control automation, not so much through live entry on the slider.\n\nBetween that and the ability to throw a big rich echo that fakes \u2018feedback\u2019 but then gets right out of the way, I think PurestEcho will find its way into peoples\u2019 workflows. I hope you like it :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestFade",
    "description": "just like PurestGain, but for LONG fades",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "purestfade",
    "short_description": "just like PurestGain, but for LONG fades",
    "full_description": "This is a plugin for one person.\n\nOkay, it\u2019s a plugin that EXISTS because one person asked the right thing at the right time. A mastering engineer emailed me and said, PurestGain is great, it\u2019s just perfect, everything I need except\u2026 when I do fades with it, there\u2019s a discontinuity when I go from 0.001 volume on the Slow Fade, to 0. It cuts out abruptly, and that\u2019s a problem. Can you help?\n\nI can!\n\nThing is, PurestGain is designed so you can whack that control around aggressively. It doesn\u2019t mute instantly, but you can kill a track real fast in a mix, gracefully, without zipper noise. PurestGain is correct for some users. If you needed to have a control on some kind of USB controller, like a NanoKontrol or something (say you\u2019re doing an automation pass) you might well need to trim the overall gain with the top slider, and then assign the hardware controller to the bottom slider and automate. It\u2019ll smooth out the incoming MIDI data and the result will be dynamic and aggressive, will feel like you\u2019re yanking faders around on a real board. That\u2019s the design intent for the ballistics of PurestGain.\n\nPurestFade is totally different. If you are at full crank and snap it instantly to zero, you\u2019ll get an automated fade of about eight seconds or so. It gets subtler and subtler the quieter you go, until at the point of silence you literally can\u2019t mess up the fade: it will always smooth out the last tiny bit.\n\nIf you drag it slower than ten seconds you can do any slowness of fade you want, smooth as you like. And, an interesting thing is that if you need a faster fade than the automatic one (of just going fully to zero in an instant and letting the plugin do it) what you can do is manually drag it down faster than that. It\u2019ll chase your fade speed, which means if you\u2019re doing an unnaturally fast fade it\u2019ll be trying to smooth you out a bit but it will let you do that. I think it\u2019s the ultimate smoothed fade.\n\nAnd, in mixing (since it\u2019s still PurestGain at heart) I think you can decide which you prefer, and if you\u2019ve got a style then you know which one is right for you. Probably won\u2019t be both. If you need to do abrupt, dynamic things it\u2019s PurestGain you\u2019ll want\u2026 but if your fader moves are generally more subtle, invisible, then you\u2019re probably going to always want PurestFade for everything. (The top control will still give you more rapid moves if you need them)\n\nWhich one is the right one for you? Most likely you already know which one you\u2019ll be using, just from the descriptions.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "PurestGain",
    "description": "a high-res noise shaped gain, with smoothed fader",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "purestgain",
    "short_description": "a high-res noise shaped gain, with smoothed fader",
    "full_description": "Marking the 200th plugin in Airwindows\u2019 \u2018AU\u2019 category (not perfectly accurate, but yay anyhow) is PurestGain, in VST-enabled form!\n\nWhat\u2019s to explain? It\u2019s a gain utility. :D\n\nNo, seriously, that\u2019s what it is. Here\u2019s why some folks are a fan of this plugin anyway, even though every DAW has this as a utility plugin, plus the DAW faders built in.\n\nFirstly, gain is processing. When you apply even a simple gain change, it expands the word length of your digital audio out to arbitrary size. PurestGain comes from a set of plugins I did to experiment with the extremes of digital audio accuracy. You might think digital audio is automatically accurate, but that\u2019s far from the truth. We hear degradation in the resolution domain as flatness, cardboardy-ness, and it\u2019s cumulative. I don\u2019t think anybody can hear the difference between PurestGain and a DAW utility gain plugin, when just a single plugin is in the signal path\u2026 but it\u2019s cumulative.\n\nAlso, you can\u2019t be sure that a gain plugin is truly minimalist. If a plugin takes in floating-point audio of great quietness, and multiplies it by 1.0\u2026 that\u2019s a math operation that can force the result into the same floating-point \u2018level of resolution\u2019 as the 1.0. Floating-point is treacherous, and the damage done is still very subtle but again is cumulative.\n\nPurestGain takes the input audio and does the gain processing at \u2018long double\u2019 resolution. It then noise shapes the result back into the DAW audio buss, whether that\u2019s a 32 bit buss for normal VST and AU, or a double-precision 64 bit VST buss, if available. The result is an ultra-high-precision gain plugin that refuses to lose any audio quality. It\u2019s the plugin equivalent of using switched attenuators with precision resistors in a mastering console, rather than potentiometers.\n\nThere\u2019s one more trick PurestGain has up its sleeve: a second control especially for fades. The trouble with DAW faders is that they must serve two masters: they\u2019ve got to adjust smoothly and avoid zipper noise (crackling while you move the control, most clearly audible if you get a low-frequency sine wave going and then manipulate the control) but they\u2019ve also got to snap instantly to a position if asked. The second slider in PurestGain runs in series with the dB gain control, but it functions very differently. One way to resist zipper noise is to have the gain smoothly ramp between volume settings, and that second control is designed for human-performed gain rides. Map the fader on a control surface to it, do your active mixing, and PurestGain will smooth every fader motion until it\u2019s as fluid as any real-world analog console: try it with sinewaves and see how flawless the result can be.\n\nThat\u2019s a surprising amount to say about a gain plugin, but that\u2019s Airwindows for you :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "PurestSquish",
    "description": "an open-sounding compressor with bass bloom",
    "tags": [
      "Latest"
    ],
    "slug": "purestsquish",
    "short_description": "an open-sounding compressor with bass bloom",
    "full_description": "PurestSquish is a compressor, with its own sound. In the video I compare it to Pressure4, Logical4, and SurgeTide, and also show how it can be used in conjunction with SurgeTide (a real \u2018sleeper\u2019 plugin not easily understood) to produce amazingly transparent dynamics control. That said, this is not at all a normal compressor plugin and won't act normal.\n\nI also spent some time torturing it with sine sweeps, showing how Pressure and Logical are more like \u2018analog emulations\u2019 and produce harmonics, while PurestSquish instead does a weird thing when you turn off and on signal generators. So if you\u2019re looking for ways to say \u2018this is broken forever!\u2019 watch those parts of the video :)\n\nIf this doesn\u2019t worry you, PurestSquish also has a bass bloom control that lets you pass subsonics or bass notes through uncompressed, to taste. If it does worry you, chalk it up to PurestSquish running simultaneous two-and-three-sample-interleaved compressors, much like Capacitor runs two-and-three-sample-interleaved filters, and use one of the other compressors I\u2019ve put out, perhaps one of the three also featured in the PurestSquish video.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "PurestWarm",
    "description": "a subtle tone shaper and warmth adder",
    "tags": [],
    "slug": "purestwarm",
    "short_description": "a subtle tone shaper and warmth adder",
    "full_description": "PurestWarm is a little bit like PurestDrive (anxiously awaited by quite a few people) but not quite as sophisticated\u2026 however, in its simplicity is part of its usefulness. It applies an Airwindows softest-possible-saturation effect (like what you can get out of Density, or Channel) but it\u2019s polarized: you pick which side of the waveform the saturation applies to. For the other half of the waveform, it\u2019ll pass through the exact bits that came in. So it\u2019s half a plugin: I\u2019m not sure there\u2019s ever been anything quite like that, on one half of the wave a full Airwindows (noise shaped to floating point) ultra-quality saturation, and on the other half of the wave, \u2018bypass\u2019 and literal bit-identical pass-through. I made sure even the noise shaping wasn\u2019t applying for the \u2018bypass\u2019 half.\n\nThe result is this: waveforms that need a little sweetening, can have that texture (not frequency or EQ, texture) subtly added to the track, in a way that utterly and totally maintains the integrity of the signal. In some ways this is \u2018purer\u2019 than any of the other Purest line, since by its nature it\u2019s true bypass for literally half the time. It\u2019s also one of the minimal ones, with just a switch: there\u2019s no way to get the perfect integration of bypass and effected halves (they switch off like a push-pull power amp) otherwise, and it produces an obvious enough effect but one that\u2019s harmonious and doesn\u2019t get in the way. In some circumstances it hints at being like a \u2018bass optimizer\u2019 since it\u2019ll push some second harmonic by its nature. You\u2019ll probably find that for any given sound (especially an electric bass guitar) there\u2019ll be one polarity that\u2019s clearly better: I think for basses where the string swings near the pickup and produces extra voltage on that side of the wave, PurestWarm will saturate that side of the wave really well and it\u2019ll give you an ideal bass tone with no extra fiddling or processing required.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Pyewacket",
    "description": "an old school compressor for high definition transients. Adds no fatness, just energy",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "pyewacket",
    "short_description": "an old school compressor for high definition transients. Adds no fatness, just energy",
    "full_description": "Pyewacket is a strange beast. It\u2019s inspired by how much I love the 60s/70s recordings out of London\u2019s Olympic Studios, which had and used Pye compressors on many of my favorite classic and prog-rock records. Once you recognize the sound, nothing else will do: the musical event is delineated with hallucinatory intensity.\n\nMind you, for ten or twenty THOUSAND dollars it had damn well better hallucinate musical events on command: these are not compressors normal people can have, not anymore.\n\nHowever, I\u2019m \u2018chris from airwindows\u2019, so for me it\u2019s not just a matter of mimicking the faceplate or even the specific behaviors of the device. I want something more original, that can get the essence of that electrifying sound. I might not play like a musical hero, but I want a compressor that can deliver that crackling voltage. And as I was listening to examples of a homebrew Pye replica, it suddenly hit me: I know how to make a compressor cut back just the body of the sound, leaving that energy and transient definition. I can also bring in the \u2018brickwall filter\u2019 behavior the Pyes have, as needed. And I have a whole life of devoted music listening off classic vinyl records to guide me. I can get the sound.\n\nIntroducing Pyewacket. Pyewacket is my compressor familiar. It may or may not have dark magic, but what it does have (demonstrated at the end of my video) is a response and tonality like no compressor you\u2019ve heard. I can contrast it with Pressure4, and have done: where a more \u2019round and thick\u2019 comp like Pressure4 brings stuff forward, Pyewacket\u2019s soundstage sits back and the energy comes forward, from the highest treble to deep hard-kicking bass, producing a \u2018retro\u2019 sound where peak energy absolutely blows away the more thick, tubby RMS loudness. This is a compressor for a new era. We\u2019ve been doing \u2018loud and fat\u2019 for decades now, and the loudness war is on its last legs, with automatic playback gain controls rendering it useless. You don\u2019t have to be composing retro to use this. The only requirement is energy and information: whether as a 2-buss comp or to condition individual tracks, Pyewacket brings focus and intensity, and an incredibly clear and articulate attack transient where most compressors mangle and transform the attack beyond recognition.\n\nAnd if you try really hard, yes you can kinda-sorta make it do that \u2018Hole In My Shoe\u2019 gratituous pumping thing. Rest assured, though: you probably shouldn\u2019t.\n\nOther people can\u2019t do this plugin. You can\u2019t market it in normal ways because it doesn\u2019t do \u2018BIG PHAT THICK PHWOAARRR\u2019, you don\u2019t switch it in and have all the music leap forward and become much bigger and in fact it might make things smaller, and an inexperienced kid with softsynths and Apple Loops might think something was amiss and be extremely uninspired. And anyone trying to tie it to the twenty thousand dollar unattainable hardware compressor would be compelled to model every little detail of the very complex and twitchy hardware unit, and that would cause that plugin to be overprocessed and it\u2019d lose most of what made it special.\n\nBut Pyewacket is important, because it\u2019s the sort of thing I can do when supported by Patreon. I don\u2019t have to restrict myself to what\u2019s going to sell to blind market forces. I can make it the essence of how Airwindows would do this sound, and I have done. As such, it is free in AU, Mac and PC VST form. If I\u2019m poorer than you (go check on the Patreon and see, I get paid monthly) then it might be worth your while to chip in a buck a month (or more if you like).\n\nI really, really, really like this one, and maybe you will too :)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "RawGlitters",
    "description": "just the quantization from Dither Me Timbers\u2026 and the opposite, as a brightener",
    "tags": [
      "Latest"
    ],
    "slug": "rawglitters",
    "short_description": "just the quantization from Dither Me Timbers\u2026 and the opposite, as a brightener",
    "full_description": "",
    "categories": [
      "Dithers"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "RawTimbers",
    "description": "just the quantization from Dither Me Timbers\u2026 and the opposite, as a brightener",
    "tags": [
      "Latest"
    ],
    "slug": "rawtimbers",
    "short_description": "just the quantization from Dither Me Timbers\u2026 and the opposite, as a brightener",
    "full_description": "So, Dither Me Timbers isn\u2019t really a dither. I keep saying that even though it\u2019s got noise shaping and gets a sound that stands up to comparison with Not Just Another Dither: it\u2019s different, but good.\n\nThis is \u2018essence of Dither Me Timbers\u2019, no noise shaping\u2026 and the inverse, just because I can.\n\nAll RawTimbers does, is choose between truncating to fixed point upwards or downwards, from any given point. Like Dither Me Timbers, it runs one sample of latency in order to do this choosing. Unlike Dither Me Timbers, it has an opposite plugin: RawGlitters. I see this stuff as \u2018level-dependent EQ\u2019 and always thought it seemed useful to dull and soften the quietest sounds and let loud noises seem brighter: it didn\u2019t make sense to me to brighten the quietest sounds and let loud noises be duller (might be worth a rethink of this, but I\u2019ve been sick this week and can only do so much: this is after all vanguard stuff and I need to get it right, or try harder to get it right)\n\nAnyhow, this is RawTimbers and RawGlitters. It does the exact same thing as Ditherbox \u2018Truncation, 24 bit\u2019 except it\u2019s an EQ: RawTimbers softens the audio and rolls off highs (and actually generates more and different bright quantization noise, so it\u2019s not like it makes the noise floor itself seem darker), and RawGlitters brightens the hell out of the audio and sort of merges it with the noise floor. Both drastically change the nature and quality of the truncation noise floor: they\u2019re undithered, and each is super different from plain old truncation. I discovered making the video that if you hit RawGlitters first and run that into RawTimbers, you get a third sound that\u2019s interesting and pretty good\u2026 and if you run RawTimbers into RawGlitters, it\u2019s pretty terrible but I\u2019m not your mom, go ahead if you want. :)\n\nIn listening to these, remember the intense EQ effect (as in, cut treble up to 90% relative to mids and bass) happens ONLY at a fixed loudness that is barely over the 24 bit noise floor. If you play around with BitShiftGain you can check it out more easily, as I did on the video. All the effects only touch the noise floor area. These don\u2019t have noise shaping so they can\u2019t change overs or add excess energy: they\u2019re \u2018safe\u2019 in that they\u2019re predictable behavior, though you might have an interesting time exploring what they do to the tone.\n\nThey can be used for 16 bit CD-making as seen in the video: BitShiftGain -8 bits, RawTimbers/Glitters, BitShiftGain +8 bits gives you exact CD dithering.\n\nThey can also be used for conclusive double blind testing: since this is strictly two opposite ways of quantizing audio to the same fixed point output, you can make matching files for use in ABX testers. Use BitShiftGain to dial in the output bit depth you want, save all the results at 24 bit if you like (the quantizations will be the same) and listen for the brightening and difference in atmosphere of RawGlitters. On an ABX tester you\u2019ll be able to audition Timbers and Glitters all you like, and compare to X, which will be one of the two. You can use quiet sounds if you like, to help hear what\u2019s happening: it\u2019s totally legit to tailor audio that will reveal this stuff more easily, as it\u2019s the threshold you\u2019re interested in. I think it shows class to use volume levels where you could still stand the loudness of normal audio and not blow your speakers, even if the actual test audio is way quieter (cranking it up will help, and you don\u2019t have to blow your eardrums up as part of the comparison process, just keep it sane enough that the loud bits wouldn\u2019t be damaging)\n\nIf you do this and correctly predict X for whatever bit depth you\u2019re attempting, you\u2019ve conclusively shown that you can always hear stuff at that bit depth and nobody can contradict you. I\u2019m pretty sure literally everybody will hear 12 bit even over YouTube on whatever casual listening stuff you\u2019re using. I also think 14 bit is relatively trivial, and 16 bit is doable given the right example audio and some care and attention (this is a contentious claim, but I still think so). I don\u2019t think anybody can actually do this with full-on 24 bit audio\u2026 but if you did, over whatever fantastic (and very treble-accurate, and very low-noise) mastering rig you used, it would be conclusive proof of it.\n\nAnd you still ought to dither, even to 24 bit, \u2018cos it\u2019s the principle of the thing. But this is something different to do, and it\u2019s a legitimate choice. I suspect there\u2019ll be a lot of electronic musicians who take a liking to RawGlitters just because it airs up the digital noise floor in an interesting way\u2026",
    "categories": [
      "Dithers"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Recurve",
    "description": "a special buss compressor with no threshold point",
    "tags": [
      "Latest"
    ],
    "slug": "recurve",
    "short_description": "a special buss compressor with no threshold point",
    "full_description": "Sometimes the most amazing things are the simplest.\n\nRecurve is ONE line of code (per channel) plus a bit of implementation. It\u2019s a compressor, and this \u2018preview\u2019 look at it is a lot like when Spiral came out: this is Recurve as a \u2018black box\u2019, set up for maximum explosiveness and impressiveness. (I\u2019ve got more elegant plugins in the works and this will become a core technique due to its effectiveness and simplicity of coding, so this is the introduction to what the algorithm does)\n\nRecurve works on principles similar to Spiral. It\u2019s using a very high resolution sine calculation to affect the sound, and scales part of itself relative to the loudness of the sample it\u2019s on. It also enjoys similar principles of \u2018no sharp transitions, ever, for internal calculations\u2019. In a clipper that means the rate of curvature doesn\u2019t abruptly change, which is the principle behind Spiral. For Recurve, this is applied to the threshold of a compression and whether gain is being turned up or down.\n\nIf the signal is super-quiet, the gain doesn\u2019t change. Recurve takes moments of space and ambience between loud sounds, and preserves their character. It doesn\u2019t swoop up in volume: if you need sidechainy pumping, you have to use something else.\n\nIf the signal is medium, the gain gets turned up until it hits its max (with Recurve, it\u2019ll exactly double the gain, which is BitShiftGain at its smallest increment. Exactly 6dB of very clean gain boosting things. This isn\u2019t at a threshold: it\u2019s at the most intense spot of a sine curve, so as a waveform passes through this zone it\u2019ll increment the gain smoothly and without any transition points.\n\nIf the signal is loud enough, it pushes this curve back through zero to its most negative point, and the sine function delivers a -1, for the maximum gain-cut, which is also scaled by how loud the sample is. So Recurve can cut back an over-loud transient FAST. In fact everything it does is really fast because the lack of transition points and the gradual nature of this sine-triggering lets it react very efficiently without edginess. It also lets through sonority and projection but cuts dull and muted stuff, kind of like Pyewacket, but without Pyewacket\u2019s inherent pointyness.\n\nSounds complicated? Just listen to stuff and switch it on. This is a preview in extra-dramatic form of an algorithm that\u2019s going to find many uses in Airwindows plugins. It\u2019s the compression equivalent of Spiral for saturation, and it could be adapted in many ways.\n\nThe way you get today is a buss-comp or limiter form, running in true (linked) stereo. Mix into it and Recurve will gracefully eat up whatever you send it, even if you push it real hard. There\u2019s a built-in 6dB of very clean boost to show off what it can do, and there\u2019s a clipper on the output in case you get carried away and want to slam it so hard that transient attacks might poke out. And because of Recurve\u2019s curve-and-recurve gain adjustment style, you\u2019ll get none of the usual compression pumping and breathing: it\u2019s just plain different. I hope you like it. There will be more :)",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ResEQ",
    "description": "a bank of mostly midrange resonances",
    "tags": [
      "Latest"
    ],
    "slug": "reseq",
    "short_description": "a bank of mostly midrange resonances",
    "full_description": "Sometimes I\u2019m just contrarian, and sometimes it\u2019s for a reason.\n\nI keep getting asked to make a \u2018Soothe\u2019 plugin. I get that: it\u2019s hyped, it lets you make stuff louder, my plugins are free and open source, why not etc etc. I understand why I\u2019m getting asked to do that.\n\nHowever, I\u2019m here to explain why this week\u2019s Airwindows plugin is an OPPOSITE \u2018Soothe\u2019, and why you would want to do the opposite of Soothe (a sophisticated and very busy plugin that scans for resonant peaks and whacks just the frequencies that are resonating the hardest).\n\nResEQ is literally the farthest from that you can get. It\u2019s a bit like the filter banks on an old Polymoog. You set up frequencies (as many as eight, in parallel) and hear ONLY what those tight resonances let through. It\u2019ll kill other sounds as much as 90 or 100 dB down, nuke them completely beyond hearing. Far from evening out the tapestry of the sound and removing frequencies that poke out, it turns the WHOLE track into just beams of narrowly defined frequency.\n\nYou can do this with light, too. I think Polaroid experimented with this. You can reconstruct a full-color image from several bands of tightly resonant color, because of how the eye interprets them. The same is true for the ear. Given enough distinct bands of super-resonant audio you get a kind of facsimile of the original sound, and it begins to sound like an insane, ultra-resonant fullrange sound, just completely weirded out. (if you try to put this on a mix buss you have only yourself to blame)\n\nSo\u2026 WHY?!?\n\nBecause if you do that on a track in your mix, all the other tracks can speak clearly past the weird ResEQ one. It remains super-audible but completely gets out of the way. This is not really what you\u2019d put on a front-and-center track, a lead vocal, an orchestra stem. Nope. You\u2019d put this on the third set of guitar overdubs (the thickener!), on that background synth, on the horn buried in the back of the mix, on that extra drums overdub that\u2019s a little wacky. ResEQ goes on the colorful elements, the stuff that should have BIG COLOR but not get in the way. How do you get some quirky element or extra thing to jump way out without getting in the way? Set up ResEQ on it, voice it so it\u2019s covering the range you want. Tweak it until it has the right vibe (you can isolate or remove really narrow sound characteristics, truly transform a recording with it) and then sit it back or let it jump up front and slap peoples\u2019 ears. Either way, that track will make its presence known, bigtime, whether it\u2019s quiet or loud. It\u2019s all about the mids, high or low: if you need super high or super low, you\u2019ll be using something else. Mids are where mojo lives.\n\nIt\u2019s got a dry/wet control, too. So you COULD use it sort of like a normal EQ. But why would you do that when you can reconstruct an ear-grabbing caricature of the sound, with tons of character and mojo, AND have that sound sit easily in the mix making space for everything else?",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ResEQ2",
    "description": "a single, sharp, sonorous mid peak",
    "tags": [
      "Latest"
    ],
    "slug": "reseq2",
    "short_description": "a single, sharp, sonorous mid peak",
    "full_description": "This is another 'piece of an upcoming great plugin'. In order to do an MCI console properly I had to do a good mid peak.\n\nAnd we're talking 'way better than just a sharp biquad filter' mid peak. I needed clarity and character beyond what regular digital EQ cookbooks could cook up.\n\nResEQ2 continues on the work I started in the original ResEQ, where I observed that Manley EQ impulses for sharp resonances seemed to be like a sine-like ring, except the onset did NOT seem to be at the same frequency: seemed to start faster, even double the frequency. I made a whole plugin, ResEQ, giving it my best shot for generating multiple resonant 'rings' and combining them, to produce a convolution impulse that was the sum of multiple analog-like resoances. It still exists: it's way before I routinely worked at 96k, and it's got a lot of quirks, but it does get a distinct sound.\n\nI returned to those deep, murky waters when trying to come up with a sweepable mid peak like certain classic analog consoles.\n\nResEQ2 is the result. It's the opposite of what you'll normally find in great classic analog consoles. A lot of the classics really had quite limited analog EQ: detailed parametric sculpting came in with SSL, and to some extent API before that. In the olden days, things were a lot simpler (and you gained something sonically from this simplicity).\n\nBut there were a few special cases, and so you had MCI's sweepable mid, that could only boost. Not cut. It just gave you a sort of ring, wherever you wanted it. Not the most flexible circuit\u2026 but a hitmaker.\n\nThis is because, contrary to modern practice, there's huge power in being able to single out a midrange, upper-mid, or treble frequency, and sort of just open up the top of it so it can get effortlessly loud. Instead of just blasting everything, you find one presence peak on your track that really lets it speak, and you just give that a boost. More peak energy, more clarity exactly where it's most useful, and it's almost never in the same place for different instruments or vocalists, so the combined sound of the mix cuts through on dozens of sonorities at once, and everything is powerful and clear.\n\nIt's the mids equivalent of Airwindows Weight for bass, and it works incredibly well (even if you do it with biquads or EQ-design cookbooks). And I don't have the analog-Console projects finished yet\u2026 but you can have this part of it now.\n\nUse the 'ow argh way too extreme' settings like 1.0, where everything kind of turns into an audio laser, to dial in exactly what spot opens up an instrument or voice for maximum passion and sonority. Then, dial it back to around 0.5 and begin increasing it, seeing at what point you've got too much of a good thing. ResEQ2 is great at being a subtle light-bringer and giving clarity to a track. It's also a full-on energy weapon that can be set to 'way too much', so use it however you please. The resonance increases as you turn it up, so feel free to dial it back if it gets ringy. Probably not a good plugin for mixing live sound unless you like dial-a-feedback :) hope you enjoy ResEQ2!",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Reverb",
    "description": "simplified and tuned MatrixVerb, adjusting everything for each optimum verb size",
    "tags": [],
    "slug": "reverb",
    "short_description": "simplified and tuned MatrixVerb, adjusting everything for each optimum verb size",
    "full_description": "In some ways I think this is even better, but I know people like to fiddle with knobs, so MatrixVerb had to go first. And yet\u2026\n\nReverb is my new go-to reverb. Why? Because it takes all the interactivity of MatrixVerb and boils it down to ONE slider, and a dry/wet. It does all the same things: centered sounds spread, there\u2019s a subtle detune as if sound was passing through temperature differences in the room, high frequency stuff falls away accurate to the sound of real air in reference concrete cavern recordings: it IS MatrixVerb, in every detail. Except it\u2019s adapting all of that, on the fly, to best suit whatever size of reverb space you seek. Think in terms of \u2018bigness\u2019 and just go: if things are too cavernous, get smaller, if they\u2019re not reverberant enough get bigger. Reverb always does its best for whatever size of space you\u2019re making. If you need to get crazier, MatrixVerb still exists. You\u2019ll get results faster with Reverb\u2026 so much so, that I\u2019ve replaced MV in the Airwindows Starter Kit with Reverb. That\u2019s how much I like it: it\u2019s the space-maker I would show newcomers first, the most approachable way to audio ambience.\n\n(followup: subsequent reverbs like Verbity, Galactic and Chamber employed a feedforward configuration and got a richer sound. Reverb and Matrixverb turn out to be the 'plugin-style' reverb options, which is not to say they can't be useful too)",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Righteous4",
    "description": "a final output stage for targeting dynamic range",
    "tags": [
      "Latest"
    ],
    "slug": "righteous4",
    "short_description": "a final output stage for targeting dynamic range",
    "full_description": "This one\u2019s pretty eagerly awaited by some\u2026 all the more since I\u2019ve incorporated all the latest tech, such as the changes in denormalization and noise shaping to the floating point buss (it uses the \u2018more warmth, ease and depth\u2019 version when set to 32 bit) and even the Spiral algorithm in its overdrive section.\n\nBut you might not end up using that noise shaping, because Righteous4 has NotJustAnotherDither (and the CD version) built right into it, along with an optimized ADClip and code from an old strange experiment I did called ShortBuss. Yep! Righteous4 is your all-purpose final output stage, which handles final clipping, saturating and even the dither to let you output 24 or 16 bit fixed point in the purest, most optimized way. It doesn\u2019t even return to the DAW buss between these stages: everything is \u2018long double\u2019, so you put in your mix audio (from conservative levels to peaks that would clip a normal output file: it\u2019ll soak up the peaks) and you get out literally the data you burn to the CD or upload to Bandcamp etc. as hi-res HD audio.\n\nBut it\u2019s a little more complicated than that. Bear with me. Righteous4 will clog up and audibly distort under some circumstances, and it\u2019s for a reason that might interest you.\n\nMany music services these days (possibly all?) incorporate RMS loudness targets. They\u2019ll turn up your stuff and limit it (maybe) which is awful but outside your control\u2026 but if you\u2019re doing the loudness wars thing, they will turn you DOWN. And all your efforts to make loud masters will be wasted. Apple will cut stuff back to around -17 LUFS. YouTube goes for -13 LUFS. Spotify and Tidal do -14 LUFS. That\u2019s loudness units short of full scale (similar to how many dB down from clipping your average (root-mean-square, or RMS) loudness is). Loudness war folks often push to -8 LUFS or even more, and that means YouTube will turn you down (and Apple will turn you WAY DOWN) to fit in with their playlists.\n\nHere\u2019s the thing: you can have all the peak energy you want (caveat: Apple doesn\u2019t want your bright treble peaking over -0.4 LUFS in any case, so don\u2019t go too bonkers with brightness when aiming for Apple music services). Peak is not RMS. In fact, music sounds great with lots of peak energy pervading it: this is one of the reasons old vinyl records sounded so great! I\u2019ve measured RMS loudness behavior like -27 LUFS off old hit records. The energy pouring out of those old grooves is due to the way peaks and compression were handled: it was a different kind of limiting, handled differently, back then. Peak energy makes the music sound better. Righteous4 handles peak energy by clipping it with ADClip, so you can throw more at it in safety. This is not the audible clipping I\u2019m talking about (at least, not if you\u2019re talking percussive peaks etc. which are pretty cleanly clipped, especially by ADClip)\n\nThe audible clipping happens when you push your LUFS levels beyond the target. As you mix and set levels, you simply have to listen for whether Righteous4 sounds big and open, or whether it\u2019s getting a little intense, or whether it\u2019s obviously being pushed too far and breaking up (especially on bass, and mix fullness).\n\nWhat\u2019s happening is, the saturation from the Spiral algorithm is being fed into ShortBuss, which fills the energy back into the mix in the form of second harmonic. This is what gives Righteous4 its tone and extra warmth, and it\u2019s a nice fullness and bloom UNLESS you\u2019re slamming it (it\u2019s calibrated using the slider, where you select your target). If you are too loud, you\u2019ll hear it. Your peak energy will still be going up to the real clipping threshold, just as before, but your RMS energy will tell you how loud you should go.\n\nIt\u2019s that simple. You don\u2019t have to use it to hit LUFS targets, but since it\u2019s got Spiral in there it also broadens the heck out of the \u2018target range\u2019 so you can pick whatever seems right to you, and it\u2019ll guide you. If you find you need to push louder, you can set Righteous4 for a higher target, and that will clean it right up and let you push harder into the internal ADClip. If you\u2019re looking for big dynamic range, you can set Righteous4\u2019s target lower, or simply set it for Apple or YouTube loudnesses and then just don\u2019t push into it very hard: this will give you dynamics, but the replay-gain services will be kinder to the result because it\u2019s somewhat saturated and compressed, just in a very gentle way if you\u2019re hitting it that gently. And of course the output\u2019s optimized for whatever bit depth you\u2019ve selected, so you can directly target CD or 24/96 or \u201932 bit file to send to further mastering\u2019 if you still need to mix into something more organic than a hard, brittle digital mix buss with all the charm of math :)",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SampleDelay",
    "description": "three delays combined: millisecond, sample and subsample",
    "tags": [
      "Latest"
    ],
    "slug": "sampledelay",
    "short_description": "three delays combined: millisecond, sample and subsample",
    "full_description": "SampleDelay is a very simple thing, implemented in a particular way. It's not exactly an echo (though it can be), not exactly a timing adjustment tool, not exactly a sound shaper\u2026 more like, a little of all of those things.\n\nYou've got up to 100 milliseconds of delay on the first control. On the second, you have 0 to 10 samples of delay, exactly. And on the third control, you have zero to one sample: you have a subsample trim. They all work separately and combine into a single delay, with an inverse/dry/wet control on the fourth slider.\n\nWhy? Why like this?\n\nSure, you can use part-dry and part-wet for a single slapback echo. Sure, you could set it to half-inverse and have total cancellation and make a comb-filter effect, or set it full wet\u2026 or full inverse\u2026 for a small timing adjustment on a multimiked setup.\n\nBut let's consider that multimike setup. Suppose we're trying to get a snare mike in phase with nearby overheads. Well, one thing we could do is isolate the snare mic with an overhead, and set the snare to fully inverse (assuming the mic's phase isn't also flipped\u2026) and dial in the timing to cancel as much as possible. Then, go to the opposite (inverse or wet) and you have your fully in phase signal.\n\nSame with multimiked guitar cabs. Find the beef by canceling it and then flipping from inverse to wet (or vice versa)\n\nOr, go for effect and have the spot mike stay inverted and don't bring it up as much, and it'll make things more bright and complex\u2026 or put it slightly off for a tonal shift. Three separately adjustable delay ranges down to the finest you could have, and the one inv/wet control to let you quickly do whatever you want.\n\nThere's a reason I've been asked to bring this one back. Hope you like it. For some this will be a very boring effect. For others\u2026 not :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SampleUndelay",
    "description": "the original AU SampleDelay that declares lots of latency to do 'negative delay'",
    "tags": [
      "Latest"
    ],
    "slug": "sampleundelay",
    "short_description": "AU-only SampleDelay featuring negative delay",
    "full_description": "By request, here's something from the retro bin, brought up to date as well as I could :)\n\nThe original SampleDelay offered millisecond, sample and subsample delays, but it also offered negative delay. The thing is, it did that through declaring a bunch of latency and then delaying to match it. There's a couple problems with that. Firstly, it kills your ability to track into the mixing system: everything gets the maximum added latency, and then more delay to get to whatever the target delay time is. So you're always getting thousands of samples delay no matter what: it's only OK for mixing. Even recording automation that will interfere with you being able to interact with the mix.\n\nSecondly, I've had trouble making it work reliably with different programs. Generally at 44.1k it does what it means to do. I've seen 96k recordings mysteriously try to use 88.1k for a latency, throwing off the calibration of the ms control. Never mind trying to do a VST port: I've not seen documentation on how that's meant to be done though I understand the JUCE folks try to make it work, yet even they seem to sometimes run into incompatibilities. I'm running into incompatibilities even just on Audio Unit. For the time being I am not liking the results of trying to declare latency, even just on AU where it's part of the basic plugin format.\n\nBut I was asked to bring this back anyhow\u2026 so here it is, as-is. It's January and I'm mostly trying to get other stuff up to speed, such as the reverbs: in my video I asked whether people are interested in a 'redux' of kCathedral, because I'm interested in revising it to address criticisms (I'd keep the original one available, but replace it with a newer version) and to take advantage of a lot of woodshedding I've been doing on the subject of reverbs.\n\nI've got a lot of things coming out in February, I just wanted to drop a thing or two that are not as big as full plugin releases, or things like this where there's a couple people who want it, and limited scope for it. For VST users (of which I'm one, on Mac Reaper, because it runs a 64-bit buss) or indeed anybody, I'd also recommend just sliding the track earlier in the DAW, and then if you want a plugin, finetune it with the regular SampleDelay which will do exactly the same thing in the end, except you can track into it because you're running a zero latency system (outside of whatever your DAW and converters impose).\n\nFor those of you that asked for exactly this, hope it will do :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Shape",
    "description": "an asymmetrical waveshaper for peak manipulating",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "shape",
    "short_description": "an asymmetrical waveshaper for peak manipulating",
    "full_description": "Here\u2019s a really basic building block for ya. The key word here is asymmetrical.\n\nShape is a simple, often subtle, little plugin for either pulling out, or squishing in, parts of the waveform. It\u2019s based on the same basic technology as Console: complementary sin() and asin() functions. But in Shape, you\u2019re picking which you want to apply, and you\u2019re offsetting things so you can hit one side of the waveform more than the other.\n\nWorks like this. The Shape control determines what you\u2019re doing. In the middle (0.5) you\u2019re not doing anything. Increase it to 1.0 and you are stretching out the peaks of the waveform. Turn it down to 0.0 and you\u2019re squishing the peaks of the waveform: like a soft-saturation but no boost, just restricting the waveform and making it distorted. The control scales all this so if you\u2019re not cranking it out, you have lots of headroom and very gentle effects.\n\nThe Offset control interacts with this by shifting things from one side to the other: 0.5 is no offset, 0.0 is negative and 1.0 is positive (in my sound editor in the video, this is the top half of the waveform as positive). The effect of this, especially if you\u2019ve not cranked out the Shape control, is to make the Shape control do its thing to only one side of the wave. You shouldn\u2019t automatically crank this one out either: you can, for nasty waveshaping tricks, but the power of Shape is in how transparently it can manage the positive and negative swings of your waveform.\n\nAlso, when we\u2019re reshaping the waveform so asymmetrically, that\u2019s built-in even harmonics: this is a recipe for warmth. It\u2019s like a turbo version of my PurestWarm plugins but even smoother, or like a variation of my SingleEndedTriode plugin. Use it gracefully (not cranking out the controls all the way) and everything you do will be tonal adjustments of great purity and subtlety, which is why it can be a bit hard to hear its effect when the controls are very near the middle.\n\nSo the trick is to know what way you\u2019re using it. If you\u2019re doing sound design and you\u2019re trying to get a sound to swing fully in both directions, you can either pick the part that you think is swinging too far (pos or neg), set the offset to favor that, and pull back that side by setting Shape lower than halfway (cutting BACK the side you\u2019re focussing on), or you can pick the side that doesn\u2019t go far enough, set the offset to favor it, and turn Shape UP to bring that side\u2019s peaks up to match the other side.\n\nOr if you\u2019re working on a bass and want it to be warmer, you can just choose between more Shape (more of a triangle-ey result out of a sine input) or less Shape (more of a squared result out of a sine input) and then lean the Offset one way or the other to get the warmth you want (not all the way, or it won\u2019t be as smooth).\n\nOr, you can take your bass that you want to be purer, and try to identify whether it\u2019s too triangle-ey or too square-ey, and then apply Shape to nudge it more in the direction of a pure sine-ey tone. It\u2019s a waveshaper, so you can stack them up to get a VERY soft square or a soft-pointed triangle out of any sine-bass you start with, or put \u2019em back to the sine shape, or lean the offset one way or another, all very transparently.\n\nI don\u2019t know how clear all this is, because you probably don\u2019t have this function laid out in this way, and it\u2019s too subtle for normal plugin makers to be able to sell you. Any commercial plugin where turning it up doesn\u2019t equal \u2018more\u2019 plus you can\u2019t always hear what it does, is in big trouble. But I\u2019m Patreon-supported so I don\u2019t have to follow those rules, so I can give you Shape even if most people don\u2019t get a big charge out of it and throw their money :)\n\nAnd so I have. Enjoy Shape. My hope is that it serves its useful purpose for those who need to tweak exactly this, as transparently as possible. And if you didn\u2019t need to\u2026 maybe you just didn\u2019t know it was a thing. It is now! :)",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "SideDull",
    "description": "like Sidepass, but a lowpass on the side channel. Treble-centerer",
    "tags": [
      "Latest"
    ],
    "slug": "sidedull",
    "short_description": "like Sidepass, but a lowpass on the side channel. Treble-centerer",
    "full_description": "There are some nice things about Patreon-era Airwindows. Not the money: that sucks, though I think I just about have basic survival taken care of as long as I don\u2019t eat much and nothing happens to my car :)\n\nNo, the cool thing is this: I can put out tools that have NOTHING to do with a plugin marketplace. If even one person finds the plugin useful, I can put it out. SideDull is kind of like that. I was asked, \u2018since Sidepass is great, can we have a lowpass version?\u2019. And I went \u2018huhh? why would anyone want to narrow just top end, or center mids and up while not touching lows?\u2019\n\nThe answer is of course \u2018why not?\u2019 and \u2018if you are sure you won\u2019t be doing that, don\u2019t install this plugin\u2019 :)\n\nI don\u2019t need to explain what SideDull does: it\u2019s the same as Sidepass but in reverse, narrowing/mono-ing highs and down. I WOULD like to explain something about its role in a DAW user\u2019s toolkit, though. I\u2019m seeing this increasing churn in the plugin industry, a frenzy of new stuff and new requirements and DRM systems and dongles and such. It\u2019s like a fulltime job to keep up with your recording system. My own pet fear is updating something only to find that I\u2019ve hosed myself and everything\u2019s now broken.\n\nThat\u2019s why SideDull, and every other plugin, is built on a time-capsule 10.6.8 system and the VST\u2019s built on a time-capsule isolated-from-the-internet virtual Windows 7. I\u2019m using the simplest possible interfaces (some vendors, like Blue Cat, have taken pains to implement the generic interface super well, and can even skin it attractively) and not touching stuff that causes forced obsolescence, which I think is really bad news for us all.\n\nSo, the free AU/VST plugins (and the Kagi AUs before them) can be like your favorite screwdriver: you get to have the best and simplest audio tools that do NOT break. That also means that if you can only afford legacy computers (or just like being frugal and spending your money on Rickenbackers, as I long to do) you aren\u2019t out in the cold\u2026 ever. I\u2019m dedicating the rest of my life to putting tools in the hands of kids and dinosaurs alike, and following it up with my open source initiative. And the longer I do live, the more of it I get to do: but if I keel over tomorrow, all the plugs will still work and I will have had a good day and slept with a clear conscience :)",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Sidepass",
    "description": "a simple utility plugin, a highpass on the side channel. Mono-maker",
    "tags": [
      "Latest"
    ],
    "slug": "sidepass",
    "short_description": "a simple utility plugin, a highpass on the side channel. Mono-maker",
    "full_description": "This one was by request. It\u2019s not very fancy, but I hope it\u2019ll come in handy. If it is, spread the word!\n\nI\u2019ve got a plugin called ToVinyl, which is rather fancy. It\u2019s the Airwindows attempt at a vinyl mastering suite: elliptical EQ, highpass on the mid to help get levels, an acceleration limiter to tame sudden energy spikes without really cutting brightness otherwise, and even a groove wear modeler that was the precursor to Airwindows Aura. That\u2019s one of the Kagi for-pay plugins, number 9 on the list when I reach $800 a month and begin doing those.\n\nBut, I got asked for something much simpler. A highpass filter on just the side channel, and one that would go up the full range from subs to highs, so at full crank it\u2019d be purely mono.\n\nWell, I\u2019ve altered that a teeny bit: Sidepass is aware of sample rates, so if you\u2019re at a 0.1 setting at 44.1K, it ought to be doing the same thing at 0.1 at 96K. But apart from that, here\u2019s a little utility for AU, Mac and PC VST that just highpasses the side, from DC to 22K. It\u2019s an Airwindows filter, same as what\u2019s in Density and Drive as a highpass, and it ought to do nicely.",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Silken",
    "description": "a high frequency boost that gives ambience and texture",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "silken",
    "short_description": "a high frequency boost that gives ambience and texture",
    "full_description": "Here's one where the plugin is probably better than my ability to demo it. Silken is a kind of high frequency boost, based on PrimeFIR used in 'prime mode' but backwards, so rather than being a lowpass with lots of ambient leakage, it's a method of subtracting such a brickwall mostly linear phase lowpass with different leakage.\n\nSo that's a lot. You can simply listen to it and see whether it is able to do 'silky high frequency boosts such as you might use for lead vocals' or you can bear with me as I try to explain HOW it does that thing. Because, even though stuff's kinda hectic around here and my video wasn't good, the plugin I made really brings a useful texture. If I could sing better I'd be all over this demonstrating how great it is, and even so it might help out. I feel it might click with people so it behooves me to explain how it's real.\n\nSo, you can run a brickwall filter, using a 'window' (one of the controls) to determine just how steep the filter's gonna be. It's an algorithm called a sinc filter, and the wider the window, the steeper your brickwall can be. It's a phase-linear filter, so it has pre-echo and it has latency. Silken does not compensate for this latency, which depends on how wide the window is: it's a slightly unusual arrangement because it's not completely symmetrical in an effort to cut down on the latency.\n\nSo far so good. It's like a shelf for boosting highs and cutting lows. But then, bring in what PrimeFIR does. That lets you make the filter only from prime numbered samples, and not every sample. What happens when you make a sparse filter like that? I've made multiple plugins that use this TYPE of effect: BrightAmbience, and in fact my classic plugin Iron Oxide. There's plenty of experience in using this type of effect\u2026 at least with me :)\n\nPrimeFIR can make a 'lowpass' out of only prime-numbered samples (part of the filter, not just counting every sample in your audio) and it lets through a sort of 'haze' around the filtered sound, as audio across the whole window bleeds through. What Silken does is different in two ways. First, it's subtracting the filtered part, to make it a highpass. Second, it's constructing the filter out of only NON-prime samples, this time. So what's happening is, it's more effective at being a highpass than PrimeFIR is at being a lowpass, but the stuff that leaks through is still out of the prime numbers because those are now the ones NOT being subtracted.\n\nYou get a highpass where, the harder you push it, the more of an 'aura of silky ambience' you get around the highs. It will sort of diffuse super high frequency transient information, like a diffusion filter does for visual information. The result is flattering in exactly the same way a camera's diffusion filter is. It should work fine on even the most high quality sources, but it should be an absolute lifesaver on the kind of nasty mic (like certain lavaliers!) that puts out distressing hyperfocussed bright transients. Now, you can diffuse that and change the texture of it, not just turn the brightness you've got up and down.\n\nHope you like it :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "SingleEndedTriode",
    "description": "unusual analog modeling effects",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "singleendedtriode",
    "short_description": "unusual analog modeling effects",
    "full_description": "Everybody knows that analog modeling means distortion. (well\u2026 noise and distortion. And EQ, and overprocessing\u2026 but mostly distortion.)\n\nHowever, it\u2019s always the same sorts of distortion: soft or hard clipping generating harmonics. Here, have three totally different kinds!\n\nSingle Ended Triode does three things, and you don\u2019t have to do them all at once (in fact you probably don\u2019t want to).\n\nThe actual Single Ended Triode control is a special gain-staged saturation that\u2019s asymmetrical. It\u2019s a little like PurestWarm, only not, because rather than put a soft saturation on one-half of the waveform, it offsets everything and goes into the saturation with a bias voltage. Then it subtracts a related voltage, and scales the whole thing up or down based on how much distortion you\u2019re looking to get. (shown in the source code, of course)\n\nThat means you have a \u2018second harmonic generating\u2019 asymmetrical distortion, but with NO crossover point. Unlike PurestWarm, SET is a continuous waveshaper just like using a real triode tube single-ended, and while you can crank it up to get obvious effects, its real magic is in using just a tiny amount to warm and sweeten things. It\u2019s perhaps not ideal for the 2-buss because you\u2019d simply be removing some of your mix energy on one half of the wave, but if the sweetening is what you need it might be worth it, because it\u2019s a super clean way to do that. It\u2019s only the asymmetrical distortion, and the interesting thing about that is: know how Spiral smooths the transition between sides of the sin() waveshaping, and that made it sound better? With Single Ended Triode, it\u2019s capable of doing that transition when cranked way up\u2026 but used subtly, the entire audio output sits within one sin() calculation, and you don\u2019t see a transition in the first place. This is literally why high end SET stereo rigs perform well for musicality and fluidness of sound: they have obvious faults but they\u2019re great at avoiding crossover issues between push/pull sides of the circuit because they don\u2019t have two sides to the circuit. It\u2019s single-ended, and so is this algorithm unless you\u2019re wildly distorting the heck out of it.\n\nCrossover issues, you say?\n\nWhy yes. Meet Class AB (and Class B) Distortion.\n\nThis is the opposite. It adds nonlinearities as the signal passes through zero. It\u2019s a STRONG tone coloring and certainly not for the 2-buss or nice mellow music: the Class B is downright nasty and you should be careful about using it if you have delicate tweeters, as it\u2019ll create extremely harsh treble grit (though, interestingly, without Gibb effect converter clipping: that is when reconstruction of the wave makes treble go past what bass can do, when it clips the converter on highs. This is a kind that could blow your tweeters at super high volumes but does not clip the converter doing it)\n\nThe Class AB transitions through the middle of the wave in a more curvy way, causing the effect to lean towards the gritty upper-mids. Where might you find this kind of noise? Certainly not in any acoustic instrument. But\u2026 listen to certain old nasty tube Hammond organ sounds. Certain big guitar amps. Past a certain wattage, nearly every old tube amp is run push-pull (same with many transistor amps). They run hot, their calibrations drift\u2026 and one of the things that can happen to an amp is problems with that transition zone. Use Class B distortion and you\u2019ll get very much the sound of purely transistor amps breaking down and going cold and gritty. Use Class AB (because with tubes, you\u2019re probably going through output transformers and speakers that don\u2019t have hi-fi tweeters) and you\u2019ll get a bit of that gnarly rock-and-roll grit. There are expensive boutique stompboxes that can do this. Now you have it in a free, open-source plugin: open source devs, take note, because this one\u2019s not often talked about or modeled. Most attention to amplifier crossover distortion has come from High End audiophile circles, and those guys have been getting mocked for decades. This stuff will not affect a frequency response plot. In certain systems of measurement you won\u2019t even see it at all, and for years people have done naive measurement and claimed \u2018it\u2019s perfect, no further work needed!\u2019 and the audiophiles were tearing their hair out, swearing that certain amps sounded like butt even if they measured \u2018perfect\u2019.\n\nLittle did they know that in 2018, musicians would be turning to those same horrible distortions for creative purposes, sweetening with Single Ended Triode, adding grit and attitude with Class AB distortion, and being able to put a layer of really brittle edgy brightness onto the occasional sound with Class B.\n\nPS: some of you are having a lot of fun modeling existing hardware using elaborate combinations of Airwindows plugins. Just saying, these three sources of really specific coloration are exactly what you need to do that. Be careful of Class B as a little goes a long way (in fact, I would pick either Class AB or Class B but not both: study the circuit topology and only use AB and B where push/pull circuits actually exist, and remember they\u2019re designed not to cause this kind of problem. AB contains overlap that stops the transition point from being exactly in the middle. Apply wisely.)",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Slew",
    "description": "a slew clipper, which darkens treble in an unusual way",
    "tags": [],
    "slug": "slew",
    "short_description": "a slew clipper, which darkens treble in an unusual way",
    "full_description": "Slew is the very first plugin I made for Airwindows (or at least the first one listed on this website).\n\nSlew is a simple plugin to let you do slew clipping. You can use it to morph and transform percussive sounds or hats, you can give a unique and interesting \u2018grind\u2019 to instruments or glue stuff together into a retro, old-school-sampler, grungey grind, or you can use it on things like reverb sends to really amp up the sense of distant loud sound in a room or space.",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Slew3",
    "description": "a new approach to slew clipping meant for a more analog-like darkening effect",
    "tags": [
      "Latest"
    ],
    "slug": "slew3",
    "short_description": "a new approach to slew clipping meant for a more analog-like darkening effect",
    "full_description": "A Chris\u2019s work is never done! Or at least it\u2019s not, when it comes to refining basic tonal building blocks that apply to many plugins. It\u2019s just recently that I updated Capacitor with an analog behavior found (quite strikingly) in certain real-world capacitors. I\u2019m at it again.\n\nThis makes a third Slew plugin, and every one is strikingly different. Slew (original) darkens radically and makes a grungy, clipped tone (it\u2019s in Channel, too, very subtly). Slew2, though there are some similarities in code, acts wildly different: it produces an intense rolloff that is only right up at the Nyquist frequency, and is an elegant anti-glare solution, but barely has a tone at all.\n\nSlew3 uses ideas from Acceleration and DeBess to produce a slew clipping that\u2019s actually reading information beyond what the samples provide: it\u2019s like it reconstructs the wave a bit and is most effective where you\u2019d get intersample peaks. It\u2019s NOT an EQ: it has very striking dynamic qualities. It\u2019s not a pure \u2018glare cutter\u2019 like Slew2, either: there\u2019s a limit to how much it will darken. But what it\u2019s all about is producing an analog top-end on your digital content.\n\nThis is an experimental plugin. In development, some of my audio caused it to freak out, and it took extra time to get it to behave (I suppose I could also put out the freak-out version but for now let\u2019s stay safe, OK?). It\u2019s not quite linear or predictable (neither is real analog) and though I feel like it might have some very serious mojo to bring, I\u2019m also interested in whether it dies given certain kinds of audio. I\u2019m pretty sure I have it tamed to where it won\u2019t do anything crazy, but is it really the silver bullet? I guess we\u2019ll find out together.",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SlewOnly",
    "description": "a mix check plugin that shows you only the extreme highs",
    "tags": [],
    "slug": "slewonly",
    "short_description": "a mix check plugin that shows you only the extreme highs",
    "full_description": "By request, here\u2019s my mix monitoring tools, for VST and Audio Unit, Mac and PC! Please remember, these like Guitar Conditioner are control-less plugins so you don\u2019t operate them by opening their windows: they\u2019re either on or off, which probably is shown in your DAW mixer window already.\n\nSlewOnly gives you what it says on the tin: only the difference between samples, expressed as a sample. This produces a super-bright sound with zero latency and absolutely no pre-ring or post-ring. You can do two poles of this filtering: just add another SlewOnly. But, as is, this will give you an incredibly clear and transparent window on the ultra-highs, so you can dial in subtleties in the treble. Beware: don\u2019t switch right back to the normal sound or it\u2019ll sound incredibly dull. Rest your ears for a moment before resuming work.\n\nSubsOnly does the same thing for subsonic bass. It sounds a little like a house party from an adjacent house. You can tweak sub-bass elements and really hear how they\u2019re balancing against each other, and if you\u2019re packing too much into the subs you\u2019ll hear that as well. Get things thumping properly through SubsOnly and it should translate well to all manner of bassbins and subwoofers.\n\nLastly, these are calibrated (in SlewOnly quite literally: pink noise will be about the same amplitude with or without it, though the tone will be way different) so that you can switch them in and out, and expect roughly the same loudnesses. It\u2019s okay if SubsOnly is louder for fullbodied bass: with that, it\u2019s not so much about level-matching, it\u2019s about getting your sound (at whatever desired loudness) and then having the bass still make sense through SubsOnly. If you\u2019re madly overloading it, there won\u2019t be groove, just a lot of thunder and noise, at elevated levels. These go on at the end of your master buss, so you can hear what your 2-buss chain did to the sound. Especially if you try and go for \u2018commercially loud\u2019 volumes, sanity checking with these tools can be a real silver bullet.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SmoothEQ",
    "description": "a sharp, accurate, transparent three-band filter",
    "tags": [
      "Basic",
      "Recommended"
    ],
    "slug": "smootheq",
    "short_description": "a sharp, accurate, transparent three-band filter",
    "full_description": "This follows AngleEQ, so it follows an extremely weird, colorful, poorly behaved EQ with a super-clean, accurate, well-behaved EQ, just for variety. Not in the sense that you dial in exact dBs and frequencies: it's still a 'by ear' filter like the great analog EQs, and I'm probably not the person you go to for 'add exactly two and a half dB of 3026 hz shelving and that's the important part, all EQs sound the same'.\n\nWhen I say accurate, I mean that unlike AngleEQ if you set SmoothEQ flat you get EXACTLY what you put into it. It uses a subtractive technique that I like, not sure if other people do this, where the sound is assembled out of sub-bands that are always 'one band is the filtered, and the other is that subtracted from dry'. It's that which I couldn't do with AngleEQ, and which has been tricky with everything short of simple biquads (for which it works excellently).\n\nAnd this is the breakthrough where I worked out how to do this thing I like, which I'm not sure anyone cares about but me, with ANY degree or order of filters so long as they're biquads. Maybe even beyond that, but turns out biquad filters are very cooperative with this.\n\nSmoothEQ uses eighth-order crossovers: steep! They isolate real well. But so powerful is the technique that I can use Bessel filters instead of Butterworth, for nicer phase behavior. There are limits: I don't think I can use this for speaker crossovers, it's strictly for setting relative volumes of EQ bands and listening to a combined output. The trick is, if I apply cascaded filter crossovers and try to subtract it from dry, I get what I got in AngleEQ, a phasey mess.\n\nBut if I reconstitute the original signal from the 'sections' between EVERY stage of filtering, I get the degree of filter steepness I wanted, AND all the sums still reconstitute to a perfect, bit-identical input if set flat.\n\nIf you wanted an Airwindows five-band, or seven-band, or 31-band EQ this is how I'd have to go about it. I don't know if it would hold up at 31 bands of EQ, or how well that would work, but mathematically I know that if you set it flat you'd have ultimate, bit-identical, perfectly transparent sonics, because that's the only way the technique CAN work. There are obvious applications in making, for instance, a Mesa Boogie 5-band guitar EQ and having it sound amazing without analog modeling: sometimes what you want is the merits of analog processing, not just to imitate everything. It'll make EQs that are perfectly accurate set flat, and then you're shelving up and down bands of frequencies with extremely clean boundaries, as steep as you like.\n\nSmoothEQ is a simple three-band version of this. Now that I know I can do it, I can do a future ConsoleO (orchestral) and really do a good job of keeping the tone even through filtering. This is not a linear phase EQ but does not need to be, since everything is either perfect or some degree of the tone produced by extreme EQ isolations: whatever that sound, if you add only a tiny amount of filtering you automatically get only a tiny amount of that tone color. That's why I build it in that peculiar way, to get that result.\n\nIt's going to be fun running with this technique and making stuff sound better, and I hope you like SmoothEQ :)",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "SmoothEQ2",
    "description": "a wildly intuitive vibe EQ with clarity and intensity",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "smootheq2",
    "short_description": "a wildly intuitive vibe EQ with clarity and intensity",
    "full_description": "Turns out there was a lot of potential in SmoothEQ.\n\nThe idea here was to go to a four-band, like the parametric in ConsoleX, but instead of peaks and notches make it fully use shelves in the manner of the original SmoothEQ, so it can deliver ultimate clarity when subtlety is needed.\n\nThen, with the addition of a simpler type of filter (thanks to my livestream chat for knowing exactly how to specify these with great accuracy) it was possible to use even higher orders of filtering, even steeper crossovers for the shelves.\n\nThen, the question 'still Bessel, or go with Butterworth for the Q factor?' got drastically derailed by the stranger question 'why not just have all these Q factors vary according to the frequency settings of the bands?'\n\nNot the settings of the crossovers, no\u2026 the settings of the BANDS. Sweeping a band moves both crossovers bordering it. So does that move a flat shelf around, which sounds like a nice thing to do?\n\nNope, because if you make the resonances track how close each center frequency is to each other, you get shelves that are also tilt EQs accentuating where in the band's travel the band is. So if you push high-mid up, the cutoff against high gets steeper, and the cutoff against low-mid gets shallower, more Bessel-like. Hard to explain. You have a frequency band that is also a tilt EQ for just that shelf, and that follows a center 'resonant peak' which isn't actually there at all.\n\nWhat does this mean? Try it. Boost or cut stuff, sweep the bands around, see how they act like sweepable resonances but are actually tilting shelves. If you can (I know it's unusual) and you have the four joystick design I had Yaeltex make for me, put fingers on all four joysticks and morph a sound into whatever you like on all bands simultaneously. The way this tracks your intentions with EQ, I think that would actually work. Or, any other way you can dedicate eight knobs to a bank of EQs, give that a try too. Or it'll work perfectly fine just in the DAW as sliders, it's just that this one lends itself incredibly well to hands-on control. There's controllers for cheap that have tiny vertical faders with panpots over them: have the vertical faders be band volumes, and the panpot above it be the corresponding frequency.\n\nThis one I'm building into a Console version just for me :) but here it is, way earlier than that, so you can see what's going into a Console version that comes after the promised ConsoleH. I told you I was going to let you swap out many different Consoles on a track-by-track basis, and I've got ideas for just that. Hope you like the preview that is SmoothEQ2.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "SoftClock",
    "description": "a groove-oriented time reference",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "softclock",
    "short_description": "a groove-oriented time reference",
    "full_description": "By special request, here's SoftClock before I can properly demo and use it. I'll have to play catch-up!\n\nSoftClock is a timing reference, like a click track\u2026 but far more powerful, because it does not synchronize machines so much as it synchronizes HUMANS. You put it on an unused track, and route it to another track AS AUDIO which you then record, in the arrange window as just another audio file. This can be done as you lay down an initial track while listening to the SoftClock output.\n\nWhat's the noise it makes? Frequency swoops, of a tone. It doesn't turn on and off, there's no attack or decay\u2026 a continuous tone which drops in volume as the pitch drops, but otherwise is just a drone\u2026 and this is your new click track.\n\nThe next question is 'for the love of God, why would you do such a thing?' Because not only is this not a percussive sound, it doesn't even have a definable attack, and yet it proposes to replace click tracks, and in fact wants to become a timing reference for a world of 'human played' music where nothing is snapped to grid. There will be no grid, just human-played tracks riffing over SoftClock.\n\nThe reason is, Entrainment. The 'swoop' of the tone mimicks the swing of a drummer's arm, or the strum of a guitar\u2026 or a dancer's body. It's digitally accurate, but directs the listener not toward an inhumanly accurate 'tick' but towards a motion\u2026 and when many players are moving in synchrony, that's when you have a powerful groove.\n\nBut there's more. It's also a reference to where you are in the bar. The non-accented beats ebb down to a lower tone, and then ramp up again toward the One, which is the loudest and highest-pitched swoop of the tone. The amount of variation can be controlled, as can the basic pitch. Bear in mind the volume does modulate, but not in such a way as to produce an attack, even at the fastest speed settings. You dial it in to mimic the motion of your body playing, whether that's groovy or laid-back or hammering, and the non-accented beats always show you where you are in the bar, in an easy-to-hear way, even if the beats are themselves swung or the backbeat is slowed to add weight and bombast.\n\nWhat about those accented beats? Firstly, they're louder and higher-pitched, but they're also spaced out in an interesting way. You see, SoftClock can give you 4/4, or eighth notes, or four bars of 4/4\u2026 but it will also give you odd times beyond your humble sevens and elevens. It'll give variations on funny times when you've gone beyond 4/4. Here's the list, and how they're counted:\n\n1, 2, and 3 are counted as you'd expect. 4 is counted as 2,2. 5 is counted as 3,2 (in other words: one two three one two, with one being the accent). 6 is 3-3, and 7 is counted backwards from how Pink Floyd's 'Money' had it: 4-3, one two three four one two three. 8 is 4-4, 9 is 3-3-3, 10 is 5-5.\n\nThen things get more complicated. Note that Count numbers 8, 16, 24 and 32 are reserved for 4/4 with accents every eight beats, so you can have normal time but hear the unaccented beats guide you around one, two, three or four bars and highlight the first One.\n\n11 is counted four ways: 3332, 443, 551, 65.\n13 is counted three ways: 3334, 445, 553.\n17 is counted four ways: 44441, 5552, 773, 881. \n19 is counted four ways: 44443, 5554, 775, 883.\n23 is counted four ways: 444443, 5558, 7772, 887.\n\nCount the accents and they'll come in these spacings. It's options for 'sub-phrases', repetitions or modulations up front and a variation for a turn-around, orienting you to the odd rhythm. The idea is for the repetitions to themselves be easily countable, and ideally seem to fit into a 'four sections but one is different' or 'three sections but one is different' model.\n\nThis is in line with a music arrangement game I've been developing that's more likely to see life as a video-game now than as the card game I'd intended. Point being, SoftClock can do normal metronome things (except using entrainment rather than ticking at you) and orientation things as far as locating you in the bar, but it can also combine all that into a baffling proggy rhythm that nevertheless guides you into grooving and memorable riffs of many kinds. If the standard variations on freaky prime-numbered prog-meters aren't enough, you can play with Swing and the delay of BigBeat (accented beats) until you've gone full Beefheart: or, rather, full Magic Band and John French drum parts.\n\nDive as deep as you like, or keep it more simple: SoftClock has you covered. You may be surprised at how much easier it is to hear, entrain, and orient yourself when using a click track that refuses to click. Remember, lay it down as a track, don't try to match it to a normal click, don't grid anything! SoftClock is for gridless grooves, and music that sounds human because it moves like humans. See how it feels.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "SoftGate",
    "description": "a gate that can mute hiss and smooth sample tails",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "softgate",
    "short_description": "a gate that can mute hiss and smooth sample tails",
    "full_description": "Hi! Today\u2019s Airwindows tool is for sample makers (though you could use in in a mix if you really wanted to, or abuse it for special effects). It\u2019s called SoftGate.\n\nThe purpose of SoftGate is this: you can set it so it\u2019ll take the noise floor of a recording that you want to turn to samples (or multisamples), and fade it into darkness. You can set it to do this quickly, or quite slowly. This will clean up the noise floor of your multisample instruments and let you sustain things for longer, whatever the source recording quality is: if it\u2019s real noisy and all your samples fade into a bunch of ugly noise, tell SoftGate to fade more slowly (lower on the slider) and allow that to kick in as the sound fades away into what\u2019s supposed to be silence.\n\nOr, if it\u2019s a good effect but you don\u2019t need to produce that much gating, use the bottom fader to bring in the raw signal again and balance that with the processed one, to get the right kind of fade.\n\nThe Audio Unit comes in SoftGate and SoftGateMono, because it\u2019s inherently a linked stereo plugin (so stereo image doesn\u2019t wander as it fades). You can use those on mono tracks in VST, but in AU you\u2019re not supposed to run a stereo plugin on a mono source\u2026 so SoftGateMono exists to cover non-stereo tracks. If you use it on a stereo track it\u2019ll gate Left and Right separately, so be warned. Also, SoftGateMono is technically \u2018N to N\u2019, like many of my AUs that aren\u2019t stereo or stereo linked, so like many of my AUs you can also use it on quad, 5.1 or 7.1 tracks (did you know you could do that? Have fun, surround mixers).",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "SpatializeDither",
    "description": "a high-performance clarity and accuracy dither",
    "tags": [],
    "slug": "spatializedither",
    "short_description": "a high-performance clarity and accuracy dither",
    "full_description": "Spatialize is one of my high-performance boutique dithers. Though I think my Naturalize beats it, that\u2019s a preference: I like digital sound to sound organic and real, and I like ambience and foggy distance and other things Naturalize is great at emphasizing.\n\nSpatialize is also good at reverb depths and softness, but what it excels at is focus.\n\nThis modified dither algorithm has opinions about what ought to be randomized. Any normal dither (especially a technically correct TPDF-based one, such as PaulDither, TapeDither or NodeDither that can encompass either) has no preferences about what samples it gets. It will apply noise regardless, with perfect impartiality.\n\nSpatialize (which I\u2019ve also termed Contingent Dither, early in its development) isn\u2019t like that. It says, \u2018hey, this sample is exactly on a quantization value. No way am I going to mess that up, it\u2019s staying right where it is!\u2019. Or, it says \u2018this sample is exactly between two quantization values. If I rapidly flip between adjacent values I can try to get the DAC to produce output between them. What could go wrong?\u2019. Or, it says \u2018this sample is none of the above, let\u2019s bring in some randomness and apply dither like some normal plugin that isn\u2019t crazy, would do\u2019.\n\nOr all of the above, blended\u2026\n\nThat\u2019s how Spatialize works. These are pretty bold things to try to do, especially the attempt to balance between two quantization values: that\u2019s not really a reasonable thing to try, even when blended with random noise. And it pays something of a price: while Spatialize is quiet in its noise generation even without resorting to noise shaping, its behavior down around the noise floor isn\u2019t perfectly well-behaved.\n\nBut that\u2019s a trade-off, because by sacrificing this good behavior, Spatialize gets to be very sure that when samples hit perfectly on quantization boundaries, they\u2019ll be accurately represented. And the bit-flippiness of the exactly-between behavior gives rise to a really strong highpassy effect that heightens treble energy. The result is a dither with a holographic, intense sonic reality to it: and it IS reality, because it comes out of this determination to honor the true values of the samples wherever possible. Spatialize is always prepared to abandon \u2018appropriate\u2019 noise floor behavior if it can nail down the sonic envelope with more ruthless accuracy.\n\nSo, if you\u2019re into the hyper-real, high-definition sound of extreme clarity and accuracy, Spatialize might be your preferred Airwindows boutique dither. And, since it does it all with no noise shaping, there\u2019s still an ease and naturalness to the resulting sound. It\u2019s probably my own favorite apart from Naturalize, and for some things I prefer it. And, it\u2019s free, AU and VST. :)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Spiral",
    "description": "the new best smoothest distortion algorithm",
    "tags": [],
    "slug": "spiral",
    "short_description": "the new best smoothest distortion algorithm",
    "full_description": "What if\u2026 the building-block sine-based saturation routine I build so many things on, which I thought was the smoothest distortion you could have, is NOT the ideal distortion?\n\nI was watching a youtube video by Brady Haran, on his \u2018Numberphile\u2019 channel. It was about the golden ratio, and it showed the little drawing you\u2019ve maybe seen, where you take a golden rectangle, and then make a square on it and put a circle segment (like when I use sine curves for my distortions), and then make a smaller square next to it and a circle section on that which connects, and so on ad infinitum. A \u2018spiral\u2019 like a seashell, a golden ratio spiral.\n\nAnd Brady says, \u2018of course this isn\u2019t actually a spiral\u2019 and my mind: blown.\n\nBecause of course it isn\u2019t. It\u2019s circle pieces butted up against each other, and only looks like it\u2019s connected because it\u2019s pretty flat going through those points. But the rate of curvature changes really suddenly and drastically at those points\u2026 and does it the same way, at the zero crossing of ConsoleChannel, Density, PurestDrive, PurestWarm, Channel, and lots and lots of other plugins I\u2019ve made. It\u2019s part of the \u2018fatter, smooth\u2019 sound of some of my distortions. Seemingly really fat and analog-sounding, but there\u2019s a discontinuity as you go through zero, which is why it makes the audio sound obviously different.\n\nPeople do like making the audio sound different, but people HATE the sound of discontinuities. An old version of Channel where I hacked in a \u2018flat\u2019 undistorted section, got me a huge blowback of dismay and outrage until I put it back to the simple sine-based one. People are incredibly sensitive to second order discontinuities, where the output number will be 0 but the direction things are changing will suddenly be the opposite. That\u2019s what made the old \u2018New Channel\u2019 be such a failure: the center of the wave was flat no-distortion, and then without making a visible discontinuity it would suddenly change to \u2018tighter sine-based saturation curve\u2019, both on the negative and positive sides of the wave. It would look perfectly normal but people just hated the sound. Now I know why. And now it turns out the sine based one HAS a discontinuity, at the zero crossing, right where you\u2019d get class AB and B distortion, and it never occurred to me.\n\nAnd I can fix it, and turn the code for that part into ONE line of reinvented original code, which will be open source because I\u2019m Patreon-supported and don\u2019t have to stop people using my good audio code (they only have to credit me when they use it: it will be very possible to tell when they do. They don\u2019t have to pay anything since it\u2019s an MIT license, and they don\u2019t have to open their own source, just publically credit that they used my Spiral code).\n\nAnd of course I did: here, have Spiral, free. You can just install this and listen to it, if the video and the post are too long. This is the proof of concept which can be used in several useful ways. There are no controls, at all. You can gain stage into it and do stuff with it and sit it on the top of every track like it was PurestDrive or Channel, or use it as a 2-buss clipping stage, where it will clip to around -1.4dB with about -0.4 intersample peak maximum (so it is Mastered For iTunes friendly, used as a final clip). It also has a \u2018freak out mode\u2019 if you massively overdrive it, and you can do that with things like uncompressed drums, and it makes noises you\u2019ve never heard before, or when used more gently it just sounds like the ultimate analogification.\n\nI really had no idea I could do a basic saturation algorithm (which still uses long double precision sines as part of it) that was that good. It\u2019s a considerably bigger sonic improvement than the new noise shaping technique, because what it does is on a far higher level\u2026 though of course it also is using the new noise shaping, for good measure. All the latest everything, right here.\n\nBear in mind, the original sin()-based one in Console5, PurestConsole etc. is still optimal for Console5 encode/decode because it can be lossless and has significant effect at low levels. My tape emulation stuff uses the \u2018fattening\u2019 effect of that on purpose. I can\u2019t just go through and replace everything because all the sounds will change. I have to re-voice everything that would take advantage of the new code, and I\u2019ll do it, and it\u2019ll take time and effort, and probably become new versions of things so you can still have the \u2018sine fatness\u2019 versions if you want them. I don\u2019t like taking sounds away from people, and old tones shouldn\u2019t be removed or made inaccessible.\n\nBut what if there\u2019s a WAY better analog-sounding distortion effect based on the way that the \u2018constructed\u2019 golden ratio seashell/spiral made of circle sections in boxes that get smaller, is NOT correct because much like the simplest sine-based overdrive, it doesn\u2019t start with zero distortion but with the same tiny distortion the whole time (which, in joining to the opposite pole, makes a discontinuity you can\u2019t see much like the golden ratio \u2018spiral\u2019 has discontinuities you can\u2019t see?) \u2026and I fixed it?\n\nTry Spiral, and I will get to work incorporating this into my library of audio plugins that I make available using my Patreon.",
    "categories": [
      "Saturation"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Spiral2",
    "description": "Spiral with controls including Presence",
    "tags": [
      "Latest"
    ],
    "slug": "spiral2",
    "short_description": "Spiral with controls including Presence",
    "full_description": "",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Srsly",
    "description": "a psychoacoustic stereo processor",
    "tags": [
      "Recommended"
    ],
    "slug": "srsly",
    "short_description": "a psychoacoustic stereo processor",
    "full_description": "People get really excited sometimes, so here\u2019s a failure :)\n\nSrsly is meant to do what a Hughes SRS processor does. That\u2019s an obscure stereo widener actually made by Howard \u201cSpruce Goose\u201d Hughes\u2019 company. I tackled it because a musician I love, Chad Clark, needs one \u2018cos his is broken and not in proper working order. Hence, the need for somebody to try and do a plugin version. So I tried, with some pictures out of Popular Mechanics and a single cruddy youtube video to be my guide (this thing is OBSCURE) and I have not succeeded. Whatever the real one sounds like, this ain\u2019t it.\n\nBut it does a thing, and I\u2019ve added a Q control to help get it to do useful things since I can\u2019t tell what\u2019s right or wrong for this stuff, and this is as far as I can carry it right now. The source is MIT licensed for anyone else who\u2019d like to pick up where I left off, and quite a bit of basic information is shown in the curves of that Popular Mechanics article about the thing, and it is kinda neat: accentuate comb-filtery effects you get from the shapes of your own ears. It does do a thing, that\u2019s not like any other stereo effect I know of. And I ought to be able to use some of the tech from this to do subtle stereo-field enhancements in future versions of Console, stuff like that. You can refine it down to basic concepts and apply those.\n\n(followup: this remains useful for more subtle stereo spatiality things)",
    "categories": [
      "Stereo"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Srsly2",
    "description": "a revisit of Srsly, to make the stereo widening more extreme",
    "tags": [],
    "slug": "srsly2",
    "short_description": "a revisit of Srsly, to make the stereo widening more extreme",
    "full_description": "\u201cYou call that a wide? Now THIS is a wide!\u201d\n\nA little while ago, I put out a plugin that reverse engineered the famous Hughes SRS stereo widener, from pictures in an old Popular Mechanics article. By applying a set of narrow little EQ boosts and cuts to stereo, mid and side channels, you could make a sort of holographic effect. Srsly still exists, just as it was, for use tweaking out more natural stereo imagery.\n\nBut the rabbit hole goes a bit deeper than just that\u2026\n\nSrsly was by request of my friend Chad whose Hughes SRS wasn\u2019t working properly, and who wanted a plugin version that didn\u2019t hum. I didn\u2019t have one of my own, so it was largely guesswork. Thing is, somewhere in there I got my hands on one (thanks Patreon! Between that and getting a real Mackie 1202 to play with, it turns out it\u2019s useful for me to get actual gear relevant to my plugin interests, especially when I\u2019m not getting the plugin right at first)\n\nAnd before I used it myself, I didn\u2019t really \u2018get it\u2019, but then I started putting it on reverb returns, and quickly got very fond of a certain ultra-wide reverb field.\n\nAnd then I got more heavily into mixing in the box (and not with my hardware stuff) after Console7 came out\u2026 and discovered that my ITB reverbs did NOT do that kind of wide, and tried out my original Srsly\u2026 and had the same problem Chad ran into. It just didn\u2019t do what the hardware box did. But I wasn\u2019t done\u2026 so I started running stuff into the real hardware box, and just fooling around with the specific audio I\u2019d begun to use, and rapidly worked out what was happening. My original Srsly left out a lot. It was more \u2018audiophile\u2019, more subtle, would fit in with more accurate recordings, but the real deal hardware device could be pushed WAY farther.\n\n\u2026in a way that I could interpret. And coding ensued\u2026\n\nMeet Srsly2. I\u2019ve intentionally not tried super hard to exactly duplicate what is, after all, an unobtainable original hardware box by Howard Hughes\u2019 company. Variations of this are still being licensed for use in car stereos and things, and I intentionally make no claim that I\u2019m duplicating someone else\u2019s property.\n\nBut. But. BUT. What I was asked for, was to accomplish a particular effect, where the stereo wideness could be made crazy exaggerated. And I was able to interpret what a real hardware box (not original, though) was doing. And I continued to modify Srsly until, with Srsly2, you can now dial it in to do very similar crazy and unreasonable things\u2026 and that\u2019s probably close enough for a free and open source plugin modeling an ancient hardware device that can\u2019t really be found anymore. You\u2019ll find the controls ought to work as you\u2019d expect them to, and you may find as I did that leaving the Center control alone and cranking up the Space control just right, can get you into a wild and somewhat boosted and hyped zone that makes the most of your spectacular stereo content, in much the same way the original, obscure, Hughes box did.\n\nThat\u2019s my hope, anyhow. Hope you like it! I know I\u2019ll be using it on stuff.",
    "categories": [
      "Stereo"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Srsly3",
    "description": "Srsly2, with a Nonlin control to analogify the filters",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "srsly3",
    "short_description": "Srsly2, with a Nonlin control to analogify the filters",
    "full_description": "Those who are familiar with Airwindows know that Srsly is a sort of take on a famous stereo processor, the Hughes SRS. The first version, Srsly, uses a bank of very tight resonant filters to adjust space psychoacoustically and simulate the sound of ambience around human ears (based on illustrations that ran in Popular Mechanics). The second, Srsly2, took that and added aggressive mid/side processing to more closely resemble existing SRS boxes, thanks to a Crate SRS box I was able to get by way of example.\n\nSrsly3 is the same thing as Srsly2, except all those filters are replaced with the kinds of biquad filter found in Airwindows BiquadNonlin. That's the one where I figured out how to apply the filter modulating used in Capacitor2, which simulates nonlinearity in cutoff frequency of ceramic capacitors (specifically Murata capacitors made of barium titanate), but applied to biquad filters which are a lot more adaptable than Capacitor was.\n\nYou don't have to understand any of that, it's just the way I got to this result.\n\nIt means you get a Nonlin control, where setting it to 0 means you have Srsly2 again. And then when you turn it up, especially when you have your filters at a higher Q setting (sharper resonances), the filters get modulated by the voltage pressures they themselves see from the signal passing through. And it fuzzes them out in a way that makes Srsly3 sound more analog than it's ever sounded before, with more of a vibe and texture to the vivid stereo sounds it can make.\n\nI would say play with it and see what kinds of settings sound good to you. And if you liked Srsly2 and found it useful, now you've got this which starts where Srsly2 left off, and then takes it to new places. BiquadNonLin really sounds most interesting on tight resonant peaks, which is what Srsly is made out of, so with a bit of luck this will really click for Srsly enjoyers. Hope you like it!",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "StarChild",
    "description": "a weird digital ambience/echo plugin",
    "tags": [],
    "slug": "starchild",
    "short_description": "a weird digital ambience/echo plugin",
    "full_description": "For all that we try to make plugins have natural, acoustic or electric, retro vibe qualities, sometimes there\u2019s a thing which breaks the rules by creating a distinctive voice that has nothing to do with naturalness. I\u2019ve got an old Alesis reverb like that: very primitive, but deep as anything. There have always been odd little boxes with a style all their own, like the Delta Labs Effectron, which is low-fi but uses delta-sigma modulation like an SACD (but much more crudely!)\n\nIn that spirit, here\u2019s StarChild. The inspiration came from the old Ursa Major Space Station. That said, StarChild sounds nothing like a Space Station, but it does sound like it\u2019s out of this world. Like Space Station, it produces series of echo taps which aren\u2019t perfectly regular. Space Station has little rhythms that it does, while StarChild works on prime number sequences: that produces a sputtery sort of delay line in which it won\u2019t reinforce any one frequency.\n\nWhat you get is a curious delay/ambience effect, in stereo (it\u2019ll widen stuff that\u2019s only in the middle). It can work kind of like a natural ambience that\u2019s a room in a horrible shape, or you can crank out the duration and get weird stretched textures with a variety of granularity. It\u2019s an odd little plugin: didn\u2019t sell that well in its earlier incarnation, yet this revised newer form is hotly anticipated: a bunch of people really started wanting it when Kagi (my payment processor) went out of business and suddenly it couldn\u2019t be sold.",
    "categories": [
      "Ambience"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "StarChild2",
    "description": "a weird digital ambience/echo plugin adapted to high sample rates",
    "tags": [
      "Latest"
    ],
    "slug": "starchild2",
    "short_description": "a weird digital ambience/echo plugin adapted to high sample rates",
    "full_description": "For all that we try to make plugins have natural, acoustic or electric, retro vibe qualities, sometimes there\u2019s a thing which breaks the rules by creating a distinctive voice that has nothing to do with naturalness. I\u2019ve got an old Alesis reverb like that: very primitive, but deep as anything. There have always been odd little boxes with a style all their own, like the Delta Labs Effectron, which is low-fi but uses delta-sigma modulation like an SACD (but much more crudely!)\n\nIn that spirit, here\u2019s StarChild. The inspiration came from the old Ursa Major Space Station. That said, StarChild sounds nothing like a Space Station, but it does sound like it\u2019s out of this world. Like Space Station, it produces series of echo taps which aren\u2019t perfectly regular. Space Station has little rhythms that it does, while StarChild works on prime number sequences: that produces a sputtery sort of delay line in which it won\u2019t reinforce any one frequency.\n\nWhat you get is a curious delay/ambience effect, in stereo (it\u2019ll widen stuff that\u2019s only in the middle). It can work kind of like a natural ambience that\u2019s a room in a horrible shape, or you can crank out the duration and get weird stretched textures with a variety of granularity. It\u2019s an odd little plugin: didn\u2019t sell that well in its earlier incarnation, yet this revised newer form is hotly anticipated: a bunch of people really started wanting it when Kagi (my payment processor) went out of business and suddenly it couldn\u2019t be sold.\n\nNow, years later, this is a version of it that's savvy to sample rates. It's undersampled so you can run at 96k or even 192k while getting the same delay times, the same sounds, and at more or less the same CPU load of the 44.1/48k version. It's been a while since we've seen this plugin, and rightfully so: it sounds really weird and bad! But that's exactly why you can make distinctive noises with it, and who's to say you don't want to sneak an ear-catching sound in there?",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "StereoChorus",
    "description": "a nice basic stereo chorus",
    "tags": [
      "Latest"
    ],
    "slug": "stereochorus",
    "short_description": "a nice basic stereo chorus",
    "full_description": "Hi! This plugin is actually the one that kicked off the work that gave you StereoEnsemble. I got a request: please give me StereoChorus, like you used to have back in the Kagi days, I need to use it as nothing else will do.\n\nIt\u2019s a bit funny as I didn\u2019t remember it being that special. I mean, it\u2019s got some odd tricks in the interpolation, it scales according to chorus speed so all the settings feel about equally intense, but it didn\u2019t seem to me like anything that amazing, so I hadn\u2019t got round to porting it to VST and open-sourcing it.\n\nSo now I have. It\u2019s still got some of the interesting choices I made back when I coded it: for instance, it\u2019s actually running a fixed point buffer at a rather long word length. Maybe this has something to do with the sound my user wanted to have back? However, I\u2019ve added a few things. It\u2019s now got modern dithering to floating point (on 32 bit busses) and I\u2019ve added undersampling\u2026 so that it can sound the way it was meant to, even at elevated sample rates, while using lower CPU to do it. All in all it\u2019s not the most outrageous plugin, but you know I\u2019ve got folks fond of specifically it, and so I\u2019ve brought it to VST form and open-sourced it just as it was, and maybe you too will find something special in it.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "StereoDoubler",
    "description": "like GlitchShifter optimized for pitch shift doubling and tripling",
    "tags": [
      "Latest"
    ],
    "slug": "stereodoubler",
    "short_description": "like GlitchShifter optimized for pitch shift doubling and tripling",
    "full_description": "StereoDoubler is another retro plugin I\u2019ve had for a while, that is now available as open source and VST2 and M1 Mac and Raspberry Pi and so on. It\u2019s using the basic concept of Glitch Shifter, so I should explain what that is first.\n\nGlitch Shifter is my plugin for doing pitch shifting (and feedback on it, if you like) in a different way. Instead of smoothly interpolating over relatively small loops of sound to pitch shift, it works with potentially much larger loops, and searches for spots where it can seamlessly (or near-seamlessly) switch over without ever blending or blurring the sound. For that reason, it\u2019s more up front and edgy, more personality, but it can also disconnect from the source audio in weird ways or glitch out like mad, hence the name.\n\nStereoDoubler\u2019s like two of those, tamed. Well, mostly tamed. It takes the source audio, and gives you a pitched-up version in one channel, a pitched-down version in the other, and lets you bring in dry for a center channel if you want. Because it\u2019s still Glitch Shifter, it\u2019ll give you faint ticking noises if it\u2019s struggling to make its loops work, but it\u2019s a lot tighter and more normal than Glitch Shifter usually is, and it\u2019s simultaneously shifting up and down so the two sides will each have their own distinct glitch \u2018personality\u2019 while being as upfront and direct as they possibly can.\n\nI hope you like it. Sometimes taking a wild experiment and reining it in a bit, is just the thing. StereoDoubler isn\u2019t meant to work on every possible situation, it\u2019s designed to be amazing when it\u2019s in its element. Maybe your mix is its element :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "StereoEnsemble",
    "description": "a sort of hyperchorus blast from the past",
    "tags": [
      "Latest"
    ],
    "slug": "stereoensemble",
    "short_description": "a sort of hyperchorus blast from the past",
    "full_description": "StereoEnsemble is a blast from the past, updated with modern dithering to floating point and undersampling: bottom line is, this is a plugin that can take either a mono or a stereo input and give you a bunch of additional ensemble-y goodness, with particular attention to simulating stereo imaging through staggered delay pairs (making stuff be panned interestingly through adding echoes that have time offsets between left and right channels).",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "StereoFX",
    "description": "an aggressive stereo widener",
    "tags": [
      "Latest"
    ],
    "slug": "stereofx",
    "short_description": "an aggressive stereo widener",
    "full_description": "",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Stonefire",
    "description": "the non-EQ EQ designed for ConsoleX",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "stonefire",
    "short_description": "the non-EQ EQ designed for ConsoleX",
    "full_description": "There's a reason people have never turned to using Kalman filters for audio purposes.\n\nThey're tricky little buggers, unpredictable, with a 'filter slope' that makes no sense at all. They'll take the crossover point and bounce it around wildly, they'll throw in weird gatey behaviors, they'll turn what's supposed to be a 'smooth' 'filtered' sound into an edgy growl and sputter. They're meant to pull real data out of a pile of noise, not to take real audio and give you anything sensible. Nobody would want a Kalman filter for audio purposes.\n\nStonefire uses two different kinds of Kalman filters for audio, as crossovers. The top crossover is the same as what's in Air3. The bottom crossover comes with a range control (even though that won't give you a 'frequency') and is the same as what's in Kalman.\n\nAnd when used properly, Stonefire gives you unprecedented levels of tonal control over the texture and presentation of your sound, in a way that almost doesn't even have to do with frequency.\n\nThere's three bands, plus the Range control. Air, Fire, and Stone. Each can be cut back to zero, or boosted (Fire and Stone match, while Air has a lot more gain on tap but will match from 0.5 down to 0.0.) If you cut them back to zero you'll get the weird Kalman behavior, but it'll help you set the Range control appropriately. You can set it so Stone covers the lowest lows (never JUST those, it will always do other stuff too) or up to the high mids and lower treble.\n\nThen, if you keep everything balanced and make smaller adjustments, the secret of the Kalman filter emerges. You have to use it as a crossover, and let it apply its incredibly strong character to texture, not frequency. It utterly fails to be a 'filter', but it's an extraordinary texture-shaper, and it's what I'm going to be building the upcoming ConsoleX system around.\n\nUse the Air control like you would in Air3. You can cut back super-highs while seeming to not affect the brightness at all, with a strikingly natural effect. Or, boost it to bring that sparkly aura and light up the sound. It's a custom algorithm that deals with high sample rates by just ramping up the boost: treat it with respect, but it's there to serve your needs for glitter or lack of same.\n\nUse the Fire control like it was an attitude knob, as much as a midrange. You can get a lot of wildness out of this one with careful settings of Range. Between Fire and Stone, only one can be louder: it's a crossover. If you're boosting Fire, that means you want your sound to command attention.\n\nUse the Stone control like it's the bedrock of your sound. If you lean entirely on it and kill all the Fire, you'll get a monumentally heavy, sputtering, gatey foundation that zeroes in on the lowest lows, but also tries to put backbone behind anything it thinks is heavy and powerful. This includes lower midrange. Cutting it can control unwieldy bass, but adding it isn't the same as adding a 'bass boost': it'll zero in on things like kick weight and try to present them with unnatural isolation. The secret to adding weight with the Stone control is to let it not seem to be that much of a boost: you can transform the feel of a sound well before you hear 'added bass'. You can also dial the Range up and use the same effect up into the midrange, for an intensely solid punchy character anywhere a sound seems flimsy.\n\nGod help you if you try to measure this thing with PluginDoctor or SPAN. I don't even have any idea what will happen. It's all made out of Kalman filters, which are not for use with audio.\n\nExcept\u2026 when they are ;)\n\nEnjoy the new tone shaping. If it's too ugly, use way less, see how it treats you :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "StoneFireComp",
    "description": "some of the dynamics for ConsoleX",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "stonefirecomp",
    "short_description": "some of the dynamics for ConsoleX",
    "full_description": "This is new.\n\nPeople have had compressors for a while (and you've just got a new one in Pop3). And people have had multiband compressors, and used them for both good and nefarious purposes. And technically, people have had Kalman filters, mostly because I made some and have had them out there for a while, both in the basic form and the 'air band' form I use for Air4.\n\nBut KALMAN multiband compression?\n\nAnd yet, here we are. This is probably the trickiest aspect of ConsoleX, put out so you can come to terms with it (or, indeed, make a mess and a bunch of strange noises, while having no idea what's going on: that's cool too!)\n\nThis is two Pop3 compressors, run as a multiband filter, except the bandsplitter is a Kalman filter so it doesn't really work in terms of 'frequencies'. It works in terms of 'isolating sound qualities' and splits that, and then when you assemble the split audio again, if it balances perfectly you get the original sound back.\n\nBut if it doesn't balance, because for instance you've compressed both the parts in different ways? Well, that's when things get interesting.\n\nYou can isolate each part using the Fire and Stone controls: like in ConsoleX, they're unity gain at 0.5 and can be used to apply makeup gain to the compression. You can set the range control quite low so that Stone is basically kick and rumble, or quite high so that Fire is basically about brightness, or you can take a middle setting and fully use the strangeness of the crossover and the way it digs into transients and produces midrange in non-harmonic ways. Again, if you reassemble the parts perfectly, the strangeness goes away. But where's the fun in that?\n\nI can only bring this much to Airwindows Consolidated, restricted to ten controls. ConsoleX is this plus gating and an air band (uncompressed) and separate ratios for all parts of both bands, plus sidechain EQ flavor boosts that are also uncompressed. This uses the same ratio control for both bands, and that's your secret for dialing back the strangeness and regaining control: you can crank Ratio to hear what StoneFireComp is doing, which could be nearly anything, and then turn it right down to apply appropriate amounts of your effect. In ConsoleX you do that and can also let through 'peeks' (peaks) of heavily filtered raw sound by way of equalization in the normal sense.\n\nIn line with my desire to make stuff that serves new purposes, that can be used for new musics and new kinds of sound, I honestly don't have that much advice on how to 'make classic sounds' using it. Or even, what sounds are good from it. I do know that using it subtly, with low ratio, should work better on the 2-buss, and that different sounds will end up needing different treatment, perhaps very different. But I don't know what will sound great yet, just that I suspect this can really find some interesting uses. Remember, Stone and Fire are distinct textures that recombine into the original sound perfectly, so combining their qualities with the qualities of compression should get you interesting results. Keeping settings similar will help it act 'normal'. Taking wild departures\u2026 won't.\n\nHave fun, because ConsoleX is coming (though there is still a lot of work to do).",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "StudioTan",
    "description": "all the 'non-dither' dithers, up to date and convenient",
    "tags": [],
    "slug": "studiotan",
    "short_description": "all the 'non-dither' dithers, up to date and convenient",
    "full_description": "If you were curious about the new work in quantization I\u2019ve been doing\u2026 where I\u2019ve put out a series of experimental plugins with names like Dither Me Timbers and RawGlitters and then said they weren\u2019t dithers, or if you tried stuff like Dither Me Timbers and then found your limiter set to 0dB was now giving you overs, or if it just didn\u2019t make sense at the time\u2026\n\nThis is for you.\n\nStudioTan is the sum total of all I\u2019ve been doing with \u2018dither\u2019 that isn\u2019t dither, for the last two years. It\u2019s got three algorithms, StudioTan, Dither Me Timbers, and Not Just Another Dither. Each one is brought up to date, optimized, voiced to do what it does best. The first two begin with the use of quantization to apply EQ at \u2018noise floor\u2019 levels and the third applies Benford Realness statistics at noise floor levels, and they all use noise shaping to refine that behavior and get a specific tonal result. Not one of these have been quite available before, even from previous versions of Dither Me Timbers or Not Just Another Dither: it\u2019s the latest finetunings of the algorithms. None of them can produce signal outputs beyond -1 to 1 so they can\u2019t produce overs (if you\u2019re \u2018mastering\u2019 so hot you get intersample overs, firstly that\u2019s not a great idea and secondly StudioTan can\u2019t help you there). All three come with 24 and 16 bit options right there in the plugin, as experimenter time is over and this is the final form, requiring no more fussing with plugins.\n\nThe effect of each is more pronounced at 16 bit, and that\u2019ll give you a sense of what is being subliminally imparted at the far subtler 24 bit level.\n\nStudioTan is like the posh, glossy, high class output. It sounds kind of like expensive studios and tape, brings up micro-detail but suppresses harshness. It\u2019s slick and makes things sound more flawless and possibly more boring, but satisfying.\n\nDither Me Timbers is like the spatially enhanced, electrically charged output. It makes sonic events spark out of a darker, spacious background, and gives a little energy to transients and attacks. It makes things sound more human and attitude-laden, so it\u2019s more dramatic and attention-getting. It\u2019s got different noise shaping behavior and voicing but in basic character it\u2019s the opposite of StudioTan, and can be approached from that direction.\n\nNot Just Another Dither is like the holographic, hi-fi output. It\u2019s a bit darker than previous Not Just Another Dithers and its purpose is to have detail go down to a digital noise floor that\u2019s a balance of all types of artifact (since you\u2019re always going to have a noise floor of something, no matter what you do) without changing character in any way. Since this perceived character is so balanced (this time, not even airy hiss as a \u2018identifiable\u2019 floor change) the new Not Just Another Dither is the best choice to seem like infinite resolution without even a noise floor being there. Instead of making \u2018a sound\u2019 like the previous two, it\u2019s the one that sounds completely open and unaffected.\n\nNone of these give sensible results with test tones: you can\u2019t take a sine and enhance high frequency details, so you get purely garbage data. Don\u2019t use Airwindows non-dither dithers for scientific processing or your rocket ships will blow up on the launch pad ;) these are literally tone controls in two cases and an obscure data handling technique for the third, and they are re-voiced for 2019 to best deliver their sonic mojo. You can do test tone stuff to satisfy yourself they aren\u2019t placebo effect: they really do the noise-floor-EQing or Benford Realness stuff, and the source code is open. But for evaluating how they really work, the proof is in the listening.\n\nWhat they do cannot be done any other way, and they\u2019re the final artistic polish on sonic creations done in or outside the DAW. Use them on mixes, or when mastering raw analog captures to lower word lengths for CD. They are \u2018final dither\u2019 in function if not strict definition, the way to crystallize high-res audio data into an output file that retains all the magic you intended, whatever flavor of magic that\u2019s meant to be. The three categories of tone color ought to cover your bases there.\n\nI know this is all I\u2019ll be using from now on :)\n\n(followup: it absolutely was not. I continued to use NJAD in Monitoring until I wrote Dark, have used that some including in Monitoring2 and then came up with a new dither based on Ten Nines into Dark, which is in the original output buss of Console8)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SubsOnly",
    "description": "a mix check plugin that shows you only the extreme lows",
    "tags": [],
    "slug": "subsonly",
    "short_description": "a mix check plugin that shows you only the extreme lows",
    "full_description": "By request, here\u2019s my mix monitoring tools, for VST and Audio Unit, Mac and PC! Please remember, these like Guitar Conditioner are control-less plugins so you don\u2019t operate them by opening their windows: they\u2019re either on or off, which probably is shown in your DAW mixer window already.\n\nSlewOnly gives you what it says on the tin: only the difference between samples, expressed as a sample. This produces a super-bright sound with zero latency and absolutely no pre-ring or post-ring. You can do two poles of this filtering: just add another SlewOnly. But, as is, this will give you an incredibly clear and transparent window on the ultra-highs, so you can dial in subtleties in the treble. Beware: don\u2019t switch right back to the normal sound or it\u2019ll sound incredibly dull. Rest your ears for a moment before resuming work.\n\nSubsOnly does the same thing for subsonic bass. It sounds a little like a house party from an adjacent house. You can tweak sub-bass elements and really hear how they\u2019re balancing against each other, and if you\u2019re packing too much into the subs you\u2019ll hear that as well. Get things thumping properly through SubsOnly and it should translate well to all manner of bassbins and subwoofers.\n\nLastly, these are calibrated (in SlewOnly quite literally: pink noise will be about the same amplitude with or without it, though the tone will be way different) so that you can switch them in and out, and expect roughly the same loudnesses. It\u2019s okay if SubsOnly is louder for fullbodied bass: with that, it\u2019s not so much about level-matching, it\u2019s about getting your sound (at whatever desired loudness) and then having the bass still make sense through SubsOnly. If you\u2019re madly overloading it, there won\u2019t be groove, just a lot of thunder and noise, at elevated levels. These go on at the end of your master buss, so you can hear what your 2-buss chain did to the sound. Especially if you try and go for \u2018commercially loud\u2019 volumes, sanity checking with these tools can be a real silver bullet.",
    "categories": [
      "Utility"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Surge",
    "description": "a compressor for accentuating beats and pulses",
    "tags": [],
    "slug": "surge",
    "short_description": "a compressor for accentuating beats and pulses",
    "full_description": "What is \u2018ballistics\u2019 when it comes to audio gear? It\u2019s the way the gear handles dynamics coming in. It\u2019s the swing of a VU meter that can tell you what your music feels like.\n\nOr, since this is Airwindows and we don\u2019t do no steenkin\u2019 meters, ballistics is the way dynamics hit this compressor to produce outrageous groove.\n\nThis is also a good reason to keep me around working on stuff\u2026 this plugin wouldn\u2019t exist if not for an earlier free VST plug from me, called SurgeTide. That one controls dynamics by altering the rate of change of the rate of change OF the rate of change of the audio. What, you may ask, would happen if you did that? I\u2019ll tell you: firstly, there is no smoother compressor. It\u2019s utterly, totally fluid and artifact-less, organic to the Nth degree. But, it doesn\u2019t sound like it\u2019s doing anything until suddenly it kicks in and starts making the dynamics swing up wildly to boost every beat. Incredibly hard to control. You really can get a sense of \u2018huge surges of the musical tide\u2019 emphasizing the deepest rhythms, but it\u2019s a bear to set up!\n\nAnd since I\u2019m still out there working on stuff thanks to my Patreon, now there\u2019s a whole new version, so different it counts as a separate compressor: Surge.\n\nHere\u2019s the thing. Compressors are as unique as, say, guitar overdrives. You can search for the magic one, but there can be all different sorts of \u2018right one\u2019, with hugely different characters to \u2019em. I made Pyewacket as a free VST. It delivers a super-articulate attack transient and leans out the sound rather than simply turning it down, and gives a \u2018British Classic Rock\u2019 vibe without any silly adding of faux-analog mud: that one clamps down on the body of sounds while leaving tons of intensity and headroom to the tone. Its \u2018ballistics\u2019 are very simple and it\u2019s more about delivering a certain kind of attack, and making stuff more even and consistent.\n\nSurge isn\u2019t anything like that. It\u2019s SurgeTide, but easier to control: just bring it up until it starts compressing enough, and don\u2019t go too far to where it inverts the dynamics. You can hear it easily, unlike SurgeTide. But it still retains most of the uncanny fluid organic quality SurgeTide has, and most importantly, it has the ballistics. That means that if you put a pumping, rhythmic mix through it\u2026 it will accentuate the beats in a very aggressive way that\u2019s not like anything you\u2019ve heard before. The attacks pop way out, including the deepest bass pulses: this is yet another way to handle compressed bassy mixes and transform them into something punchier. And unlike SurgeTide, it\u2019s very controllable.\n\nYou might want to push it hard enough that the dynamics jump way out. You might want to use it as \u2018glue\u2019 and hit it only very gently, and take advantage of that extreme fluid openness (a result of the way its control is so abstracted: again, it alters the rate of change of the rate of change OF the rate of change). The one thing it won\u2019t do at all is limiter-like behavior, it\u2019s way too funky for that! So anywhere you need to use a compressor that is just ultimately funky, bouncy, squishy\u2026 try Surge. It might be right up your alley.\n\nSummary: Surge is more obvious and responds easier, SurgeTide is cleaner and harder to control.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "SurgeTide",
    "description": "a surge and flow dynamics plugin",
    "tags": [
      "Latest"
    ],
    "slug": "surgetide",
    "short_description": "a surge and flow dynamics plugin",
    "full_description": "This is a sort of dynamics plugin.\n\nIt comes from an experiment, where I had to find a way to make a behavior useful: SurgeTide runs on three different compression time constants stacked onto each other like the waves in an FM synthesizer. You don\u2019t usually see a compressor work with the rate of the rate of the rate of change, because for normal sounds and time constants, the result sounds bizarre and unmusical.\n\nBUT, it turns out if you set it up to run a very deep and slow change, like tidal forces on the mix, it can do really interesting things. You end up with a mix that seems totally uncompressed, because small variations just don\u2019t alter the sound at all\u2026 but as the pressures of the music affect the compressor, it can ease off or boost volume.\n\nAnd because the behavior\u2019s so odd, it can react to an easing of pressure by swinging up very quickly. This behavior can be timed, sort of. You can end up with an effect that\u2019s a little like EDM compressor pumping for effect, except it swings up to accentuate the downbeat. And not just the downbeat: a huge surge of bass underneath the downbeat. You can practically pull any degree of thump out of a track, but it\u2019s tricky to dial in because mostly you can\u2019t hear it working. It\u2019s like an invisible size boost for subs.\n\nThe way to get SurgeTide working is to adjust the Surge Node until it squishes away the sound on the beat, then find the right speed for Surge Rate to work, and then back off Surge Node until it\u2019s no longer inverting the dynamics. (unless you really want to: I\u2019m not the boss of you.) It works really well as a subtle accentuation of mix low-end movement, giving some of the effect of a buss compressor but in an unusual and much cleaner way. Also works to subtly act as a level control and restrain dense mix moments so they can hit something like loudenation with more consistency.\n\nIt doesn\u2019t work in any useful way on isolated tracks, particularly not staccato drum tracks: just maybe it would do helpful things with say, a lead vocal or a synth pad. Just remember that SurgeTide is for powerful, whole-mix movements rather than the usual compressor things, and that it can have effects on the extreme low bass, and build up the swing and flow of a mix. It\u2019ll work on some things and be useless on others. I hope you like it.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Sweeten",
    "description": "where you can find super-clean second harmonic",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "sweeten",
    "short_description": "where you can find super-clean second harmonic",
    "full_description": "So this serves a few purposes. Sweeten is one of the super-minimal, one knob plugins. It makes second harmonic: much like SingleEndedTriode, or Inflamer. The first purpose is to exist, so if you're thinking 'I gotta sweeten this sound, now which Airwindows plugin of the three billion and twelve does that? Conflagration? No, that can't be it' then you can go 'is there one literally called Sweeten', and now there is! And it does what you'd expect, even harmonics (second harmonic, specifically). That's all it does.\n\nAnother purpose is because I use stuff like this in my designs. So it's useful to have a chunk of code that I can take and put in the midrange section of an EQ, or something, if I think it's lacking that subtle nonlinearity which comes out of some circuits. Sweeten is specifically designed to let me do that quickly and easily, and if I make a tool for myself which is actually neat and efficient, I give it to people.\n\nThe only thing Sweeten can do that you can't already do with Inflamer is be simple, and maybe one or two fewer math operations, and that's IT. This isn't new (second harmonic isn't new, either). My hope is that it's such an elegant, easily identifiable little device that it'll come in handy. It's also using the stepped-control, bit-shift-gain thing I do lately, so one thing about it is that it'll prevent you overprocessing. If you turn it up until you can hear it a little too well, drop back a step and then you can't tell it's doing anything, but it very much still is. For many types of processing (second harmonic emphatically included!) the optimal setting is where it's doing its thing but at no point is it ever distracting or sticking out as a mixing mistake. Sweeten is predisposed to quickly get you to that point with no fuss.\n\nI'll be using it: if anybody else finds it useful, that's even better :)",
    "categories": [
      "Subtlety"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Swell",
    "description": "Dial-an-attack, like sidechaining",
    "tags": [
      "Latest"
    ],
    "slug": "swell",
    "short_description": "Dial-an-attack, like sidechaining",
    "full_description": "Every now and then you come up with something a little different. The fun of that is in identifying it.\n\nI\u2019ve been listening to house music by Deadmau5, and I took an interest in the way the sidechaining worked. (That\u2019s the way the music, or the reverb, or the pads, get \u2018smooshed\u2019 down by the kick drum and then swing back up in volume again.) The Mau5 is pretty good about talking about his techniques, which I appreciate (I\u2019d love to do a coffee run with that guy someday) and he\u2019s spent some time showing people how instead of actually sidechaining, he automates an LFO which he applies to track volume. It gets a great effect.\n\nI wondered whether it\u2019d work to do a gate that intentionally opened real slow. Specifically, it seemed possible to treat \u2018full volume\u2019 as a \u2018floor\u2019 and have a \u2018decay\u2019 that falls up toward 1.0 rather than down to 0. It\u2019d never quite get there, but it could have a similar envelope as the fall-off of natural reverb, just upside down.\n\nIf that sounds odd, don\u2019t worry about it, just try Swell. It has a threshold like a gate, and the Swell control handles the attack speed once the gate opens. The dry/wet works as you\u2019d expect. Sort of like Deadmau5\u2019s LFO trick, it doesn\u2019t have to be a real sidechain, and is independent of whatever kick you have going on. Unlike the LFO trick, it\u2019s also not tied to tempo: Swell reacts to EVERY attack that comes along, provided the threshold\u2019s set right.\n\nWhat this does is very interesting. I expect to see this turn up in an EDM channel strip at some point. Essentially, you can play with the controls in various ways and completely step on the attack of anything you want. This relates to GROOVE and the layering of stuff in a dance mix: any element, no matter what it is, can be turned into a pad and back again, just by squishing away its attack. You can do it live, you can take an element (snare, punchy chord) and manipulate how it hits inside the groove. Extreme values make stuff extra soft and quiet and squishy, and then if you drop the threshold or Swell, you can have the element jump right back out again, and the control is direct, not relative to a sidechained track or LFO setting. It\u2019s a more organic approach, more hands-on, and I think it\u2019ll fit into a lot of people\u2019s mixes. There\u2019s always a place for balancing the intensity of the attacks of your tracks, and that\u2019s literally what Swell does.",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TakeCare",
    "description": "a lush chorus ensemble universe",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "takecare",
    "short_description": "a lush chorus ensemble universe",
    "full_description": "The idea was to revisit plugins like Melt, with an eye to even more disconcerting sonic spaces like the works of The Caretaker. Seemed reasonable to do. I started off with my Melt plugin, to see what would happen.\n\nThen, in working on Householder matrices, I found that using a Householder matrix for a 3x3 grid of delays (rather than simply using them as delays, which I'd done before, thinking 'what difference could there possibly be?') made a HUGE difference. This is what's creating early reflections in my plugins post kBeyond (which it turned out I immediately went beyond).\n\nSo, if you can do that with a 3x3 grid of delays that produces 27 echoes per channel\u2026 what if those delays were instead a chorus ensemble machine?\n\nThis is TakeCare. Most of the work I did on it, was using synth pads in order to make giant illbient soundscapes, and indeed it's quite good at that. You can get real seasick off TakeCare. I've also set it up so the 'buffer' control can be manipulated to intentionally create horrible noises: at full regen, it'll even feed back at small buffer settings, and it's made to go into distortion a little below full scale in case you want to get real crunchy. It's also using an old Console algorithm internally, to expand the space inside the blast of noise.\n\nAnd then it turns out that if you keep it more calm, less regen, very small buffers and the depth not too extreme\u2026 it's a gorgeous chorus ensemble on something as revealing as a vintage Fender Rhodes. It generates stereo width, supplies a lovely pad of lushness around the instrument, and doesn't have to be weird at all. This could come in handy on things like synth pads, voices, who knows what? Think 'lush stereo chorus ensemble' and dial it in to whatever your needs are. The range on this is pretty nuts, because it was originally designed for radical uses but cleans up really well.\n\nI hope you like it :)",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Tape",
    "description": "simplified, all-purpose tape mojo: my personal jam",
    "tags": [],
    "slug": "tape",
    "short_description": "simplified, all-purpose tape mojo: my personal jam",
    "full_description": "This one\u2019s for me. It\u2019s very similar to last week\u2019s ToTape, but with the following differences:\n\n-simpler name\n-overdrive uses Spiral, not the Mojo algorithm\n-simpler controls (not exactly \u2018input gain\u2019 but close)\n-changes to the Head Bump algorithm\n-no flutter\n\nThis is what I WANTED to do with ToTape6, and didn\u2019t. In some ways, that\u2019s good: if I\u2019d axed flutter I would not have spent all day struggling with it and coming up with a better algorithm that more closely resembles real physical tape, something that could come in handy for future echo plugins etc. If I\u2019d done the things I\u2019ve done with Tape, to ToTape6, then ToTape6 wouldn\u2019t be as adjustable as it is. There\u2019s room for both, and I gave people the complicated many-knobs version because I know you too well ;) and I know what people like, and I\u2019m there for you.\n\nBut I also have dreams of my own. So, the plugin (first ever from Airwindows) that carries just the generic name \u2018Tape\u2019 is Airwindows tape emulation MY way.\n\nI\u2019ve heard a lot of tape in my time, being over 50 years old. I\u2019ve dubbed and re-dubbed tapes a lot. So I dialed in (and re-programmed) Tape by loading up eight instances of it, in a row, and making it behave itself as well as could be expected while running audio through eight instances of Tape. It\u2019s not meant to be clean if you do that: it\u2019s meant to be eightfold trash, but the right kind of trash I\u2019m familiar with when you\u2019ve got that much generation loss and head bump buildup. I knew that if I could get that right, if I could get it to behave okay under that kind of duress, I could rely on it as a go-to output stage (going just before Monitoring) that would condition the sound in the right kind of way.\n\nAnd so it does.\n\nTape will be heard from again, but much as ToTape5 bore the standard for Airwindows tape emulation for years, Tape is my personal choice for \u2018mix into\u2019 DAW output stage and it\u2019ll stand for a while, I think. If you need more phat or more flutter or more controls etc etc, use ToTape6, which is just as good in many ways. This is just my \u2018director\u2019s cut\u2019 version, designed to my tastes, for if you trust my ears and my choices. Since it\u2019s Airwindows, ToTape6 (and 5) still works and you can have both. This one is for those of you who pursue the simple creed: I have a (virtual) tape machine. I record to my tape machine. I am happy. :)\n\nThis plugin came out with an original version and then had a Redux update in which I added a control: a slider for the head bump, as people were finding the head bump excessive. Cranking it up all the way gave you the original behavior, but I defaulted it to 0.5.",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TapeBias",
    "description": "a new piece of ToTape allowing you to underbias or overbias",
    "tags": [
      "Latest"
    ],
    "slug": "tapebias",
    "short_description": "a new piece of ToTape allowing you to underbias or overbias",
    "full_description": "Closing in on the big update to ToTape, and here's a helpful detail, that's not existed in ToTape before. I've been doing recalls and rebuilds of the big ToTape7 for weeks, but this little aspect more or less worked right away.\n\nBiasing a tape means adding a really high frequency to the sound, a supersonic frequency like 40k. You record to the tape, and this frequency being there means the iron oxide (or whatever metals are in use) gets jostled around, enough that slow gradual changes can be represented properly. Without it, signals kinda get stuck, It's like dither for tiny metal chunks stuck to plastic!\n\nSo there are two ways to go about figuring this one out.\n\nOne is to painstakingly model the whole system, in mathematical perfection, while overprocessing the heck out of everything, and then stick a virtual faceplate on it. And presumably charge a bunch of money. Not my jam.\n\nThe other is to HACK AWAY like mad until you can make noises that SOUND LIKE what's happening, ideally with nice simple algorithms that will retain the digital tone better. But what even is happening?\n\nTapeBias is bypassed at 0.5. Perfect bias here means it applies NONE of the processing. In fact in the final ToTape7 (next week if all goes well!) you can literally bypass the processing at 0.5 to save CPU: it won't be doing anything anyway.\n\nIf you overbias, which is commonly suggested as a good practice within reason, you're applying this high frequency tone louder and louder. That will record onto the tape too, in fact you can de-flutter using it, but it's also eating up headroom: maybe, lots of headroom. If all your tape headroom is used up trying to record a supersonic tone, and bear in mind there's a boost/cut dynamic for treble already to try and minimize noise (not even counting Dubly!) then you'll be clipping the real highs more easily if the bias is too intense.\n\nIn comparison with test files recorded on real tape machines, I found that GoldenSlew did the nicest job of acting like the sound of overbiasing. TapeBias uses a very slightly changed version of GoldenSlew on overbiasing. If it's inside ToTape7 it's an even better effect because it combines with everything else, but in this case you have basically GoldenSlew for when you overbias.\n\nBy contrast, there's no such existing effect that acts like underbiasing. I could refer to a real tape recording and see the odd flat bits that pop up when the biasing isn't quite enough to handle the audio. The sound is known to go a little brighter, sort of dry things up\u2026 a possible sonic effect, especially if it's a plugin and not a giant pain to recalibrate tape machines just to do.\n\nTurns out it's possible to do an algorithm that acts quite a bit like what happens with underbiasing, except that rather than put in flat bits of audio, it puts in slanted bits that do about the same thing\u2026 and it's a simple algorithm, and you can bring it in subtly or make it obvious. And it works very nicely in ToTape7, inside a full tape emulation with all its parts\u2026 but here you get it a week early, all by itself. Because, why not? Why not be able to use that part of the effect, isolated, perhaps for some sound design purpose, or to do weird things with LFOs in VCV Rack or who knows what else?\n\nSo, here's TapeBias. Turn it up to overbias, turn it down to underbias. Have fun :)",
    "categories": [
      "Lo-Fi"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TapeDelay",
    "description": "an old school tape echo with pitch swerve effects",
    "tags": [],
    "slug": "tapedelay",
    "short_description": "an old school tape echo with pitch swerve effects",
    "full_description": "Tape Delay is the reissue (in updated and VST-ified form) of one of my first plugins. This is a precursor to Iron Oxide: it uses a technique for tone shaping that\u2019s like a simplified Iron Oxide. Instead of being a direct EQ, it\u2019s a huge cluster of delay taps, and also a little bit like a convolution impulse combined with an averaging: you get an averaging of just prime-numbered sample delay times. This turns out to work quite well (a direct version of this tone shaper by itself is also coming out)\n\nThe delay part is what makes this a fun toy. It can do some outlandish things, and also has some gotchas. It chases the delay setting in such a way that you get wild pitch bends from manipulating the control, not just buffer-smashings and dropouts. But, you also get buffer smashings and dropouts, so I wouldn\u2019t dignify this with calling it \u2019emulation\u2019: it\u2019s just a way of fooling with the delay time control, live. If you\u2019re rough with the control, it\u2019ll get quite choppy. Also, if you intend to use this without glitches, you\u2019ve got to enable the plugin and give it maybe a quarter or half second to chase to its desired setting, or you\u2019ll hear a pitch zoop as the plugin starts up. That\u2019s because this one starts at zero delay on reset, so if there\u2019s audio happening it\u2019ll get caught in the initial zip of the delay time.\n\nIf you can work with that, or don\u2019t mind the weirdness, then you can enjoy this blast from the past that used to be AU-only for years and years: there\u2019s a lot of interesting stuff like that, for instance Glitch Shifter. This one can give you mad dubby effects, either decaying into heavy Memory Man-like darkness or doing a tape slapback or decaying into bright airyness. Because of the prime-number based tone shaping, regeneration doesn\u2019t produce reinforced artifacts, just continues to emphasize the tone shift you dialed in. (the tone-only version of this that\u2019s coming, could be used in Blue Cat\u2019s Late Replies plugin to make that a Tape Delay-alike, but without the delay time weirdness.)\n\nAgain, be careful using this on audio regions that are tightly trimmed to the very beginning of the sound: this one needs a second to stabilize if you\u2019re using it to sound like a normal delay. Or, you can just do whatever you like :)",
    "categories": [
      "Ambience"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TapeDelay2",
    "description": "a new implementation of a flexible tape echo",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "tapedelay2",
    "short_description": "a new implementation of a flexible tape echo",
    "full_description": "TapeDelay2 gives you substantial changes over my original TapeDelay. It\u2019s no longer trying to do the \u2018Iron Oxide\u2019 style tone shaping the original one did. In fact, it\u2019s not even a delay in the same sense as its predecessor.\n\nInstead, it\u2019s a brand new, undersampled, Airwindows-bandpassed monster ready to make a whole pile of very convincing sounds. As plugin delays go, this covers a big range of purposes.\n\nYou\u2019ve got a nice long delay time that\u2019s still available at higher sample rates, thanks to the undersampling techniques. The delay line (and the regeneration) makes use of Airwindows bandpasses, but only on the undersampled content: meaning that if you\u2019ve got it set to very nearly full range (resonance of zero) it\u2019ll give the same subtle highpassing and lowpassing no matter what sample rate you\u2019re at (a normal bandpass would have to roll off closer to the sample rate\u2019s Nyquist frequency, in other words it would let through too many highs to do a proper tape emulation). You can tighten the bandwidth by increasing resonance. You can adjust the region you\u2019re highlighting. And you can still adjust the frequency control even when set to full wide, which gives you more of a tilt EQ. It really turned out to have a lot of flexibility, and there\u2019s two separate bandpasses so that you can shape the overall tone and also focus in on the regenerations if you like. Vintage sounds in the classic Airwindows way, meaning \u2018no overprocessing, just high fidelity clean and simple processing\u2019. Also, the dry/wet operates like my recent reverbs: 50% means full dry AND full wet, so you can bring in subtle echoes without altering the gain of your underlying track. Use it like a kind of reverb, with whatever tone and resonance works for you!\n\nAnd lastly, just to top it off, Tape Flutter. This is a new implementation that I\u2019ve never tried before. Instead of a simple vibrato, in TapeDelay2 the flutter keys off the amplitude of the underlying track, making it a lot more wavery and irregular. Subtle effects are easily achieved in most settings, and crank it up for more of a warbly dirty-tape quality. It should be irregular enough to sound like real tape wobble. It\u2019s done by modulating the tape speed\u2026 because unlike any previous Airwindows tape effect, TapeDelay2 works by taking a full-length tape loop and literally speeding it up, rather than trying to change the length of the delay in any way. So both the warble, and any manipulations you make to the delay time, act like messing with the pitch of a physical tape machine with a set record and playback head\u2026 which turns out to be the best way to do this :)\n\nThis is one of the good ones. Hope ya like it!",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "TapeDither",
    "description": "TPDF dither with noise like reel-to-reel tape",
    "tags": [],
    "slug": "tapedither",
    "short_description": "TPDF dither with noise like reel-to-reel tape",
    "full_description": "I thought I had it all worked out. Put out a proper, well-coded TPDF dither, the highpassed variation on it I\u2019ve called PaulDither, and move on to the fancy boutique stuff.\n\nBut there was this one experiment I had in mind. If you could do the highpass by delaying and then subtracting the random noise (and it gained you a bit of efficiency in the bargain), why not delay it more? It\u2019d create comb filtering, a cancellation node. Why not keep delaying until the cancellation node dropped right down to around 1.5K?\n\nSurely this would give me a nice cancellation notch right where the ear is most sensitive, and heightened clarity. What could go wrong?\n\nNope! I made a prototype, called it \u2018NodeDither\u2019, began experimenting, and immediately found that I\u2019d made\u2026 a flanger! The long delay settings were useless. It made obvious overtones just out of the dither noise, a blatant tone color cast that wouldn\u2019t produce the desired effect. It didn\u2019t even produce an obvious notch in the response where I wanted it. The only thing it did do, was continue to function as a working TPDF dither no matter what the setting was (more on this later).\n\nBut, something else turned up in the experiments, and that\u2019s what brought you TapeDither.\n\nIf you use one sample of delay and inverting the noise, you get PaulDither: simple one-pole highpass. If you use two samples of delay, you get another sort of texture: kind of silky, but still digitally bright and intrusive. Using lots of delay, such as ten samples, starts to sound like the flanger, undesirable.\n\nBut, there\u2019s something interesting about powers-of-two delay times. One, two, four, eight and so on, these delay times are slightly less \u2018colored\u2019 in tone than the others. I think it has to do with interactions with the sample rate: they seem to line up more neatly, making it slightly more easy not to hear the pitch of the \u2018flangey\u2019 quality.\n\nAnd four samples of delay (and then inverting the noise) produces something rather special: a noise profile that closely resembles what you hear off reel-to-reel tape.\n\nI can\u2019t specify particular brands because (a) I hate when people do that to brand names not their own and (b) it\u2019s a technical discovery, not some complicated way of forcing digital audio to mimic a particular brand. It\u2019s no specific tape stock or tape machine. But what it is, is a voicing for TPDF dither that rolls off in an obvious way, around where tape noise rolls off. There\u2019s another little bump past that, which many people won\u2019t be able to hear, and then it begins to roll off again as it reaches the Nyquist frequency beyond where digital audio can\u2019t go. Compare that to any normal flat, TPDF, or highpassed dither. Those keep putting out noise energy right up to the frequency limit.\n\nTapeDither is every bit a TPDF dither, technically correct and flawless as far as dither goes. But it also is a highpassed dither with a softer tonal voicing that resembles good tape machines, and that doesn\u2019t affect the dither performance at all. It doesn\u2019t attenuate the audio content at all. Only the background dither noise is turned into what you\u2019d get off a tape deck, all while the audio is protected from truncation and digital artifacts.\n\nI would use this anywhere I was sending processed stems or tracks outboard to a multichannel DAC, for mixing in the analog domain or summing with an outboard summing box. Without hesitation. I\u2019d use fancier boutique dithers on the 2-buss, though this will work there too\u2026 but if I was doing an analog mix from a multichannel converter, there is nothing I\u2019d rather use than TapeDither. (maybe Naturalize. Maybe.)\n\nThat\u2019s because it\u2019s one thing to apply an interesting dither (like Spatialize, for instance, or some noise shaper) on the 2-buss and get a unique texture or presentation on the audio. But if you\u2019re stacking up lots of tracks and all of them get the same treatment, it\u2019s vital to use something that won\u2019t develop an exaggerated tone signature when multiplied that way. For dither, TPDF gives you that behavior, and TapeDither is the TPDF that most closely mimics the reality of analog mixing back in the days of big reel-to-reel machines. The tone of its noise floor is already more pillowy, mellow and relaxing than most TPDF or highpassed TPDF, and then when you stack up lots of tracks of it, the texture\u2019s better still.\n\nI\u2019m still excited to bring out Naturalize, but I\u2019m just as excited about what TapeDither means. It makes me want to build analog consoles and mix into them, just so I can put TapeDither on any output that\u2019s not playing raw 24 bit data exactly as captured. Anything with processing or gain on it would get a dithered output, and it would be a matter of\u2014faders up\u2014hello, Seventies :)\n\nWell, I like audio from the Seventies. I suppose I\u2019d better work out how to do some of the sonic quirks of Doubly while I\u2019m at it! Not that a rock band would use Doubly\u2026",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TapeDust",
    "description": "just a special treble-erode noise, a \u2018slew noise\u2019 plugin",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "tapedust",
    "short_description": "just a special treble-erode noise, a \u2018slew noise\u2019 plugin",
    "full_description": "Sometimes it\u2019s good to have just a little specialty plugin that does a useful thing. Hard to do that in the commercial plugin biz, where everything has to be the biggest hype to date: but hey! Thanks to Patreon I\u2019m free of all that, and can follow my vision.\n\nIt helps that I put out a lot of plugins: it\u2019d be weird to do this as my only plugin for the month. But, while I work on Desk4 and StarChild from the greatest-hits list, I thought I\u2019d sprinkle a little TapeDust for you.\n\nThis is slightly different from the tape noise in Iron Oxide, though it\u2019s the same general principle. It is a slew noise plugin. What that means is, the noise ONLY hits high frequencies or anywhere the signal\u2019s moving rapidly (there\u2019s a teeny bit of other noise added at high settings, but it\u2019s mostly that).\n\nNote the \u2018or anywhere the signal\u2019s moving rapidly\u2019. This isn\u2019t a crossover. If you put in a sine wave that\u2019s low and loud, you\u2019ll get very obvious noise only as it crosses through zero, and that\u2019ll sound odd. In general, cranking this up is weird. It\u2019ll depend hugely on what kind of signal you\u2019ve got\u2026 but that\u2019s the beauty of it if you can master where to use this plugin.\n\nBasses? Probably no way. Full mix? Getouttahere, no chance outside very low settings. Guitar? Hmmm. Drums, loops? A pattern emerges.\n\nTapeDust can convert ugly sharp treble attacks on pointy percussive atonal sounds to pretty much any degree of dense, noisy, natural-sounding crunch. It\u2019s a type of noise, so it also gives analog-style variance to repeated samples that might sound over-digital. And the less tonal, or the less \u2018pure clear note\u2019 the signal is, the more TapeDust you can get away with. Since it\u2019s a slew noise, it hits the treble of your signal HARD, but since it\u2019s a noise, it\u2019s not filtering or softening the sound as much as it\u2019s just eroding it, weathering it, making it more natural. Anywhere you\u2019ve got bright highs on a nonpure sound, you can grind them off with TapeDust.\n\nOf course, if you\u2019re cool with using super-low settings, you can do that anywhere: it\u2019s just important to register that this very specialized and dedicated tool is super picky about what it likes to work on. It\u2019s a beautiful example of taking your production skills deeper: use something that can sound horrible and wrong, and find places where it\u2019s in its element. You can do outlandish textural things, taking something like a clean electro mix with deep clean bass, and sticking heavy TapeDust on just one element in the mix to contrast with the un-grungy elements. I hope you like TapeDust. It\u2019s the kind of plugin I love to make.\n\n(note: there has been a bug in this plugin causing it to sound different than intended)",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "TapeFat",
    "description": "the tone control from TapeDelay",
    "tags": [],
    "slug": "tapefat",
    "short_description": "the tone control from TapeDelay",
    "full_description": "TapeFat is just the tone control from TapeDelay. It works like an averaging filter that you can use to either roll off highs (or eventually mids), or subtract the effect to create a highpass and take out the lows.\n\nThe reason this is interesting is, that tone control is completely bizarre. It\u2019s an averaging filter, but on a pile of delay taps arranged according to prime numbers. Works more like an ambience control, but more densely packed. If you put an impulse through it you don\u2019t get a smoothed-out lowpass so much as a bizarre micro-reverb. Since it\u2019s using primes, it doesn\u2019t reinforce any particular frequency. Since it\u2019s an ambience, it doesn\u2019t have any pre-echoes like linear phase EQs, and the artifacts it produces become a tone of their own (either in-phase, or inverted).\n\nYou can hear it on the video, which has a number of things updated, not least this: the new audio is directly captured analog sorta-house music out of my livestreams. This way you ought to be able to really hear the way my plugins retain analog qualities, because now the demo music is essentially AAD: not products of other DAW mixes or digital synthesis, but source material.",
    "categories": [
      "Filter"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TapeHack",
    "description": "a new dimension in tape realism, abstracted to software",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "tapehack",
    "short_description": "a new dimension in tape realism, abstracted to software",
    "full_description": "It started with a paper by Spencer Walters, on this subject: what's the role of hysteresis in magnetic tape recording? We tend to assume that's fine, we're making it linear, apart from all the soft saturation of course. Even then, that's not quite where it starts: it's research on Dolby HX-Pro that got Spencer thinking. I'm not sure the Dolby people quite understood the implications of what they had, as that was an era of 'remove all distortions'.\n\nGradually, Spencer started to figure out what he had, and there's analog hardware coming out from Walters Audio that I frankly covet. And Spencer wrote a paper, talking of magnetic flux and relative coercivity and hysteresis loops. I frankly don't have the math he does, but I worked with analog tape growing up, and have a good idea of how it responds. And there was this set of diagrams, of a 1kHz wave magnetizing tape, and what you actually get out of it without and with tape bias\u2026\n\nIt showed there was a dead spot, if you didn't bias. Well, I knew that: I'd coded something like it into ToTape 7 and 8, letting you dial in a section of Type AB distortion if it was 'underbiased'. But look again: that dead spot is still there, if you bias. The recording is sweeping back and forth across it at 100 kHz, but it doesn't stop that dead spot, where magnetic tape's coercivity hasn't kicked in, from still existing. You're just keeping it way busier than before, but a 100k wave still has to sweep through zero each cycle.\n\nWhat if this dead spot was central to tape sound as we know it? What if there's always a hint of it, a bit of antisaturation in there at the opposite dynamic extreme from TAEP PHAT, as shown in Spencer's diagrams? More importantly, could I code something like that?\n\nSure could :)\n\nTapeHack does a number of interesting things due to what I came up with. First, it's very efficient: it's a simpler, lower-CPU form of a sin() function, so it has the softclip nature. It's made to have this 'extra zone' by manipulating how an approximation of sin() is made, so I can also do variations on it and asin() and combinations of them, for the purposes of future Console versions. Doing that tends to take away the saturation effects, so there would be additional layers of TapeHack for making 'vintage consoles' sound as we experienced them.\n\nThe differences in waveform can be described. Unlike sin(), TapeHack hits a soft saturation point and then takes the flat top and begins to extend it, while turning the 'quiet part' of the wave into more of a trapezoid shape that's remarkably persistent in its slope. The steepening curve of the soft-clip gets sharper and sharper while these other factors stay relatively consistent.\n\nAs a result, TapeHack does 'tape compression' better than anything I've ever made, full stop. Turns out you can make sharp softclip corners, but we hear 'brighter' as a function of how much more steeply that center part of the waveform slopes. This is likely to be exactly the same in the Walters T805 (patent pending) even though that's fully analog: you can see it showing up in oscilloscope traces in Spencer's paper. It's heard as a shockingly believable 'tape bark' on things like drums, it's heard plainly when you run a heavy guitar sound hot to 'tape' to make it sit more up-front, but just as importantly, it livens up a more quietly 'recorded' track by giving it that characteristic dynamism and optimal distribution of peak energy.\n\nA side note: I've posted classic vinyl records and measured them, tracking peak vs. RMS energy, as that's been my own parallel pursuit of what went on in those very sonic Seventies, when things just sounded better to me. A common factor is WAY more emphasis on peak energy and crest factor, with it persistently sitting much better dynamically than digital accuracy gives you. Well, this lines up with that observation exactly. Applying this hysteresis (or, like with TapeHack, just using the transfer function directly) produces both the peak distribution and the desired sound.\n\nThere will be more about this: and yeah, Spencer's aware of what I'm doing and cool with it. In fact he'd like to know if my testimonial (in his thread on the matter) can go on his website. My work on TapeHack suggested to me that he's really on to something with this, I'm happy to say so, and my more abstracted version is something we can all enjoy. (oh: it's also perfectly suited to oversampling for folks with something like Reaper where you can just do that. I won't be, because I think it gains more from the immediacy of direct processing than you lose from what little aliasing it'll produce)\n\nI'll be saving up for the hardware Spencer makes, and I'll be using what I learned in TapeHack for many things. Hope you like it!",
    "categories": [
      "Tape"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Texturize",
    "description": "a hidden-noise plugin for adding sonic texture to things",
    "tags": [
      "Latest"
    ],
    "slug": "texturize",
    "short_description": "a hidden-noise plugin for adding sonic texture to things",
    "full_description": "It all started with snake oil\u2026 or should I say secret snake oil?\n\nThere\u2019s talk lately of a plugin which has gotten a rather critical reception: a plugin said to put subliminal noise into the sound, to produce near-magical enhancements of tone and all good things. But you can\u2019t hear it directly\u2026 you gotta vibe it, listen and embrace the magic, and then you\u2019ll believe\u2026\n\nPeople were, shall we say, critical of this approach :)\n\nSince I\u2019m free to code what I like, thanks to Patreon and all (and thank you, all who\u2019re pitching in there) I took an interest, and now you have Texturize. It is NOT literally this other plugin, or their patents, or the specific method by which they make the magic concealed noise that makes everything better.\n\nBut what it IS, is a riff on several previous plugins I\u2019ve had for years and years, to produce a very similar function\u2026 but THIS one, you can tweak and you can also crank it up and listen to only the noise to hear what it\u2019s like. Ruin the magic\u2026 but learn how the trick is worked. And it turns out it is really not snake oil at all\u2026 it\u2019s just another thing to do with audio, and it does seem to work, and everyone making a plugin of this nature will have their own \u2018take\u2019 on it: if you like mine maybe you\u2019ll try out the other folks\u2019 plugin with more of that open mind, having proved that the concept is sound. Or just use mine, which is open source and free :)\n\nYou get three controls. Bright makes the effect key off high frequencies more aggressively, to the point of hyping up energy, and Punchy varies between a softer, fuller sound and a real spiky choppy effect. And then there\u2019s Dry/Wet, the heart of the plugin, where settings of 0.5 or less are probably going to keep the noise entirely inaudible, as it\u2019s meant to be. Not heard\u2026 but felt. And the sonic transformation\u2019s really interesting, all the more if it\u2019s not obvious. It reminds me of how tape flutter can bring texture to pure tones, chorusing against nearby reflections for a fatter sound, but here it\u2019s just noise\u2026 but noise doctored to act like the music and hide behind it.\n\nAnd then of course you can crank it up until you plainly hear hints of the noise\u2026 or slam it until you only hear the noise. But to actually use the plugin properly, keep things at 0.5 and don\u2019t push Bright or Punchy or especially Dry/Wet to where it\u2019s gone too far: tweak it on that subliminal level, turning Wet down if you need to, and see what you get.\n\nI might well start using it. It really does seem to work. Go ahead and fool with it and strip all its secrets\u2026 and see whether you believe, too :)",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TexturizeMS",
    "description": "a hidden-noise plugin for adding mid-side sonic texture to things",
    "tags": [
      "Latest"
    ],
    "slug": "texturizems",
    "short_description": "a hidden-noise plugin for adding mid-side sonic texture to things",
    "full_description": "This is further development on my earlier plugin, Texturize. It existed to blend sculpted noise with the direct signal in a way that can enhance the qualities of your audio\u2026 depending on what that was, and whether you liked the results. It 'does something', that's for sure, but what? My code for doing it already existed, but there was a lot of buzz over another plugin which did a variation of this effect with a great deal of mystery and hype. I thought it was useful to do an open source version where you could clearly hear what the thing did, and that's Texturize.\n\nBut what if a simple stereo effect isn't enough?\n\nTexturizeMS breaks the effect into mid/side processing, and then lets you set them independently. That means you can add a bit of extra zip in the highs to just the side, while keeping the center cleaner. If you have synthetic elements that show obvious noise using Texturize, and they're centered, you can tune just the middle. I think it's a major upgrade in terms of actually using the effect usefully.\n\nIt's still Texturize. It's still a sort of funky snake oil (or maybe truffle oil?) It's a flavor and is absolutely doing a thing, but you don't have to consider it useful. But if you liked the flavor and atmosphere of this one, I think it's your lucky day. Hope you like it!",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Thunder",
    "description": "a compressor that retains or exaggerates subsonic bass when you push it",
    "tags": [
      "Latest"
    ],
    "slug": "thunder",
    "short_description": "a compressor that retains or exaggerates subsonic bass when you push it",
    "full_description": "Compressors are tricky little beasts: they tend to eat low-end, they react differently at low intensities than when you slam \u2019em, and each sort of compressor has a \u2018voice\u2019 that defines how it acts.\n\nThere\u2019s a crude way to deal with the low-end problem, which is to put in a crossover: either to split into multiband compression, or simply highpass the sense circuit so the compressor can\u2019t compress extreme lows and just lets them through. I\u2019ve been asked to do this and have actually tried it on PurestSquish, but I was never satisfied with the results. It seemed like just half-breaking the compressor and I felt there had to be a better way\u2026\n\nThunder is that better way. Instead of passing through the bass, it transforms it in a way similar to FathomFive, and uses that live, active signal to modulate what the compressor sees, where in turn the compressor\u2019s output is modulated by the intense lows. It\u2019s a little complicated, so you can watch the video or simply download it and try it. Thunder is free (bear in mind that my only compensation is the Patreon I\u2019ve created. To do this onward into the future, that Patreon must succeed)\n\nIf you\u2019re auditioning Thunder, a word of warning. You\u2019re going to have to monitor the extreme lows. This plugin can prepare music for the hugest sound systems or the finest audiophile playback, but if you can\u2019t hear what it\u2019s doing you may get in trouble with it. Decent headphones ought to suffice (not earbuds!). If you have subwoofers, this will test them. You can also use the mix-check plugin SubsOnly to test how you\u2019re doing, that will spotlight the subs for you.\n\nThe range of adjustment starts with gentle \u2018glue\u2019 compression as the subsonics begin to open up the mix. Then, a bottom octave will appear anchoring everything. Push beyond that and you start to get into more compressed 2-buss, with the extreme lows taking on a punchier, thumpier character. Add more Thunder and the bass gets frisky and aggressive and dominates. Then, when you go even beyond that, we\u2019re talking about ridiculous monstrous mega-bass, and more or less wrecking the sound of everything else (it\u2019s useful to be able to go to weird broken settings in case you want to step back just a bit and have a really extreme effect). This is not a multiband compressor (there\u2019s only one stereo comp in the plugin) but when driven really hard it can go even more bonkers than a multiband compressor.\n\nRemember, the low Thunder settings are useful too as a glue comp, for a buss compressor that\u2019s extremely transparent and true to the tone of the mix! The middle settings are just as functional. All of these settings have their own usefulness. Choose wisely (or unwisely, if you prefer).",
    "categories": [
      "Dynamics"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ToneSlant",
    "description": "a super-transparent \u2018tilt EQ\u2019 with very low Q",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "toneslant",
    "short_description": "a super-transparent \u2018tilt EQ\u2019 with very low Q",
    "full_description": "This is a new plugin, not a port from an existing Audio Unit. It\u2019s based on a variation on the Average concept. Turns out, it\u2019s the tail end of the \u2018averaged samples block\u2019 that causes the cancellation node. ToneSlant implements a much bigger sample block (100 taps) but linearly fades the samples off between the first and last sample in the block.\n\nWhat that does, is produce an extremely transparent \u2019tilt EQ\u2019 with a controllable corner point. And, it\u2019s implemented in such a way that you can set it to null out (at extreme high boosts) and then bring in only the brightest highs (shown in the video). Quirky, maybe, but it broadens the ToneSlant toolkit. So, the main uses are:\n\n-Extremely low Q treble rolloff above a set point (with a fixed dB/oct)\n\n-That, plus you bring in the dry signal by not putting the Highs to an extreme (it\u2019s like a positive/negative wet/dry/wet, but that doesn\u2019t fit on the label, especially for VST)\n\n-Total cancellation with Taps at 1 and Highs at +1, and then you put Taps to just barely greater than 1 and you can have a very natural high-shelf controllable with the Highs control\n\nThese come out of the algorithm: the reason it performs so well sonically is both the extremely low Q and the simplicity of the algorithm. Not everything I make belongs in a mastering studio, but ToneSlant is peculiarly suited to that use: it\u2019s like those specialty EQs that have very few parts and impart no color to the sound. You should be careful applying ToneSlant, because it \u2018hides\u2019 and tries not to be apparent as EQ. Use it as such, when you need perhaps a strong \u2019tilt\u2019 but don\u2019t want the result to sound equalized.",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "ToTape5",
    "description": "Airwindows analog tape emulation",
    "tags": [],
    "slug": "totape5",
    "short_description": "Airwindows analog tape emulation",
    "full_description": "ToTape5 is the best Airwindows analog tape emulation. It builds upon the previous four versions (which have been some of my best sellers) and incorporates everything learned from the Purest series of plugins, to produce a tape emulation that does what analog does. (Analog tape does really good things for mixes, and it\u2019s very difficult to get it right without sinking into a morass of overprocessing and digital blandness)\n\nIt\u2019s better than Iron Oxide, always was. Iron Oxide is for \u2018slamming tape for effect\u2019, for putting on individual tracks, not realism. ToTape is for realism and quality: for \u2018mixing to tape\u2019, in the box. I don\u2019t think there is anything else that can stand as much scrutiny as ToTape will: it\u2019s developed on mastering-grade gear and when used in its most optimized state, it\u2019s not a toy. It should be more transparent and musical than most plugins (never mind \u2018tape emulation\u2019 plugins, which are generally not even as transparent and musical as a good digital EQ plugin).\n\nIt has six controls: four if you don\u2019t count Output and Dry/Wet, which are pretty obvious.\n\nLouder defaults to 0.25 because the tape emulation soaks up some level. You can set it to 0 for added purity (it removes a gain trim stage if you do) and if you do that, you can plainly hear that the emulated tape \u2018soaks up\u2019 some of the audio, noticeably dropping the level while not seeming to alter the tone at all. There are no gain adjustments making that happen, it\u2019s entirely tape saturation which is very transparent. (There is no compression, either.)\n\nSofter is the treble softening. Defaults to 0, which is still on but very hi-fi and subtle. You can turn it up to get a more \u2018old\u2019 tape machine tone, and like the other controls if you need to finetune the effect by ear, your adjustments will probably be around 0.1 to 0.2 if you mean to retain the full fidelity of the mix.\n\nFatter is the head bump. Defaults to 0, which is still on, but subtle. It can be cranked up to silly/stupid levels if you like. Again, if you want to emphasize the extra roundness and fullness of tape, you might be tweaking this to 0.1 or 0.2. If you don\u2019t have fantastic subwoofers or monitoring that can handle deep bass, leave this at 0! Boosting it will introduce deep lows very cleanly and you might not hear them unless your monitoring is up to scratch. You will also have to turn down Output if you boost this a lot.\n\nFlutter is the tape flutter. Defaults to 0 which is OFF, see comment on \u2018dry/wet\u2019. The most amazingly awesome tape recorders did NOT have loads of flutter, but if you want a little \u2018spaciness\u2019 or \u2018atmosphere\u2019 you can put in small amounts of this, like 0.1 or so. Go by feel, if you can hear it fluttering it\u2019s kind of too much. If you\u2019re using this, please don\u2019t use Dry/Wet to combine the result with dry: you\u2019ll create a flangey effect and it\u2019ll be more obvious than it should be. By design, Flutter is made so you can increase it until it\u2019s too much, so please remember that realistic levels are more like 0.1: too subtle to immediately hear. Go by feel, or pretend you have a really terrific tape machine and leave it off entirely, set Flutter to 0. (For instance, anyone who\u2019s mastering and intentionally adds flutter ought to think hard about whether that\u2019s really helping.)",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ToTape7",
    "description": "Airwindows tape emulation with bias and Dubly",
    "tags": [],
    "slug": "totape7",
    "short_description": "Airwindows tape emulation with Bias and Dubly",
    "full_description": "So about that simplification of ToTape? Nah. But\u2026 set everything to the middle and you can ignore all the many controls.\n\nToTape7 not only upgrades pretty much every single thing about ToTape, but it brings new functionality beyond any previous version (even when they're good) and it lets you go completely bonkers tailoring signature new sounds however you like them. This is the ToTape for people who wanted all the controls, and more. It's the ToTape for salvaging any sort of audio no matter how DAW-like it is\u2026 and it's the ToTape that can be stripped right down to serve as its own FromTape, anytime you like, or if you're trying to run lots of channels of it because you want to tape all the things and then mix them down also to tape. Which it's great at, by the way, as it soaks up loudness super well and even has a ClipOnly2 built in so it can serve, standalone, as your ultimate loudness clipper.\n\nToTape7 has exactly as many controls as you can fit in Airwindows Consolidated, which means it'll also run in VCV Rack. That means there are some possible controls it skips, and exactly one control that's dual-ganged with two things riding on one single knob. It's just a different knob this time: used to be dual-ganged on the knob marked Soften. The controls from top to bottom operate Dubly Encode, Drive, Flutter, Bias, Head Bump, and Dubly Decode. Again, set everything to the middle for 'normal', but you can go way past normal if you want.\n\nDubly Encode (not the same thing but the same concept as a famous noise reduction system) applies a brightened and compressed boost to the audio pre-tape, with the amount governed by Amt and the highs cutoff by Freq. (Dubly Decode is exactly the same, except it simply subtracts the effect it makes: this is the secret Seventies tape sound, especially when you tune the Dublies to produce effects). Match them to get mostly 'normal' sound, mismatch them for effect: mind that you don't boost Decode Amt too much or it will produce sort of anti-crunch sound, going past 'cancellation' to obvious distortion. (or do it if you feel like it, I'm not your boss)\n\nTape Drive is your boost (or pad). 0.5 is unity gain. Boost if you want lots of tape drive, or to loudenate. You should have a good ability to do this and make it sound the way you want. Since Dubly was added, it's even better at allowing for clean gain here, as Dubly tends to suppress harmonics from distortion.\n\nFlutter is like Flutter2, but is NOT exactly the same. It's updated, even since Flutter2, for the purpose of letting the '3D tape' emulation (letting tape bend laterally as well as stretch) be more accurate. It's also toned down a bit so 0.5 gives you a reasonable, real-world flutter effect. The two channels will use their randomness to try and chase each other a little, much like how TPDFWide does the same thing to be LESS correlated. Turns out with default settings this is really, really good at getting a spacious tape realism without letting the imaging go too weird. You can also bypass the whole thing by setting Flutter to zero: if you're running at low sample rate, consider doing that if you're running lots of ToTape and losing the extreme highs. I might not run Flutter on multitracks, just the buss.\n\nBias is usually set to slight overbiasing. It's like GoldenSlew, but it's simplified and it's being run between Dubly encode and decode, so it's acting differently from the standalone GoldenSlew. Underbiasing also works but is a different algorithm that's probably not going to be people's first choice, but you can do it. Slight overbiasing is your best weapon against unpleasant tizzy highs.\n\nHead Bump is like DubSub2, but it too is updated even more to get more out of ToTape7. There's a highpass built in at 0.5 setting that balances the bump against the rest of the audio, making it so if you stack up the plugin it doesn't get too messy, modeled after references of real tape machines doing multiple generations. Anywhere you set the head bump frequency should get reasonable results with Head Bump at 0.5. If you pull it back OR boost it, you begin to drop the highpass as you do that, meaning it will either crossfade over to the original digital bass (with extended subs) as you reduce the bump, or it'll start adding even more exaggerated bump to the original bass as you crank. So, it's a special voicing for doing all of the things, with 0.5 as the 'peak realism' and most restrictive setting. Ouside that, just pick whether you want less 'tape bass', or 'mega bass' by combining the source and the bump.\n\nSaid bump still does the thing from DubSub2 where it's also giving a mild notch at double the frequency, which is characteristic of pretty much all real tape machines. You get to pick the frequency, because why would you be tied to a given machine when they're all different frequencies already, and when the heart of the effect is not getting the frequency right, but the unusual Airwindows head bump algorithm that'll work just fine however you voice it?\n\nAnd Dubly Decode helps you get even smoother, more compressed sound out of the tape saturation, and lets you dial it in by both amount and frequency. Be aware that it's a really gentle treble-slope, so making subtle changes to frequency will have an effect on the character of the sound but won't produce wild effects. Basically, if Dubly mostly balances but Enc is crossing over lower than Dec, there will be a sort of lower midrange hype that comes through: if Dec is lower than Enc, it's going to be drying up that energy and making it a bit tighter. They're supposed to cancel out, but half the reason classic records all sound different from each other is that this system in real life required a lot of fussy tuning, and some people set it up by ear and ended up with distinct tone qualities for their studios when they did. It's not so much 'EQ' qualities as texture. Experiment with it to see if you have preferences.\n\nAnd that's ToTape7! Ought to hold people for a while, and be a decent upgrade from ToTape6, even though people really like that one (and it's still there so you can still have it anytime you want).",
    "categories": [
      "Tape"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ToVinyl4",
    "description": "a vinyl-mastering simulator bringing several vinyl-type colors",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "tovinyl4",
    "short_description": "a vinyl-mastering simulator bringing several vinyl-type colors",
    "full_description": "ToVinyl has several uses. You can use it to reshape the bass in your track, making it more mono or tightening up the center. It\u2019s a special multipole IIR filter that acts almost like a \u2018mega-bass\u2019 plugin: it doesn\u2019t just take away, it rearranges (so don\u2019t expect it to act like a normal digital cut, you might see increased peak energy down low.)\n\nThen, there\u2019s the acceleration limiter. This algorithm is unlike any other Airwindows treble-reducer: it zeroes in on just the sorts of transients that\u2019d burn up a cutting head, and zaps them ruthlessly. (if you own a cutting head you\u2019re responsible for checking this, but some of you folks are still using Spitfish, and I\u2019m pretty sure this will way outperform Spitfish.) The effect is treble softening without any obvious treble reduction, and it\u2019ll make stuff sound like classic vinyl grooves very effectively.\n\nBut that\u2019s nothing compared to the next control, Groove Wear. This one analyzes the virtual groove, and then sets up an imaginary stylus going down that groove, and gives it a tiny bit of inertia. It\u2019s more slew mojo (and not tied to any particular frequency, it doesn\u2019t even know what a frequency is) and the effect (should you choose to use it) is a very characteristic darkening and slight trashening of the most extreme highs. You can shut it off entirely, or turn it up, and you can combine it with the acceleration limiter to get pretty much any \u2018vinyl LP high end\u2019 you want. Some settings even bring a touch of moving-coil sparkle: it\u2019s not all darken, in fact Groove Wear is very much its own thing distortion-wise.\n\nCombine it all together and you\u2019ve got ToVinyl4, the up-to-date version of a classic Airwindows for-pay plugin.",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "TPDFDither",
    "description": "TPDF dither. With 16/24 bit output and a DeRez control",
    "tags": [
      "Basic",
      "Recommended"
    ],
    "slug": "tpdfdither",
    "short_description": "TPDF dither. With 16/24 bit output and a DeRez control",
    "full_description": "TPDF is the industry standard technically correct boring dither. It does nothing strange or interesting, makes no effort to optimize the sound in any way (generally if you make it better for something it\u2019s worse for something else: even Naturalize only has a limited amount of output bits to work with.)\n\nTPDF uses two sources of noise to make what\u2019s called a Triangular Probability Density Function, which gives it its name. If you had only one noise source, you\u2019d get what\u2019s called flat dither (I\u2019m not offering that, but it\u2019s in Ditherbox, along with truncation.) When you only have one noise source (at the correct volume, which is one bit wide) you get dithering and sounds correctly transition into silence instead of going insane with grating gnarlyness (which is what happens with truncation, anywhere and everywhere it happens) but with only the one noise source you get an effect where the noise level flutters and shifts depending on what the audio\u2019s doing. I demonstrate this in the video, it\u2019s quite noticeable.\n\nWith the two noise sources, TPDF transitions sounds into silence, and still keeps a totally unvarying noise profile. In a very real way, this is more analog-like. All analog circuits get some noise, and all analog circuits let sounds drop beneath that noise exactly like TPDF dither does.\n\nThat\u2019s not to say it\u2019s the only choice you can have for dithering: I\u2019ll be offering up different ways to dither for weeks, each with their own interesting sound signature. I\u2019m just saying, for what it is, TPDF dither works extremely well. If you don\u2019t have good reasons to use something fancier, or you want something guaranteed to work on everything in any situation, TPDF dither\u2019s the one for you. Airwindows TPDF dither is a nice high-resolution well-coded implementation, one that does the truncating for you so you can compare it (for instance, with BitShiftGain like in the video) but it\u2019s also exactly the same as any other properly done TPDF dither out there. There\u2019s no fancy tricks, it\u2019s just the boring but useful TPDF dither.\n\nI guess there are a few Airwindowsy things about it but they\u2019re not sound quality related. If you\u2019re using the AU on Macs, it\u2019s \u2018N to N\u2019 meaning it works on quad and 5.1 channels automatically, and is more efficient on mono channels. And just like all the Airwindows dithers that are coming out, it is 24 bit only and has no controls. That means if you want 16 bit you could get the AU Ditherbox, wait for it to be ported to VST, or use two copies of BitShiftGain that I just released. (I\u2019m discouraging emphasis on 16 bit because I think it\u2019s obsolete and should be deprecated.) This also means if you\u2019re using TPDFDither as intended, it\u2019s a \u2018non-fiddly\u2019 plugin that won\u2019t distract you. There\u2019s no window, no GUI, no reason ever to open it in the DAW: if you\u2019ve placed it in the correct spot you can see it there (clearly marked TPDFDither) and that\u2019s all you need to know.\n\nMaking plugins that simple and self-effacing is a very \u2018Patreon-supported\u2018 thing to do. When you have to sell plugins to stay alive as a company, you\u2019ve got to keep them in your users\u2019 faces and distract people to make them think about you, lest you be forgotten. This competes with the creative urge and gets in the way. Making plugins that are ruthlessly minimalistic to the point of being almost not there, is the opposite. Your music has to be the focus, so the plugin has to have the goods sonically but also be non-fiddly, because it\u2019s sort of ugly and boring and not fun to play with.\n\nI continue to delight in the latter. Let your music be the focus. Hope you enjoy TPDF Dither, and expect a lot more plugins of this nature, as fast as I can reasonably release them :)\n\nThis got a Redux edition, meaning some added controls. Not only 16/24 bit TPDF with a DeRez control (and a clamp for how loud it gets so it doesn\u2019t blow up your ears at super low bit depths), it\u2019s also the Airwindows TPDF algorithm. Which is to say it\u2019s not exactly like everyone else\u2019s TPDF algorithm, even though it adds exactly two noise sources each one bit in loudness.\n\nThat\u2019s because when I made it, I added one and then subtracted the other and thought that gave me zero. But of course, it doesn\u2019t\u2026 it gives me TPDF (triangular probability density function, or \u2018the correct kind of dither when done by-the-book\u2019 which decorrelates two moments of quantization noise blah blah blah technical :) )\n\nBut it also gives exactly half a bit, on average, of DC offset. This is enough to make measurements weird. It\u2019s not enough to do any harm to anything (less than a least significant bit: it\u2019s literally in the noise floor). But it is enough to have the noise floor sit across THREE bit values instead of only two. And that is enough to make it sound nice. (it\u2019s possible there are other values, like 0.382\u2026 that would sound better still, but I\u2019ve not done that experiment yet, and it\u2019d be more complicated to implement\u2026 guess I know what I\u2019ll be doing NEXT week)",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "TPDFWide",
    "description": "still TPDF dither but better and wider. With 16/24 bit output and a DeRez control",
    "tags": [
      "Latest"
    ],
    "slug": "tpdfwide",
    "short_description": "still TPDF dither but better and wider. With 16/24 bit output and a DeRez control",
    "full_description": "TPDF is Triangular Probability Density Function. It\u2019s about using two random sources of EXACTLY the right amplitude (one Least Significant Bit each) to render anything else, including the noise floor, free of quantization distortion so you can hear deeply INTO the noise floor and have it sound musical. Dither is important, and TPDF is the industry standard.\n\nMe being Chris from Airwindows, I always manage to find a way to tweak things just a bit, and in my TPDF dither the randomness contrives to be added to the audio in such a way that it \u2018leans\u2019 a bit to one side of the waveform, while still being purely random noise sources of exactly the right amplitude. This causes the ultimate noise floor to be distributed over slightly more values than you\u2019d get if it was perfectly lined up, at the expense of a teeny-tiny DC offset down about 12 db under the noise floor.\n\nTurns out there\u2019s more that can be done. If you have purely random sources, then your stereo channels will sometimes end up at the same random values. This is similar to the dither being in mono, which is known to narrow soundstage and hurt the sensation of wideness. But what if you could avoid that?\n\nTPDFWide is purely random-source Triangular Probability Density Function dither, but once it\u2019s rolled up its random numbers, it checks to see if the two channels came out the same (or close to the same). If they are\u2026 it rerolls a channel. If they still are\u2026 it rerolls the other channel. If they still are, it rerolls the first channel again, and then gives up so as not to hurt itself. In every case these are still random numbers: we\u2019re just rejecting ones where they\u2019re too mono.\n\nAnd that gives us a \u2018regulation\u2019 TPDF dither that sounds better AND wider than generic, ordinary TPDF dithers. Firstly it covers just a slightly larger range at the noise floor, without actually being any louder. And secondly, it resists \u2018mono dither\u2019 which causes it to sound wider and more spatial than ordinary TPDF dithers. And yet it\u2019s still a TPDF dither, at heart. If you would like something a little special, but don\u2019t like my more unusual wordlength reduction techniques like NJAD or Spatialize or Dark or Beam etc. then you might enjoy TPDFWide. It has a \u2018DeRez\u2019 control that lets you go to low-bit realms and hear what the noise floor really sounds like, and it\u2019s got 24 and 16 bit modes when you have DeRez set to 0 (which you should, for normal operation). You can use it as a 24 bit dither for monitoring and file-making, and as a 16 bit dither when you need to export to 16 bit. I hope you like it :)",
    "categories": [
      "Dithers"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "TransDesk",
    "description": "more of a transistory, rock desk analog modeling",
    "tags": [],
    "slug": "transdesk",
    "short_description": "more of a transistory, rock desk analog modeling",
    "full_description": "Continue the look into classic Airwindows analog modeling with TransDesk!\n\nThere\u2019s a famous analog console known for rock mixes. It might not have the preamplifiers to hang with the APIs and Neves of the world, but it\u2019s been a watchword for mixdowns, both for the sound and for the extreme flexibility it offers (automation, effective EQ, compression). I\u2019m not going to name it, but I was tuning TransDesk to get into a similar area: in particular, I wanted to get a comparable aggressiveness into the highs. This isn\u2019t a plugin for making things soft and sweet, it\u2019s for rocking out.\n\nThat said, there are many paths to this ocean of sonic mayhem, and what distinguishes TransDesk is that it gets its sound with very little processing. You don\u2019t lose much mojo just to get that coat of sonic paint. In some ways the immediacy of this approach is closer to the analog truth. In other ways, it\u2019s less a would-be clone of a classic big console, more a way to get some of that energy. (Technically, I\u2019m doing it by trying to match the overload characteristics, including power supply idiosyncrasies that affect the way energy can be drawn for the highs.)\n\nThe result is another Desk-style plugin, with a completely different sound. It\u2019s not calibrated to work with Console (that\u2019s the for-pay version of Desk that consolidated these and calibrated them all) and it doesn\u2019t have special requirements for where it should go. Place it where you want that style of tone coloring: like Desk, you can use it on auxes and submixes (including ones \u2018inside\u2019 Console) to better emulate running through a lot of circuitry.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Tremolo",
    "description": "fluctuating saturation curves for a tubey tremolo",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "tremolo",
    "short_description": "fluctuating saturation curves for a tubey tremolo",
    "full_description": "So, you\u2019ve probably got a tremolo built in to your DAW.\n\nBut, if you\u2019ve heard tremolo effects off classic records, it\u2019s a whole different animal. DAW tremolos are neat little volume animations, capable of many cool effects (try making \u2019em squarewaves synced to the tempo for a nifty sequencey effect). But they don\u2019t have that organic pulsating thing that takes a sound and gives it a whole new character.\n\nSo I made this!\n\nThis Tremolo uses saturation and antisaturation curves like you\u2019d find in Density, and does the tremolo with that. It\u2019s the same trick I use on the compressor \u2018Pyewacket\u2019. The result is, the loud parts develop a density and thickness mere volume won\u2019t give you, and the lean parts hang on to a skeletal form of the transient attacks so your music comes through. This is not just \u2018analog color\u2019 like a coat of paint, Tremolo works quite differently from your DAW tremolo. It doesn\u2019t sync to tempo, but that\u2019s partly because I don\u2019t know what to read (in AU and VST) that\u2019d give me that information: could be added in future if the secrets are forthcoming, but there\u2019s no sense withholding Tremolo just because of that!",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "TremoSquare",
    "description": "a squarewave tremolo effect that only switches on zero crossings",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "tremosquare",
    "short_description": "a squarewave tremolo effect that only switches on zero crossings",
    "full_description": "Surprise! More sound design, texture-making, mix-blendering fun from Airwindows.\n\nI meant to put out BassAmp today, but it\u2019s not ready: needs more work. But I had this weird little critter handy, and so it\u2019s skipping ahead whether you like it or not!\n\nAnd that depends on what you get up to, signal processing wise. TremoSquare comes out of one of my livestreams, where I coded a plugin from scratch one Monday so people could watch the process. (I do that now.) It\u2019s a squarewave tremolo, but it only transitions from silent to full volume on the zero crossings.\n\nWhat that does, is firstly give the aggressive tremolo a nice warm coloration that doesn\u2019t click or crackle, even on bassy sounds. But secondly, if you ramp up the frequency super high, it stops registering as a frequency because the crossings take precedence and interfere with the frequency of the transitions. So, you get a distinct sort of \u2018de-rezzing\u2019 effect that\u2019s literally nothing but a tremolo, except it\u2019s sculpted to be smoother and more graceful. It doesn\u2019t tempo sync: think of it more like that effect on Bowie\u2019s \u2018Diamond Dogs\u2019 album of singing through a fan that\u2019s on. It\u2019s got a dry/wet control so it can be faded in for effect, and the frequency range of the tremolo is extremely huge.\n\nHope you like it! I meant to do an entirely different plugin, but I just had this lying around\u2026",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  },
  {
    "name": "Trianglizer",
    "description": "a special waveshaper that can transform sines into triangles",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "trianglizer",
    "short_description": "a special waveshaper that can transform sines into triangles",
    "full_description": "This should be interesting. It's a waveshaper with a couple unusual tricks. Meet Trianglizer.\n\nThe first thing it can do is turn full-scale sines into triangle waves\u2026 sort of. The slope on the triangle wave is slightly inconsistent (because there isn't a magical math function to make the sine into a perfect triangle, it's just a side-effect of something else). It's all a product of some work I did refining the algorithms of Console 6 to improve their accuracy as they do a zero crossing, which is constantly when music is playing (whether or not the music is loud, it all centers on zero and issues around zero crossing produce class B distortion in tiny amounts)\n\nThe thing to note here is that, while it wants full scale sines for a sharp point on the triangle, if your sines aren't that loud, what it will do is instead make a triangle wave with a round point. The point gets sharper or rounder depending on how loud the wave is. That means it's a dynamic triangle, like there's a filter, except it's getting synthesized without one.\n\nPlus, it's a waveshaper, so it doesn't care if you have a sine or anything else. It'll just reshape the wave for you. Then if you're not done, you can adjust the 'tri/fat' control and it'll do the same thing except it widens the top of the triangle into a rounded-top trapezoid wave, adding a different kind of saturation beyond simply clipping, while keeping the same slightly inconsistent 'triangle wave' angles, through zero crossing.\n\nBut what does that DO?\n\nTurns out we are applying two different shapes to get our result. The loud stuff mostly gets turned down (though with Fat engaged, it's turned up to make peaks thicker and hotter). There's a place in the waveform where the level remains exactly the same, and all the transitions between these points are super smooth. But as the sound gets quieter still\u2026 that, too, gets turned down. The slope of the waveform remains totally smooth, but it's a shallower angle than the sine that feeds it, and even shallower than what a true triangle wave would give you (subtly including some dry signal might fix this).\n\nAnd so, we have an effect that dries up fat siney basses and makes them more articulate, cutting the level a bit, when it's on Tri. On regular music, drums etc. it does likewise. Stuff drops back and becomes more dynamic, with the hottest peaks poking way out in spikey form. It'll make things more crisp and defined.\n\nBut the really interesting part is when you set it to Fat, and begin using that for added beef and slam. Because when you're doing that, you're doing the loudness saturation\u2026 but your quietness is simultaneously dropping back. So you get a super-dynamic retro effect that to me sounds like old Kinks albums or something: it's distorted, it's loud, but it's all punch and no wallow. Unlike just using sine functions to make everything super fat, this purely adds muscle and some variation of it is probably going to find its way into a retro Console emulation from me. It's that good at conveying Fifties and early Sixties sound, where everything was intensely dynamic yet weirdly opaque and dense and the sound was felt as much as heard.\n\nOr, you could just play with it and see what you get :) I am only trying to interpret a new plugin I didn't have before, which is kind of like my old High Impact plugin, but using a far more elegant algorithm that could have all kinds of uses.\n\nJust remember: set to Tri to lean out and point things, set to Fat for guts and punch while still leaning out things, and use the dry-wet if the effect is too strong. It handles the loud and soft parts separately while handling them at the same time with one very smooth and accurate algorithm. It's a mystery to me too, but I think it will find many uses as a sonic muscle-adder. Enjoy!",
    "categories": [
      "Effects"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "TripleSpread",
    "description": "a stereo tripler with extra wideness and GlitchShifter processing",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "triplespread",
    "short_description": "a stereo tripler with extra wideness and GlitchShifter processing",
    "full_description": "Here\u2019s a fun little toy that might make it into the toolkits of some otherwise non-Airwindows types :)\n\nTripleSpread is based off the code of GlitchShifter, but it\u2019s designed around one task, and that is the \u2018split a track into three, pan one hard left and pitch it down a few cents, pan another hard right and pitch it up a few cents\u2019. That\u2019s what it does. It\u2019s a tripler. Alternately, if you put it on a LR pair of instruments, it\u2019ll double each of those instruments and stay very stereo. Or if you put it on an LCR submix, it can sound like about twelve instruments. That\u2019s the specialty of TripleSpread: making a big wide stereo effect.\n\nExcept that it adds a new twist: as you bring up dry/wet, introducing the effect and progressively overpowering \u2018dry\u2019 (where the mono signal might be) it also fades out the mid content of the added stereo stuff. So you get a hyper-wide. Specifically, you get a hyper-wide that seamlessly fades between your clean, direct sound (however many sources you have in it) and the expanded, widened sound (adding pitch-shifted elements that are wider than the stereo field). These can be subtly pitch shifted, or nearly a semitone out if you crank it.\n\nAnd if that\u2019s not enough, it\u2019s still Glitch Shifter based, so you can increase the tightness control until it glitches out or reverts to dry\u2026 or you can turn it way down, until the pitch shifted tripled voices hardly relate to the original sound at all. That might be cool for ambient pads, wide stereo synthetic things or what have you: it\u2019ll add an unpredictable echoey effect that\u2019s also pitch shifted. Tighten it up, and you control that vagueness as much as you like. Tighten it more, and you can tie it to whatever rhythmic element you like: it\u2019s certainly capable of widening LCR guitars while keeping the \u2018guitar orchestra\u2019 effect relatively tight, or you can get silly and try it on percussive sounds as long as you\u2019re OK with it either glitching, or blurring the timing.\n\nSo, the key distinction between this and StereoDoubler is that TripleSpread pushes the width of the added widening voices rather than just putting them hard left and hard right. You do that by pushing the dry/wet harder.",
    "categories": [
      "Ambience"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "TubeDesk",
    "description": "a tube recording console type tone coloring",
    "tags": [],
    "slug": "tubedesk",
    "short_description": "a tube recording console type tone coloring",
    "full_description": "More classic Airwindows analog modeling with TubeDesk!\n\nTubes aren\u2019t necessarily \u2018mellow\u2019. They\u2019re also known for clarity, realism. TubeDesk isn\u2019t a mud-ifier, but it might bring you some effects reminiscent of vintage recordings.\n\nLike the other Desk plugins, it\u2019s got a kind of saturation going on, a distinct flavor to how it distorts. However, unlike TransDesk, its power supply is very different. TubeDesk is so old school it acts like there\u2019s a vintage tube rectifier, imparting an obvious rectifier sag. This conditions the sound, affecting how dynamics work through the plugin.\n\nYou have a distinct \u2018analog modeling\u2019 tone then, which is no specific console, no arbitrary color: just sort of retro vibe, generalized. It\u2019s not calibrated to work with Console (that\u2019s the for-pay version of Desk that consolidated these and calibrated them all) and it doesn\u2019t have special requirements for where it should go. Place it where you want that style of tone coloring: like Desk, you can use it on auxes and submixes (including ones \u2018inside\u2019 Console) to better emulate running through a lot of circuitry.",
    "categories": [
      "Subtlety"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "uLawDecode",
    "description": "a Console-like encode/decode pair, but much more extreme",
    "tags": [
      "Latest"
    ],
    "slug": "ulawdecode",
    "short_description": "a Console-like encode/decode pair, but much more extreme",
    "full_description": "",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "uLawEncode",
    "description": "a Console-like encode/decode pair, but much more extreme",
    "tags": [
      "Latest"
    ],
    "slug": "ulawencode",
    "short_description": "a Console-like encode/decode pair, but much more extreme",
    "full_description": "Sometimes you do a plugin that\u2019s not all that sensible.\n\nThose can be special, though, because those are the ones people can\u2019t get anywhere else.\n\nThere\u2019s a process called uLaw compansion. It\u2019s not really compression and expansion, though: it\u2019s like a kind of distortion that can be reversed. It\u2019s used for telephone transmission, and showed up in some of the earliest digital audio processors: back in the day, you had so few bits that you had to make them count.\n\nuLaw comes in two parts. The encoding applies a hideous distortion, making all the quietest sounds unreasonably loud and squishing the dynamic range up into the extreme near-clipping zone. The decoding neatly inverts this process and puts it all back. uLaw (the Airwindows plugin) does the high-resolution calculation of this process, so you can get exactly the compansion to a high degree of accuracy.\n\nWhat you do then, is you put a bitcrusher like DeRez in between the two uLaw plugins, and it suddenly sounds a lot cleaner with less roaring bit noise, because you\u2019ve remapped where the quantization points are. It\u2019s in the video, and easy to do with DeRez.\n\nAnd then\u2026 you can do all manner of other strange things, because you can put any plugin between uLawEncode and uLawDecode. Not just a bitcrusher. But, anything you put there is going to turn into a monster in a rather pronounced way. For instance, if you put an EQ in there, it will go crazy and any changes you make become loud, distorted parodies of what you meant. If you put a delay or ambience, it\u2019ll get warped very harshly. If you put pitch shifts, flanges, who-knows-what in there, you get shockingly horrible versions back out.\n\nSo, you can stick to the bitcrushers (mine or any other one you like: it\u2019s a discrete pair for sandwiching any other plugin or plugins!) or you can treat it as a terrifying new building block that wasn\u2019t directly available (far as I know) before. The plugins have gain and wet/dry controls which normally ought to be all set at 1.0, where they default. I can\u2019t tell you how to use these controls to tame the behavior because it\u2019ll vary with whichever plugin you try, and the controls don\u2019t really belong and won\u2019t necessarily give sensible results. You\u2019re on your own.\n\nAlso, you can\u2019t frame a mix using uLaw the way you could using Console: the effect is far too ugly and intense. But there\u2019s one common point: like PurestConsole, if you have just one track playing, it ought to come through pristine and perfect, no matter which single track it is. Then if any other track so much as whispers its presence, you\u2019ll have heinous distortion of an unusual kind. I would say \u2018Autechre\u2019 but they\u2019ve probably already done this before in Max/MSP. :)\n\nI make these things because I have a Patreon that frees me from starving, and also frees me from having to release popular and sensible plugins that are nice and approachable. Mind you, some of my plugins can be approachable, and I like making those too\u2026 I have progress on the mono-bass version of DubSub, and I\u2019m happy with BassKit, the streamlined and polished mono-bass-enhancer that lets you beef up tapey or bassbin-y fatness in mono or add literal subsonic thunderousness with the octave divider\u2026 but thanks to the freedom of the Patreon I can make things that are truly themselves, with no nod to popularity whatsoever.\n\nuLaw is like that. You probably don\u2019t have it because it\u2019s ugly and strange and needs to be designed into a more sensible configuration, typically with a bitcrusher and nothing else, because nearly anything else you do with it produces horrible noises.\n\nI\u2019m genuinely happy to bring you this audio chainsaw. You never can tell what will be handy, either as the pair, or individually: logarithmic processing may well find creative uses. Have fun!",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Ultrasonic",
    "description": "a very clean, plain, high quality supersonic filter, for using inside digital mixes",
    "tags": [
      "Latest"
    ],
    "slug": "ultrasonic",
    "short_description": "a very clean, plain, high quality supersonic filter, for using inside digital mixes",
    "full_description": "Now here\u2019s a handy little utility plugin\u2026 sort of the ultimate Airwindows plugin, not only does it not have an interface, it doesn\u2019t have a sound! :D\n\nHere\u2019s why you should care\u2026 especially if you work at high sample rates.\n\nAliasing in digital mixes is annoying. You typically don\u2019t hear it directly, but it coarsens and flattens the mix, throwing all sorts of funny harmonics in there at random frequencies, like subtly ring modulating everything (the aliased harmonics go off on frequencies not related to the original notes, and clash). It\u2019s often very subtle, but it turns up everywhere you have nonlinearities. If you distort stuff in digital mixes, you run straight into aliasing problems. Same if you compress, or do anything nonlinear\u2026 and even if you make a mix as pristine and minimal as possible, if you\u2019re mixing in the Airwindows Console system that uses nonlinearities too.\n\nYou can run at higher sample rates and that gives you more room, you can use soft saturations (like what\u2019s in Console) and that makes the harmonics appear in order so only the highest frequencies will fold back and alias, but it\u2019s in a computer: you\u2019ll always run into the limits of juggling numbers and calling it music, and you\u2019ll experience aliasing through nearly anything you do.\n\nBut what if you just took those problem frequencies away?\n\nUltrasonic is very simple. It has no controls. It\u2019s a really steep lowpass filter at 20K (five poles, and it works out to 10th order Butterworth filtering). Unlike some \u2018audible\u2019 Airwindows filters that are supposed to sound interesting, Ultrasonic doesn\u2019t use internal Console processing: that would be a nonlinearity, and defeat the purpose. Instead, it\u2019s a super high resolution very boring and plain supersonic filter, calculating stuff at long double resolution, dithering its result to whatever floating point buss your DAW uses, and otherwise having no sound of its own.\n\nDrop it into your (preferably 96k or 192k) digital mix and it will clean up anything nonlinear that goes after it. This includes Console! Just because Console \u2018decodes\u2019 doesn\u2019t mean it can\u2019t be hurt by aliasing of its nonlinearities: it just distorts so gently that it\u2019s not automatically worse, but any aliasing that turns up in ConsoleChannel doesn\u2019t get taken away by ConsoleBuss. Digital only gets worse, not better, and the trick is to make it get worse as slowly as possible while you work with it.\n\nWhen you use Ultrasonic, for instance on every channel in a Console mix, you trade a degree of rawness and immediacy for an ease and smoothness that is immediately apparent if your stuff is running into nonlinearities anywhere. In many ways it makes the digital mix sound more analog. The tradeoff is, it\u2019s still five poles of biquad filtering, and it will make stuff sound a bit slick, a bit more \u2018processed\u2019. You can kinda hear that you\u2019re doing the extra processing, but the texture change is really appealing: stuff sits back (less super-treble will always sound more like the audio \u2018sits back\u2019 and is more polite) and bright shiny stuff sounds purer and sweeter. This is all the more true if you\u2019re processing heavily.\n\nIt\u2019s very easy to use: just put the plugin before anything that might alias. By itself it should have no sound (though if you have true 96k or 192k audio, it of course is obliterating your real supersonic content). There are no controls and nothing to do, it isn\u2019t itself nonlinear so it shouldn\u2019t interact with anything, you don\u2019t have to gain stage it or pay any attention to it at all. Very plain, simple, hopefully pretty low-CPU for all that it\u2019s five poles of filtering at stinkin-high calculation accuracy.\n\nPut it on everything that you want to smooth out and un-digitalize. Sometimes there\u2019s nothing quite like beating the problem into the ground with a sledgehammer. For frequencies over 20K and the aliasing that loves them, this is that sledgehammer. (It is also biquad filtering, so it runs with zero latency and you can track through it)",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "UltrasonicLite",
    "description": "just one stage of supersonic filter, for using inside digital mixes",
    "tags": [],
    "slug": "ultrasoniclite",
    "short_description": "just one stage of supersonic filter, for using inside digital mixes",
    "full_description": "",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "UltrasonicMed",
    "description": "two stages of supersonic filter, for using inside digital mixes",
    "tags": [],
    "slug": "ultrasonicmed",
    "short_description": "two stages of supersonic filter, for using inside digital mixes",
    "full_description": "Hi! This is just what it says on the tin. Airwindows Ultrasonic is the stacked-up, five-biquad filter that rolls off everything above 20k, so in theory it has no sound of its own. It\u2019s there to work in high sample rate mixes, between plugins that have nonlinearities and don\u2019t have their own filtering (some of mine do, like Console7) and it will clean up the top-end of a digital mix.\n\nBut, the original Ultrasonic has SO many stages of filtering that it starts to become audible, softening the highs, and if you used lots of them you\u2019d eat your CPU and would be over-processing.\n\nSo, enter Ultrasonic Lite (and Ultrasonic Medium).\n\nThese are the same sort of thing, except Ultrasonic Lite has only one stage of filtering, and Ultrasonic Medium has two. They also start a teeny bit higher, on the assumption that if you\u2019re reaching for a Lite version of the filter, you\u2019re looking to not hammer your highs too much. Ultrasonic Medium also subtly staggers the placement of its filters so it has a two-stage roll-off that is hopefully more natural sounding than just doubling up Ultrasonic Lite on its own.\n\nUse these just like you would use Ultrasonic, if there are places in your digital mix where you think you\u2019d benefit from suppressing ultrasonic frequencies. These are not brickwalls: the idea here is that you can sprinkle these throughout your mix, anywhere you like, both before and after things that are nonlinear and distorty. For the strongest possible effect, use the original Ultrasonic\u2026 but in places where you don\u2019t need that much help with the ultra-highs, try Medium or Lite and apply a cleaner, subtler filter that lets more of the air through.\n\nIf you\u2019ve got something that\u2019s causing an aliasing that will give problems further down the mix chain, and you put Ultrasonic Lite in front of it and the aliasing that would\u2019ve bounced back down to 40k is turned down before it even aliases, making that unwanted 40k quieter\u2026 and then there\u2019s another Ultrasonic Lite afterwards and that directly turns down the unwanted, aliasing 40k\u2026 then you\u2019ve got a gentle, distributed aliasing suppression across your whole mix, that will really control the tendency of aliasing to just build up and go critical on ya :)\n\n(followup: turns out using many instances of this WILL tend to roll off your highs, where using the full version won't. This is because the full version's doing more processing, but creating a steeper filter. This insight led to UltrasonX, and later versions of Console)",
    "categories": [
      "Brightness"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "UltrasonX",
    "description": "a method for rolling your own Console-type systems with total control over your ultrasonic filtering",
    "tags": [
      "Latest"
    ],
    "slug": "ultrasonx",
    "short_description": "a method for rolling your own Console-type systems with total control over your ultrasonic filtering",
    "full_description": "A little while back, I made a simpler \u2018Ultrasonic\u2019 filter, with the intention of making a lighter-weight utility that could be used where Ultrasonic might go. The idea was, Ultrasonic (which is already available) was too heavy: it uses five stages of biquad filtering and I thought doing the same thing with just one or two stages would be better.\n\nTurns out you can do that, but if you stack them up you start losing the super-highs. The one or two-stage versions weren\u2019t steep enough: didn\u2019t bring out the super highs close enough to the ultrasonic zone. But, the five stage version is still just too much processing to put all over the mix. What do?\n\nUltrasonX solves this problem (that maybe nobody but me had :) ).\n\nThis is a plugin that does any one of the five stages in Ultrasonic, one at a time. It\u2019s got settings for A, B, C, D and E stages. Each of these are a carefully calibrated resonance value, that add up to nice and flat and clear all the way up to the supersonic region.\n\nConsole7Cascade does something like this, internally, and gets a particular tone because its \u2018more resonant A stage filter) is before distortion, and the softer unresonant filters that compensate for this are after the distortions.\n\nBut here\u2019s the thing: if you want to make a Console topology where the channels aren\u2019t overly brightening, but you\u2019re feeding a submix buss that is more crunchy and shouldn\u2019t be hit too hard, you can do that too. This is likely going to end up my problem but now you can experiment!\n\nTo do that, construct a Console system, using an earlier Console or PurestConsole (the original) and see to it that there are exactly five instances of UltrasonX in each signal path. Maybe two on each channel, two on the submix, one on the 2-buss! Or, one on each channel before hitting the PurestConsoleChannel, one on the 2-buss before the PurestConsoleBuss, and then three more sprinkled between your 2-buss processing. And any of these can be the \u2018pre-brightening\u2019 or \u2018complementary darkening\u2019 ones, meaning you could have the brightness boost after summing for a bit of air in between your instruments, or early on for softening saturation and adding glue.\n\nOr, you could use it anywhere, or on one single channel (that didn\u2019t have ultrasonic filtering) as long as you\u2019ve got room to fit five individual filter plugins. Bottom line is, if your audio goes through ABCDE and comes out the other end, it should be correct. The rest is up to you :)",
    "categories": [
      "Brightness"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "UnBox",
    "description": "a distortion where only the harmonics that don't alias are allowed to distort",
    "tags": [
      "Latest"
    ],
    "slug": "unbox",
    "short_description": "a distortion where only the harmonics that don't alias are allowed to distort",
    "full_description": "While I\u2019m putting out my library of plugins according to plan, sometimes I need to take a detour into new stuff. UnBox is one example.\n\nThe idea\u2019s as follows: if you distort stuff digitally, it aliases. This can be seen as harmonics seemingly bouncing off the highest frequency, and going back down again. The idea is that if you have digital saturation or distortion without massive oversampling, you\u2019ll always have aliasing and everything is ruined forever.\n\nThat\u2019s not quite true. It depends on the frequency, and the form of distortion\u2026 and many of my plugins have gentle enough distortion curves that they throw a limited number of harmonics. If you are only generating harmonics within the range of digital audio\u2019s frequencies, you\u2019re fine and there will be no problem until you feed the system a frequency that\u2019s too high. You\u2019re not automatically feeding superhigh frequencies all the time if you\u2019re working with natural recordings: not all sounds contain that kind of high frequency content.\n\nIf you DO have that sort of high frequency content, what then? It occurred to me I could take the difference between dry and distorted, store it in an averaging filter, and average it. This would suppress high frequency content in only the distortion artifacts. (I then learned that I needed to average the signal being fed to the distortion part, which is Spiral again: it got a little complicated)\n\nAnd I could even highpass the distortion part\u2026 and all this is applying only to the distortion part. It\u2019s all handled as a single subtract from the raw signal coming in.\n\nWhat that means is this: UnBox is a distortion that cuts down the level of the signal, but ONLY the mids. Depending on how it\u2019s set, it will let through more and more of the \u2018dry\u2019 highs, unaffected. It\u2019ll also let through a hint of bass for definition. Underneath this layer of clarity, the distorted part can be made pretty distorted, but it\u2019ll stay free of aliasing even up into the high frequencies, because those frequencies aren\u2019t actually getting applied to the distortion, and the distortion output\u2019s also being smoothed after the fact. So you\u2019ve got a texture-thickener, an energy-adder, that retains a very analog quality because all of the overtones stay clear of aliasing WITHOUT oversampling. The raw sound is still a direct pass-through and that\u2019s where the clarity comes from.",
    "categories": [
      "Saturation"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Verbity",
    "description": "a dual-mono reverb, which uses feedforward reverb topology",
    "tags": [],
    "slug": "verbity",
    "short_description": "a dual-mono reverb, which uses feedforward reverb topology",
    "full_description": "Late nights of reverb hacking (ok, Monday mornings?) give rise to a new best reverb. At least, best for me. Perhaps it\u2019ll count as \u2018best\u2019 in general, we shall see, that is rather a matter of taste but it\u2019s my new favorite and is inspiring me a lot.\n\nMeet Verbity.\n\nThis came from experiments in feedforward reverb topology, something Casey from Bricasti likes to recommend. Well, I can see why! Verbity uses the same Householder reverb matrices as the previous Reverb and MatrixVerb, but instead of each bank feeding back on itself, each bank feeds another bank and only the very last one of three, feeds back to the start again. I\u2019m going to call this innovative not because it\u2019s such a novel concept, but because it\u2019s innovative to me, as I\u2019d never figured that stuff out before. There are interesting things having to do with how you arrange the delay times across the three banks, and I\u2019ve got some concepts from MV going for less sustainy spaces that should help spatial plausibility, and I\u2019ve made some choices around the wetness and filter controls that are a little unusual.\n\nBottom line is, listen to this thing! I\u2019m real happy with the tone of it. I feel it sort of kills all my previous reverbs, which is awkward when I named one of them \u2018Reverb\u2019, but my namespace issues won\u2019t affect your reverb tones. Just listen! Casey\u2019s a wise man, and was certainly right about the usefulness of feedforward networks. I haven\u2019t got any of his code or any other hints from him\u2026 but all the same, that one detail made a huge difference.\n\nThe Darkness control has one quirk to be aware of: you can adjust it all the way to total darkness, 1.0 which translates to complete lowpass filter. Be aware that if you do that, you can trap DC energy inside the filter, so if you\u2019re going for extreme filtration try to adjust so that the value is nearly 1.0 without actually being it. For most purposes that should work: I just don\u2019t like to restrict the controls. For any normal use you won\u2019t have Darkness nearly that high anyhow.\n\nThe Wetness control is not exactly a traditional Dry/Wet, so I\u2019m using Wetness as the name. What it does is, as you increase it you add Wet up to 0.5 setting without turning down Dry AT ALL. Verbity can be used on stems and busses in a Console mix to put excellent custom reverb spaces on things, and set up this way you\u2019re not constantly shifting your dry-signal level when adjusting, you\u2019re just adjusting the verb level in there. If you go beyond 0.5, you start attenuating Dry while leaving Wet at full crank, and for sends you\u2019ll want Wetness to be 1.0 just as it would be with a Dry/Wet.\n\nThis is a dual mono verb, so for now you don\u2019t gain anything adding Srsly2 unless you have actual stereo content going in. Centered stuff is going to stay centered. You might not notice right off since it\u2019s so deep, so I\u2019m telling you. This is consistent with my other reverbs, except that MatrixVerb and Reverb are able to add stereo pitch bending which will spread center content. Verbity is your basic Airwindows Bricasti-style reverb, which also means it doesn\u2019t have pitch shifting: Casey doesn\u2019t like it, and this is an exploration into the things Casey\u2019s talked about publically, to see if his wisdom leads to better reverbs.\n\nSigns point to yes :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "VerbSixes",
    "description": "a calibrated reference reverb plugin for Householder matrices",
    "tags": [
      "Latest"
    ],
    "slug": "verbsixes",
    "short_description": "a calibrated reference reverb plugin for Householder matrices",
    "full_description": "The only thing small about this is the interface, and there's a reason for that.\n\nVerbSixes applies Householder matrices to produce reverb, and it's named VerbSixes because it escalates things up to the point of 6x6 matrices. Normally you get 4x4 matrices in conjuction with allpass filters which smear out the sound (example: my CloudCoat plugin is made up entirely out of allpass filters, as is MV). There's a reason other matrix sizes aren't popular: firstly, you can use multiple 4x4 matrices, and secondly the math is messier with other sizes. With the 4x4 you can feed all the delays into all the other delays at unity gain, just flipping the polarity.\n\nA 3x3 matrix gives you 27 distinct echoes out of 9 different delay lines.\n\nA 4x4 matrix gives you 256 distinct echoes out of 16 different delay lines, only 7 more, and the math is quite straightforward.\n\nA 5x5 matrix, which I've been doing for all the kVerbs I've made, uses only 9 more delays to get 3125 distinct echoes\u2026 which is an impressive jump from 256, especially when you're using the ability of a Householder matrix to feed back into the input again. That'll quickly get you lots of echo density, though it'll sound repetitive with smaller matrices like 3x3 or 4x4. 3125 with regen is a lot, though the math requires multiplications by -2 and 3.\n\nA 6x6 matrix gives you 46,656 distinct echoes BEFORE regen. And all the math is either unity gain or times 2\u2026 which of course we know as BitShiftGain, a math operation that only changes the exponent and doesn't alter the mantissa of the floating point number in any way (one of the secrets of the old Midiverb, which didn't have floating point math capable of complicated multiplication).\n\nVerbSixes comes with a built-in 6x6 matrix with a calibrated amount of regeneration, so it's the most recent generation of Householder matrices, prepared to produce extremely lush fluid reverb, in spite of having no filtering or allpasses whatsoever. In fact it has no controls either: it gives exactly one RT60 no matter what the reverb is.\n\nThat's because VerbSixes is also set up to demonstrate 5x5 reverbs. And 4x4. And 3x3\u2026 and ANY COMBINATION of those things.\n\nSo if you're making a 4x4 matrix, generating variations on them with my program IntoTheMatrix, you can compare the results knowing they're going to be consistent. They're also pretty consistent with the other matrix sizes (to the best of my ability) and a full range of delay lengths (smaller spaces will tend to get louder). It's a reference reverb maker, running all wet, and you can put it on an aux or just wallow in depth, and if you can get the VerbSixes code to compile and also run IntoTheMatrix, you can generate anything and try it.\n\nOr you can use it just as a plugin, which is a 6x6 giant hall\u2026 times an entirely separate 4x4 matrix, so call it 256 giant halls laid end to end.\n\nJust short of 12 MILLION echoes, even without regen. And they both have regen.\n\nI'll give you more reverbs based on this technique, but enjoy the new bigger-than-Cosmos space :)",
    "categories": [
      "Reverb"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "VinylDither",
    "description": "a high-performance dither that converts digital noise to \u2018groove noise\u2019",
    "tags": [],
    "slug": "vinyldither",
    "short_description": "a high-performance dither that converts digital noise to \u2018groove noise\u2019",
    "full_description": "To explain this dither, I\u2019ve got to talk about SACD (DSD) a little.\n\nThere\u2019s a super-hi-fi digital format known as DSD (direct stream digital). It uses a sample rate in the megahertz, but not as many bits (as few as one, even!) and is tricky to work with. It\u2019s a bit like having Class D amplifiers: those also use an incredibly high frequency switching system, and produce a clear, fluid sound that totally lacks some audio flaws.\n\nDSD is like that. There are some things it does incredibly well, and other things it gets wrong. Notably, it\u2019s incredibly good at delivering accuracy on deep bass notes, but it\u2019s all over the place on supersonic frequencies and can produce a \u2018splat\u2019 of high-frequency overreaction if you drive it too hard there. The performance of DSD increases as frequency lowers. All its ugly is reserved for the super-highs, but nothing comes close in the midrange, low mids, bass and so on. That\u2019s fundamental to how the format works: accuracy becomes a statistical pitch-related thing and the deeper you go, the more of a lock DSD has on the sonic truth.\n\nWhat if it was possible to emulate this behavior in a dither? First, you\u2019d need to use a really intense noise shaper, not just dither noise. Then, you\u2019d have to make it have the same frequency-related thing where lows get increased accuracy. And lastly, you\u2019d pay the same price: it\u2019d drive the error of the system into the highs and do a lot of unpredictable, ugly things there.\n\nMeet VinylDither! It\u2019s the extension of an old dither I had called Ten Nines, which does exactly this. With Ten Nines I was able to get a noise floor under -200db on 16 bit audio (if I remember correctly)\u2026 but only at frequencies ten hertz and below! It also spit out loudish crackling noises at high frequencies. The experiment worked, but not everybody loved it.\n\nHowever, if you weren\u2019t paying close attention, the noise behavior was kind of like record surface noise, and that gave me ideas.\n\nVinylDither is the result of pursuing those ideas. It\u2019s a dither/noise shaper which completely removes the \u2018steady white noise\u2019 noise floor of normal dithered digital, and replaces it with a more crackly, surface-noise kind of sound. That\u2019s produced from storing up error energy that would mess up your midrange and bass, and releasing it in bursts and sparks. VinylDither is the first of three dithers I\u2019m releasing that are professional quality, boutique dithers and sonically better than TPDF. If it\u2019s really important to you for your noise floor to be featureless and sound like white noise down there, you won\u2019t want this. However, if you\u2019re an analogophile and like vinyl records, you\u2019ll instantly recognize the \u2018vibe\u2019 of this one. It does an incredibly good job at giving \u2018vinyl\u2019 clues down at the threshold of hearing but this is not a \u2018sound effect\u2019 being added, it\u2019s the natural digital error being rearranged to get that effect.\n\nSo, if you want \u2018vinyl\u2019 effects added to your mix so it sounds like a retro vinyl record coming off the computer, this is the single subtlest way you can do that, plus you could combine it with other things (like the Audio Unit \u2018ToVinyl\u2019 which does elliptical EQ and has an amazing groove wear emulation built in) and get a completely different vibe. Wrecking your sounds with heavy overprocessing isn\u2019t necessary! You can just pick specific things to give a more subtle vinyl feel, and VinylDither is the perfect dither choice for it. Yes, it\u2019s got more depth and warmth and vibe than plain old TPDF (or truncation), but I think the interesting part is examining the faults of VinylDither (crackling noises, not smooth noise) and understanding how they can be turned into advantages (crackling noises OK, do not correct! As it says on my vinyl copy of Live At Leeds cooge )",
    "categories": [
      "Dithers"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "VoiceOfTheStarship",
    "description": "a deep noise tone source",
    "tags": [
      "Latest"
    ],
    "slug": "voiceofthestarship",
    "short_description": "a deep noise tone source",
    "full_description": "This is the core of Noise, in maybe a more approachable form. The algorithm works like this: you do a random noise wander, where the audio output drifts around randomly with random amounts being added and subtracted from it. This is known as a random walk, and even if the amounts are equally positive and negative, the result will do two things: it'll give you more of a bassy rumble, and the loudest part of this bass will be a DC component. In other words, you can't use this directly for audio, because it won't make frequencies.\n\nVoice Of The Starship uses a flipping variable to alternately add and subtract the randomness, which is what makes the amounts equally positive and negative, but it does one more thing: it runs another variable so that, periodically, it'll take a moment to check whether the output is above or below zero\u2026 and at that moment it will ALWAYS use the randomness to move toward zero.\n\nThis is enough to fix the DC problem, without adding a filter. (mind you, VOTS does also have lowpass filtering to help with the dark tonalities.) When you adjust Voice Of The Starship to have a less bassy noise, what you're doing is making it revert to zero more often, still with the simple randomness it's using.\n\nThis lets you go from regular noise to deep dark noise to purely subsonic rumble. I also used this algorithm for background ambience in my game Counterpart. Now it\u2019s open source under the MIT license, so other game projects can have algorithmic noise (better and more flexible than wave files)",
    "categories": [
      "Noise"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Weight",
    "description": "a very accurate sub-bass boost based on Holt",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "weight",
    "short_description": "a very accurate sub-bass boost based on Holt",
    "full_description": "Weight is a plugin I made for me. Especially when I record live drums to simple stereo mics, or a DI bass, or indeed a guitar through an iso cab, I'll often want a little extra deep sub-bass. There's plenty of EQs I could reach for, to do that.\n\nRecently I worked on Holt2, which Weight is based on, and I found it had an ability to bring up a really vivid, resonant bass boost. It's a somewhat nonlinear algorithm, and with Holt2 I added a bunch of stages, more poles of filtering, with controls for how much resonance you wanted to get to.\n\nWeight just focuses on the 'very resonant' zone. I tuned it using Voxengo SPAN (as there's no specific formula for tuning this to any particular frequency, I had to discover what produced the right tunings) and set it up to gently go from pretty resonant, to very resonant at full crank. Weight can be tuned from 20 hz to 120 hz, which should cover a good range of sub-bass. The boost is to be applied by ear, and in many situations will be a change in character, not a big jump in overall bass level. The Weight control goes from 0 to 1, and unlike Holt it's not a dry/wet: it's added to what is otherwise a totally untouched signal, dry to dry-plus.\n\nTo use this, you should have extremely good subwoofers. I'm not convinced even the best headphones can really represent what this does. The Q of the filtering (zero latency, nonlinear, unusual) comes out so sharp that you can really hunt down finely grained distinctions of bass frequencies. My Monitoring plugins set to 'Subs' or the plugin SubsOnly, can help, by focusing in on the subs in a way that overdrives them and brings the harmonics up into the audible range. But you have to be able to hear what's being done because it's very specific.\n\nThe concept here is sub-bass boosting in 'areas of power' rather than just 'areas of preponderant energy' (thanks to 'Slipperman' for these concepts). To work with Weight, you will end up finding distinct frequencies for each instrument, in order to bring up subsonic weight in places where it is NOT already obvious. You'll not want to reinforce muddy deep stuff that's already there, Weight is for being able to focus in on spots where the muscle is, not just the rumble.\n\nIt's a specialty tool, though variations on it are very likely to appear in other things, perhaps alongside a much broader, more easy to hear bass control. You can have Weight now: hope you like it :)",
    "categories": [
      "Filter"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Wider",
    "description": "Airwindows stereo space shaping",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "wider",
    "short_description": "Airwindows stereo space shaping",
    "full_description": "Here\u2019s a nice little building block. It\u2019s stereo-only for obvious reasons (in AU, you won\u2019t see it available on mono tracks): it\u2019s a stereo space adjuster.\n\nIt works like this: you\u2019ve got mid and side channels, but taken up several notches. Instead of being adjusted by level controls, the sliders use the Density algorithm. That means if you\u2019re boosting, they get fattened up, and if you cut, they retain some of the edge and definition. This technique from Density has a way of moving audio\u2019s position in space: boost comes forward, and cut moves backward. It turns out that\u2019s perfect for manipulating the shape of a stereo space.\n\nBut that\u2019s not all: as a final space-manipulating technique, Wider applies an itty-bitty time delay and interpolation (it can be as small as sub-sample) to whichever is the least forward, mid or side. That causes a delicate roll-off and sits the relevant part just a tiny bit back, spatially\u2026 and then the audio\u2019s recombined into stereo again. It\u2019s a bold thing to try, but it\u2019s done very subtly so you wouldn\u2019t know it was happening except I\u2019ve just told you, so my secret is out :)\n\nThe result is this: you can kinda-sorta use Wider to produce extreme stereo effects (look for StereoFX, coming soon, as a better way to get aggressive with space) but it really comes into its own when used to redesign stereo soundfields. With tiny, small adjustments, you can get hugely effective results that sound totally natural. This is the mastering-grade one, where you can transform the source in a convincing and musical way, and not lose anything in the process. The effectiveness and transparency, especially when used for tiny corrections, will make this a go-to plugin for real stereo work.",
    "categories": [
      "Stereo"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "Wolfbot",
    "description": "an aggressive Kalman bandpass with evil in its heart",
    "tags": [
      "Latest"
    ],
    "slug": "wolfbot",
    "short_description": "an aggressive Kalman bandpass with evil in its heart",
    "full_description": "So it's possible that I simply went too far.\n\nThis was inspired by, and specifically modelled after, the famous transformer DI 'Wolfbox', which I don't have. I had only a youtube video made by somebody who did have a real Wolfbox DI (and at that, not a vintage one) and who was A/Bing it against a different DI. I'm putting this out because I was asked to, but understand that it's a science experiment.\n\nAnd by that I mean, literal science experiment. It answers the question, 'what happens when you use two Kalman filters to mimic the bandpassing of a vintage transformer DI box?' plus there's a bit of saturation on the end. The saturation is not the aggressive distortion you hear: that's the Kalman filters acting as comes naturally! It's possible that DI bass is the single worst signal you could try to put through this plugin that was designed to work on bass, and voiced using examples of bass and DI guitar. It's possible something has gone quite horribly wrong.\n\nOr.\n\nIt's possible that this will come in handy more than anybody imagined. The thing is, I worked real hard to get the 'voice' of this dialed in just right, and THEN checked to see what it was really doing. It has a bit of saturation (should rein in snaps and pops nicely) but the grind it delivers isn't from that, it's from specifically the highpass Kalman filter, which is turning the whole sound into a sort of bass horn! I was shocked to see how much this strange plugin turns otherwise normal DI signals into sort of fat beefy pulse waves. Wolfbot is not gentle, and doesn't have any more controls than the original Wolfbox did, and while some kinds of sounds (drums, snares etc) get voiced in a convincingly 'bandpass' way, other sounds like the DIs it was designed to do, get utterly transformed.\n\nIt acts more like a bass amp than a transformer DI, but more like some strange new invention than either\u2026 and the specific way it retains the hammering, brutal directness of bass low-mids, while wiping out irritating string-gloss (even on a Rickenbacker bridge pickup) and nuking ALL the real bass to make room for kick drums and sub-synths, means in a strange way Wolfbot entirely succeeded. I have a pile of amp-sims, multiple DIs and transformer DIs, and real amps, and none of them are even close to doing this, whatever 'this' is.\n\nI need to try it in some mixes, and so can you. I bet I can add deep-bass boosts and get something else out of it, but even just as it is, I can immediately hear how it would fill in a spot where bass guitars are supposed to go. It's just that rather than going crazy on the channel EQ, or running a bass amp and going crazy on that, it will just do that sound right away and it'll sit in an otherwise full-range mix reinforcing exactly what I want the bass guitar to reinforce.\n\nI've looked at the output in a wave editor and it's terrifying to think that this monstrous thing is probably my new go-to DI bass plugin, but here we are. Oh, and I bet you anything this makes basses project better on a phone. Have fun :)",
    "categories": [
      "Amp Sims"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "XBandpass",
    "description": "a distorted digital EQ, inspired by retro sampler DSP",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "xbandpass",
    "short_description": "a distorted digital EQ, inspired by retro sampler DSP",
    "full_description": "Hi! This is the bandpass version of the X series Airwindows filters. If you know what a bandpass is you can probably figure out what\u2019s going on here. More detail in the other filter types: the X filters mean experimental, and they're also written before I was interpolating coefficients, so these filters may produce zipper noise when adjusting them on the fly. However, that also means they are more CPU-efficient: it's a tradeoff.",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "XHighpass",
    "description": "a distorted digital EQ, inspired by retro sampler DSP",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "xhighpass",
    "short_description": "a distorted digital EQ, inspired by retro sampler DSP",
    "full_description": "Continuing the weird filter pursuits while I work on the M1 compiled VSTs! This is another distorted filter, except that if you distort the insides of a biquad highpass it makes NASTY zapping noises.\n\nSo\u2026 yay?\n\nThose who like that sort of thing might like this. It\u2019s pretty good at making really mean aggressive highpasses, except that you can\u2019t clean up the results by dropping the frequency down into the bass and subs: it will just clip easier, which will cause more horrible zap noises. So I guess, only try this if you like that sort of thing. They can\u2019t all be zingers, though this one is quite literally a zapper :)",
    "categories": [
      "Utility"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "XLowpass",
    "description": "a distorted digital EQ, inspired by retro sampler DSP",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "xlowpass",
    "short_description": "a distorted digital EQ, inspired by retro sampler DSP",
    "full_description": "Welcome to the Airwindows journey into vintage sampler land! This might prove to be a long journey, but every journey starts with a first step.\n\nMaybe the first step was Mackity and MackEQ: hardware mixer emulations. (that\u2019s not necessarily done, either: it\u2019s the 1202, beloved to French House music, that I did, but the DnB-hounds liked the 8-buss.) But the follow-up is just the sort of thing I might want to look into: certain of the E-mu Z-plane filters. Apparently not even the really fancy stuff\u2026 but the way that the simple lowpasses and highpasses would distort when you abused them. And it seems nobody\u2019s that interested in exploring that, because these are not analog filters or particularly sought-after, except by those in the know.\n\nAnd we know some stuff about them, because the information is out there\u2026 but a lot of devs don\u2019t think of them as interesting. They\u2019re biquads, with hard clipping inside the EQ code, and implemented in certain ways for efficiency: and if you can have properly made stock DAW filters, why would you want lower-bit calculation or clipping or stuff like that?\n\nXLowpass\u2026 is NOT the end destination. There will be more like it but the X series of Airwindows filters (handy to look up in the plugin list) are NOT the carefully tailored E-mu emulation (or at least tone-alike, to the best of my ability?) XLowpass is getting familiar with the CONCEPT, an internally distorted multi-stage biquad and how I can manipulate it to get sounds out of it. It\u2019s not meant to itself sound like an E-mu e6400 (that being the sampler I have, so far), but it\u2019s a plugin that can dial in a whole range of the craziness people had to go to a lot of trouble to do in the real sampler (internal distorting and so on). And you can run it into Mackity and see whether you\u2019re within striking distance of some of the more gnarly DnB tones that belonged to the 90s, seemingly lost to time.\n\nAnd when the Y series comes out, things will be even more off the hook, because Y stands for \u201cWHY would you DO that?!?\u201d and it means I do the same thing, except with wavefolding on the internal distortion. So those should get GNARLY.\n\nAnd then when I get to work on the eventual ZLowpass etc, and stack them up against real Z-plane hardware (note, however, I will not be cloning the algorithms, I am just going to try and get the tone the same), then I\u2019ll have some practice under my belt.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "XNotch",
    "description": "a distorted digital EQ, not as glitchy as the others",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "xnotch",
    "short_description": "a distorted digital EQ, not as glitchy as the others",
    "full_description": "This is a little different from some of the X series filters. I was asked whether I could do a notch filter like the other stuff I\u2019d been doing: all these filters with Nuke controls that do crazy things when you distort them.\n\nThis is not quite like that.\n\nXNotch is the same topology: biquad filters, with distortion stages in there. But instead of distorting inside the filter for crazy behavior and weird noises, this one distorts BETWEEN stages of filtering and that makes it act much more normal. So\u2026 why would I include it in the weird-zone with stuff like XHighpass?\n\nBecause the combination of those things and the dry/wet control makes it INCREDIBLY useful.\n\nWhat you do is, for a sound source (for instance a kick drum mic), you dial in a notch where you want it. As you add input drive, or increase Nuke, the saturation will get more and more intense, but only apply to the stuff outside the notch. You can thicken up percussive sounds very well this way, or take drum overheads and focus on the treble sparkle by notching out midrange, or sweep it around for a phasey effect (this plugin is unusually well-behaved for automation, for some reason the notch biquad takes modulation better than usual) and then bring in dry to balance the intensity of the effect.\n\nBut if you\u2019re using it to thicken up sounds, you can continue to push the saturation or Nuke while you\u2019re doing that, which means you\u2019re contouring both the tone and the compression of just the stuff you\u2019re trying to enhance, and balancing it against a dry signal that\u2019s effectively uncompressed/unsaturated. The real reason I knew I had to put this out just as it was, is because it became easy to just dial this stuff in, with very few controls, and no fuss.\n\nIt doesn\u2019t do crazy things (unless you count allowing for heavy distortion) but the thing it does, is a thing I\u2019ve been needing. I think it might replace Console7Cascade for some of my drum tracks, just because it can saturate and also notch, which will give me a way broader spectrum of available, useful tones.\n\nAnd now you\u2019ve got that, too :)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "XRegion",
    "description": "distorted staggered bandpasses, for extreme soundmangling",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "xregion",
    "short_description": "distorted staggered bandpasses, for extreme soundmangling",
    "full_description": "XNotch too normal for you? HERE YA GO :D\n\nXRegion is made out of bandpasses, like XBandpass, and if you keep the First and Last controls set the same it does act like an increasingly manic bandpass.\n\nBut, if they\u2019re set differently and the Nuke control is up (engaging more poles of filtering) here\u2019s what happens: first we go into the First bandpass, distorting before we filter (turns out if we make these filters glitch out the result is just too predictable) and then we go through each successive bandpass (up to five) each of which goes a step farther towards the frequency setting that\u2019s in Last. We\u2019re covering a region, we\u2019re spreading the response out.\n\nBut we\u2019re also distorting, each time.\n\nSo, if First is a higher frequency than Last, we get progressively lower pitched bandpasses and a sort of thick, roaring, dense tone. But if Last is a higher pitch than First\u2026 we\u2019re starting with a bassy distort, and then filtering out the SOUND and keeping only the DISTORTIONS. Oh, and the farther apart you spread the controls the more gain it uses.\n\nSo basically this is raw industrial mayhem. It\u2019s so bonkers you can use it inside uLaw and the result won\u2019t even be crazier. In theory you can use this to get a really intense bandpass effect, for instance distorting a snare or something, and carefully control the gain and \u2018Nuke\u2019 (less of that means less bandpasses, and it won\u2019t go all the way towards \u2018Last\u2019 anymore). But you can also just go nuts with it for some filter-sweepy, very distorted effects that won\u2019t be like anything you\u2019ve heard. I suspect the \u2018nice\u2019 uses of this will be much more limited, though in theory it should be as good at those as XBandpass is (to get a nice smooth distort, don\u2019t spread First and Last too wide, or set them too high or too low, and balance the result with Dry/Wet)\n\nThere are a lot of people who won\u2019t need this\u2026 at ALL. For those who do\u2026 hope you like it :)\n\nAs an aside, XRegion can do a really killer overdriven bass amp kind of a tone.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "YBandpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "ybandpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering",
    "full_description": "YBandpass has various uses. One I was trying out in the video, was setting it up as a \u2018walkie-talkie\u2019 sort of tone on my voice, and then turning up ResEdge to really trash the hell out of the audio in a characteristic way that\u2019s not easily found anywhere else. In some ways I think bandpassing is the ideal way to use ResEdge (but we\u2019ll see: haven\u2019t tried it on a Notch filter yet)\n\nOne day I\u2019ll tell you all about all the things that have been going on behind the scenes here. For now, accept my next Y series filter, and I hope you enjoy it. I feel like the Z2 series (I\u2019m leaving the original Z filters as they are because there\u2019s uses for that too and they\u2019re lower CPU, but will be doing V2 versions with the good coefficient interpolation for folks who craved absence of zipper noise) will be what folks are really excited about, but I do think these Y filters will have their place. They all give you the same characteristics with ResEdge, plus they all give you that slightly warm, unusual texture when you put ResEdge to 0 (a setting of 0.1 is what will give you closest to a traditional biquad, while still not quite being one)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "YNotBandpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "tags": [],
    "slug": "ynotbandpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "full_description": "YNotBandpass has various uses. One I was trying out in the original video, was setting it up as a \u2018walkie-talkie\u2019 sort of tone on my voice, and then turning up ResEdge to really trash the hell out of the audio in a characteristic way that\u2019s not easily found anywhere else.\n\nIn the video for YNotBandpass, the version without control smoothing, I demoed it on a bunch of huge reverb, alternating between a Bricasti Cathedral and my version of that same sound\u2026 and the more rapid switching between Freq settings turns out to sound pretty nice! Except when the ResEdge control is used to give a mean, electrical, circuit-bendy quality that still retains a lot of the depth of the underlying sound.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "YHighpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "yhighpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering",
    "full_description": "See YLowpass, except it\u2019s a highpass :) but there are several \u2018one more things\u2019, most notably an upgrade to what I\u2019ve been using for denormalization. I ran into issues with YLowpass munching too much CPU. The fixes I came up with, worked so well, that I\u2019ve applied them to Console7, Console7Cascade, Chamber, Galactic, and several plugins that haven\u2019t come out yet :) As a result, my previous video using YLowpass crept up to 70% CPU at times, and this video using the exact same setup and plugins idles around 35%. I call that a good day (OK, week) of work.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "YNotHighpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "tags": [],
    "slug": "ynothighpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "full_description": "See YNotLowpass, except it\u2019s a highpass :) interestingly, the original YHighpass saw some significant improvements in CPU usage. Turns out that going to YNot mode, with no control smoothing, boosts performance even more.\n\nYou can use YNotHighpass (or the control-smoothed version, YHighpass) to do a really unnatural, abrasive sweep up into the supersonic. It's not just about increasing resonance: the ResEdge does an unusual, nasty thing to the tone, and used as a highpass it's a really distinctive sound. I don't think it would work as a consistent part of anybody's tone for anything, but for that very reason it might be great as an unexpected move :)\n\nHope you like YNotHighpass, and I'm working on a whole bunch of more generally useful things that take longer to develop.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "YLowpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "ylowpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering",
    "full_description": "Introducing the Y filters! Where the X filters were eXperimental and the Z filters are emulations meant to sound like hardware, YLowpass is further researches before going back into the Z filters for refinements. I\u2019m using these to perfect the designs, and YLowpass is an important step in doing that.\n\nIt\u2019s got interpolated coefficients on everything, reducing zipper noise. And double ultrasonic filtering. But it\u2019s got a lot more than that: YLowpass introduces a new way to internally distort filters, and a new control\u2026 Resonant Edge! The \u2018normal\u2019 position for this is around 0.1 on the control. If you make it less, you get a slightly asymmetrical distortion that lets you get really warm analog filter sounds, even when they\u2019re resonant. I stacked a couple of these up in the video to get Alpha Juno saturated filter sounds, that being one of my favorite analog synths, and I demonstrate it directly against the real authentic Alpha Juno run into the computer using API pres for input gain, an unmistakably analog tone. YLowpass holds up pretty well under that scrutiny. And then, I bring in a drum breakbeat, and start showing off how crazy YLowpass can get. The Resonant Edge lets you go to very aggressive, glitchy sounds that are a lot more like circuit bending than bit-banging.\n\nI\u2019ll be doing further Y series, and as I go I\u2019ll be trying to refine the set every step of the way. For instance, in Bespoke I was getting some CPU issues (eagle-eyed viewers can see the CPU meter) since the Y filters will be rather heavy on the CPU. I\u2019ve got some ideas for addressing this through adding an analog noise floor factor that could become part of Airwindows plugins as a general thing: experimentation will tell me the answers.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "YNotLowpass",
    "description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "tags": [],
    "slug": "ynotlowpass",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "full_description": "YNotLowpass introduces a new way to internally distort filters, and a new control\u2026 Resonant Edge! The \u2018normal\u2019 position for this is around 0.1 on the control. If you make it less, you get a slightly asymmetrical distortion that lets you get really warm analog filter sounds, even when they\u2019re resonant. If you crank it up, the Resonant Edge lets you go to very aggressive, glitchy sounds that are a lot more like circuit bending than bit-banging.\n\nThis is the alternate version of YLowpass, except without control smoothing. That means it'll be slightly less CPU-hungry, and might be preferable for situations like use in VCV Rack at very small buffer sizes. These are also buying me some time to work on the upcoming ConsoleMC, which is beginning to take shape\u2026 and on a new update for ToTape, for which I've got an idea for a bias control. So, use YNotLowpass if you'd like slightly more CPU efficiency, if you run tiny buffers, if you are using it as a fixed filter sound, or if you want that 'neuro' glitchy zipper-noise sound, at which it'll be really good since it already has an aggressively unnatural filter tone :)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "YNotch",
    "description": "soft and smooth to nasty, edgy texture-varying filtering",
    "tags": [
      "Recommended",
      "Latest"
    ],
    "slug": "ynotch",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering",
    "full_description": "Let\u2019s get through the December doldrums with a new plugin and some new sounds\u2026 because Y Not? (-ch)\n\nYNotch is the final incarnation of the Y series plugins, done to give me more experience with smoothing plugin controls. It\u2019s got a smoothed biquad filter with more than a little extra: the Y filters all have a ResEdge control. This defaults to 0.1 (like the gain control) but it can be lowered to 0 for a softer, somewhat more organic tone\u2026 or, turned up and up and up until the filter begins to distort and act weird in very unusual ways.\n\nThis is NOT like a sampler model. It\u2019s a whole other algorithm, putting weird edges on the way the filter resonates when the Resonance is turned up. You can basically dial in the sharpness of the edge, like with the other Y filters. But unlike the other Y filters, the Resonance control goes a little further. Not in sharpness, but in dullness\u2026 you can drop resonance down to where it\u2019s basically an ultra-shallow slope cut, put the frequency to either extreme, and use the very first hints of the Resonance control to dial in an extreme low or high cut.\n\nAnd then either soften or sharpen the hell out of the edge, to get tones that don\u2019t really exist anywhere else. Demoed with a Moog Sub Phatty using a M32 as a spare oscillator with a different portamento speed, filter wide open so the YNotch can do all the filtering and produce a mad hybrid bass grind sound.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": false
  },
  {
    "name": "YNotNotch",
    "description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "tags": [],
    "slug": "ynotnotch",
    "short_description": "soft and smooth to nasty, edgy texture-varying filtering, no control smoothing",
    "full_description": "YNotNotch is the final incarnation of the Y series plugins, done to give me more experience with smoothing plugin controls. It\u2019s got a biquad filter with more than a little extra: the Y filters all have a ResEdge control. This defaults to 0.1 (like the gain control) but it can be lowered to 0 for a softer, somewhat more organic tone\u2026 or, turned up and up and up until the filter begins to distort and act weird in very unusual ways.\n\nThis is NOT like a sampler model. It\u2019s a whole other algorithm, putting weird edges on the way the filter resonates when the Resonance is turned up. You can basically dial in the sharpness of the edge, like with the other Y filters. But unlike the other Y filters, the Resonance control goes a little further. Not in sharpness, but in dullness\u2026 you can drop resonance down to where it\u2019s basically an ultra-shallow slope cut, put the frequency to either extreme, and use the very first hints of the Resonance control to dial in an extreme low or high cut.\n\nAnd then either soften or sharpen the hell out of the edge, to get tones that don\u2019t really exist anywhere else. This is the alternate version of YNotch, except without control smoothing. That means it'll be slightly less CPU-hungry, and might be preferable for situations like use in VCV Rack at very small buffer sizes. So, use YNotNotch if you'd like slightly more CPU efficiency, if you run tiny buffers, if you are using it as a fixed filter sound, or if you want that 'neuro' glitchy zipper-noise sound, at which it'll be really good since it already has an aggressively unnatural filter tone :)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZBandpass",
    "description": "a bandpass made to sound and act like the Emu e6400 Ultra bandpass",
    "tags": [],
    "slug": "zbandpass",
    "short_description": "a bandpass made to sound and act like the Emu e6400 Ultra bandpass",
    "full_description": "On we go! If you\u2019re following this project, well, this is the Bandpass version. This and ZHighpass have been adjusted to allow for more output gain (so you can work with less distorted things and balance them better with dry signal, using the left half of the Poles control to do it).",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZHighpass",
    "description": "a highpass made to sound and act like the Emu e6400 Ultra highpass",
    "tags": [],
    "slug": "zhighpass",
    "short_description": "a highpass made to sound and act like the Emu e6400 Ultra highpass",
    "full_description": "And here\u2026 we\u2026 go!\n\nI picked the highpass to attempt first off the e6400 because it\u2019s way harder. In recordings of the real unit, if you overdrive the samples you can hear how the machine flips out when you sweep the highpass up real high. Part of this is from the output stages of the device having characteristics not unlike Mackity: you get a strange overshoot, and that\u2019s from the hardware.\n\nThese are not exactly \u2019emulations\u2019 in the sense of stealing all the code out of the 6400 and then modeling the entire circuit and basically jacking the whole thing. That\u2019s not what I do, and that stuff always ends up sounding very plastic to my ear (way too much overprocessing to try and get the fiddly details the same: you end up with a clone, but soulless)\n\nInstead, ZHighpass is first in a series of Z-plugins, building on what I learned with the X series, and designed to act and respond the same as the real deal, but in the box. I got as close as I could with my own techniques, using some details (like where the filters hard-clip, and the likely Q factors) to zero in further. My hope is not as much that I\u2019ve perfectly duplicated every detail of the hardware device\u2026 but that I made a plugin with enough of the soul of that device, that you can get equally musical results out of it. You should be able to USE ZHighpass much the way you\u2019d use the real sampler and its genuine Z-Plane filters, to get filter swoops and voicings that deliver as much of the aggressive mojo you\u2019d enjoy from the real thing.\n\nExcept that you can take it a little bit farther, and adjust it in ways not available on the real-deal sampler, to your taste. \u2018Cos we\u2019re not here just to clone what DnB maestros did in the Nineties. We\u2019re playing with this particular sampler and mimicking some of its tricks because it turns out that was an amazing-sounding instrument, that gave you stuff typical DAW EQs don\u2019t even come close to offering. And now, with ZHighpass, you can easily turn your DAW into that kind of instrument, on as many tracks as you like, anytime and anywhere you like.\n\nAnd the cooling fan\u2019s (probably) way quieter. And it\u2019s easier to patch. Props to the real e6400 Ultra, though. You\u2019ll be hearing more from that, in upcoming weeks.",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZLowpass",
    "description": "a lowpass made to sound and act like the Emu e6400 Ultra lowpass",
    "tags": [],
    "slug": "zlowpass",
    "short_description": "a lowpass made to sound and act like the Emu e6400 Ultra lowpass",
    "full_description": "Onward! Today we have ZLowpass. I think this one might be the closest to the hardware yet! It works like my previous Z series filters, except it\u2019s the lowpass this time.\n\nYou might notice my video looks a bit different: that\u2019s because my Blackmagic ATEM Mini finally and permanently blew up. I\u2019m pretty sure I know why: there were times I ran it for long periods, I\u2019ve often run many inputs into it or had it working hard doing things like chromakeying/lumakeying stuff at higher resolution and downscaling the result to HD, or running my laptop\u2019s HDMI feed into it and having it upscale THAT to the higher native resolution, overlay the main camera and then downscale again to HD. On top of that, I\u2019ve had it sitting on top of my Lavry DAC, and we\u2019ve had some heat waves this summer.\n\nSo, it melted. For a while it just had its input to the computer die (I found a Razer capture card to be more reliable) and then in some livestreams it\u2019s been flaking out, and tonight it blew up for good and couldn\u2019t even run a single camera. Anyone out there, be careful with these things. They\u2019re just $300 or so, but you cannot push them too hard in warm conditions or they will melt. Or maybe the fan blew up. I know I can\u2019t return it under warranty because, being me, I took it apart to see if I could make the cooling work better. Too little too late. Be warned and don\u2019t run these little buggers hard, or do lots of up and downscaling, while sitting them on a warm thing. No more ATEM Mini.\n\nUntil I get another, that is, and this time will NOT touch a thing about it, will fill in any warranty card it has, and will probably get a little laptop cooler pad or something. Whatever it takes, because my setup ended up pretty sweet if it wasn\u2019t for the thing melting under the strain. (Replacement of the ATEM will NOT be out of what I\u2019m saving up for getting a bigger and more classic sampler. Never fear, that journey will progress unhindered.)\n\nAnyway, here\u2019s ZLowpass :D\n\n(followup: I did in fact replace the ATEM Mini, put it on a heatsink with a blue heatsink pad between, and used it extensively, and the replacement didn't melt. I ended up putting it aside and shooting video directly on the camera, so I could use 4k resolutions. The replacement ATEM with the heatsink should still be good.)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZNotch",
    "description": "a notch filter made to sound and act like the Emu e6400 Phaser",
    "tags": [],
    "slug": "znotch",
    "short_description": "a notch filter made to sound and act like the Emu e6400 Phaser",
    "full_description": "And finally, the fourth filter type (I\u2019m doing basic filters, not trying to compete with real Z-Plane releases), ZNotch!\n\nThis is made to sound like the Emu Phaser, which has notchlike qualities. At heart it\u2019s an extension of the Airwindows Z series, not anything specifically Emu Z-Plane: I didn\u2019t find a notch specifically in the Emu e6400 Ultra, but I thought the Phaser options were very notchlike, so I went for a take on those. You\u2019ll get constant highs, the ability to notch out quite deep into the bass, and that overdrive that\u2019s on tap in all the Airwindows Z plugins, plus the ability to do all that and then add that color, subtly, to the dry signal (do this by getting your distorted and notched tone just right, setting Poles to zero, turning the output up all the way and then bringing in just enough of the color that you can hear what it\u2019s doing. Adjust to taste)\n\nThis concludes the DnB-inspired sampler emulation EQs. Hopefully this bank of four Z-plugins will be handy to reach for, in the box, to get those vivid tones and grinds\u2026 I suspect I\u2019ll find \u2019em useful in the place of more \u2018normal\u2019 EQs simply because the character of the distortion will be so handy. You don\u2019t have to distort them, but since they take a little overdrive so nicely they\u2019ll serve a purpose in all kinds of slight overdrive, or character adding, situations. And since they\u2019re the Z series, you\u2019ll know where to find them even if you\u2019ve installed ALL the Airwindows plugins (and you can do that\u2026 if you dare!)",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "Zoom",
    "description": "a bank of Density-like waveshapers for subtly modulating peak energy",
    "tags": [
      "Latest"
    ],
    "slug": "zoom",
    "short_description": "a bank of Density-like waveshapers for subtly modulating peak energy",
    "full_description": "This is a little piece of what could become a new Mastering plugin, but I've got a lot of testing to do to work out whether that should happen. Zoom is waveshapers: as many as five stacked up for high gain levels, and most settings will use at least a couple. They're applied sort of in parallel: the basic idea is a lot like Density, but handled very differently.\n\nThe purpose is to try and alter, very strongly, the peak energy and only the peak energy of the sound, while leaving the loudness more or less alone. That's why the 'negative' settings, below 0.5, don't get as much quieter as those in Density. It's taking the hottest peaks and further boosting them while cutting back quieter stuff. Boosts still work as in Density, except the character will be a little different.\n\nSo, you might find the sounds of this interesting, or find that it's an amazing overdrive or 'weird expander', or whatever, but those are all obvious changes that you can hear because they're modifying the RMS loudness of the signal. And that's fine too. I'm just saying, for the last month I've been on a deep dive into Meter and the concepts around it, and I'm working towards something specific. I would like to see whether you can take an already good track and make it significantly better by heavily modifying just the PEAK energy and getting that exactly the way I want it. A new version of Meter is coming out and I'll be doing more 'vinyl hit record videos' to demonstrate what I'm talking about, and to do that I have to write new plugins that specifically master audio to work with Meter and work on the stuff I 'can't hear'\u2026 at least, not directly. If I'm right, perfecting this stuff will cause tracks to sound inexplicably amazing (and they will have to start out with the potential for amazing: some don't need help, and for others it's very obvious what must happen.)\n\nFor instance, I might have various 80s hit records where, due to the taste in mixing and mastering, there's constantly stray peaks 6 to 12 dB hotter than everything else, and I'd need to remap them to be a more continuous range of peak energy. Or, the area is too dense and could use being opened up subtly, allowing the hottest peaks to 'un-saturate' slightly without it being really audible, again to get me an area of peak energy that's as evenly distributed as possible.\n\nAnd that's what Zoom was coded to do, and why it's hard to hear what it's doing until you crank it up to the point of obviousness. It is also a simple waveshaper so you can do that while oversampling it in the DAW, which of course I won't be doing because used normally it'll barely create any harmonics at all. It's a 'zoom lens' for audio: everything is still in focus and looks the same, but the presentation has shifted in the desired direction, probably only discernable by Meter.\n\nI might still be working on Meter and far from ready to put out a Mastering that's entirely based on my untested theories, but the new Meter should be coming up just next week, and if you wanted to experiment as I am experimenting (or just slam stuff, I'm not your Mom) then here is Zoom. Have fun!",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZOutputStage",
    "description": "the output clipping from the Emu e6400 style Z filters",
    "tags": [
      "Latest"
    ],
    "slug": "zoutputstage",
    "short_description": "the output clipping from the Emu e6400 style Z filters",
    "full_description": "So I didn't get asked for this, exactly.\n\nI got asked for the exciter setting out of the Emu e6400 Ultra. And this isn't it.\n\nBut I did have an exciter (and so have you, as it's in the plugin collection.) I'm sure it's weirder and twitchier than the Emu one, but it does exist. It just won't sound anything like that sampler, because the sampler has a lot of hardware on the analog outs, as well as being probably a totally different algorithm than mine, one that I have no idea how it's done.\n\nWait a second.\n\nThe reason I got asked for this was, drum and bass guys in the UK wanted to add some insane grind and energy, to basically synth waves. And I don't have the algo for that\u2026 but my exciter is nothing if not insane, and I did an output stage on the Z filters. That would apply exactly the same to an exciter, or anything else. I'd just do it as a simple distortion, except that rather than being a normal distortion it'd use the special filtering used in the Z filters to get that 'frizz' on the edges of clipped sounds that I clearly saw in the recordings of the real e6400. If it did that on distorting filters, it would do the same on an exciter, or anything.\n\nAnd so I did :)\n\nThis goes after\u2026 well, anything. Whatever you like. Turn it up past 0.1 to distort, just like the Z filters. Turn the output way down because it's really hot. Apply to whatever digital mayhem you can wreak, and it should act a little more like it's coming off that sampler.\n\nSee ya next week :)",
    "categories": [
      "Distortion"
    ],
    "is_latest": true,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZRegion",
    "description": "an Emu e6400 style Airwindows Region filter",
    "tags": [],
    "slug": "zregion",
    "short_description": "an Emu e6400 style Airwindows Region filter",
    "full_description": "Here's one I might be needing in future, so I'm putting it out for everybody to have!\n\nThe Airwindows Z series filters are kinds of digital filtering, with sampler hardware emulation put on 'em for added color and vividness, plus a staggering capacity for gain (folks using the original samplers often internally distorted sound with gain boosts in order to get maximum color out of the Emu filters).\n\nBut what if there's a filter type that didn't even exist on the original device?\n\nZRegion is that filter. The original Airwindows Region wasn't written in the context of an Emu Z emulation, more like just experimentation. It uses the cascading filter stages and distortions in an interesting way: you're using bandpass filters and distorting them, but Region lets you stagger the bandpass frequencies so that you're successively distorting through series of different filters. A bit hard to explain, but it lets you distort on midrangey frequencies and soften into the bass, or start out with bass clipping and then exaggerate that effect with higher frequencies.\n\nThe reason I might be needing this one is, I can get pretty killer bass tones using it. I'll set the first filter higher for midrange articulation, set the last filter very low for heavy bass mojo, and it's instantly a bass-amp type of sound. And if I intend to leave the setting as a fixed setting, ZRegion will give me that with the same flavor as my other Z filters.\n\nBut if I want to automate or move the controls as part of the mix\u2026",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": false,
    "is_recommended": false,
    "is_basic": false
  },
  {
    "name": "ZRegion2",
    "description": "an Emu e6400 style Airwindows Region filter, with control smoothing",
    "tags": [
      "Basic",
      "Recommended",
      "Latest"
    ],
    "slug": "zregion2",
    "short_description": "an Emu e6400 style Airwindows Region filter, with coefficient smoothing",
    "full_description": "ZRegion2 comes out at the same time as ZRegion, but note that I'm still putting out ZRegion. This is because ZRegion will always run at lower CPU than ZRegion2, because the first plugin doesn't do coefficient smoothing. It's for if you have a fixed tone setting to use, OR if you want to have a slight glitchy/zipper-noise quality on some audio and you're moving the controls.\n\nIf you're going for automation, the Z2 filters are the ones that interpolate the coefficients across the sample buffer, meaning they'll make control changes smooth. No crackling! This eats more CPU, but a lot of the fun with these filters comes from actively manipulating them. The original sampler never had a Region filter type, but now you can make believe it did, and produce aggressive and textural bandpass-y effects across a broader range than the original sampler's ZBandpass. Hope you like it!\n\n\nThis concludes the AirwindowsPedia. Expect this file to be expanded as new plugins come in. Might end up needing one of these for the Free Studio sample instruments, eventually\u2026\n\n-chris",
    "categories": [
      "XYZ Filters"
    ],
    "is_latest": true,
    "is_recommended": true,
    "is_basic": true
  }
]